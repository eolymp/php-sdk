<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/judge/form.proto

namespace Eolymp\Judge\Form\Field;

use UnexpectedValueException;

/**
 * Field type defines looks and type of the data for the field.
 *
 * Protobuf type <code>eolymp.judge.Form.Field.Type</code>
 */
class Type
{
    /**
     * Single line of text.
     * Validation:
     *  - required - string must be non-empty
     *  - min - minimal string length
     *  - max - maximal string length
     *  - regexp - regular expression (RE2) which string must match completely (add .* to configure partial match)
     *
     * Generated from protobuf enum <code>STRING = 0;</code>
     */
    const STRING = 0;
    /**
     * Multiline text.
     * Validation:
     *  - required - text must be non-empty
     *  - min - minimal text length
     *  - max - maximal text length
     *  - regexp - regular expression (RE2)
     *
     * Generated from protobuf enum <code>TEXT = 1;</code>
     */
    const TEXT = 1;
    /**
     * An integer number.
     * Validation:
     *  - required - field must be non-empty (0 is considered non-empty value)
     *  - min - minimal value
     *  - max - maximal value
     *
     * Generated from protobuf enum <code>NUMBER = 2;</code>
     */
    const NUMBER = 2;
    /**
     * Choice, a dropdown with options.
     * Validation:
     *  - required - field must be non-empty
     *  - choices - available values
     *
     * Generated from protobuf enum <code>CHOICE = 3;</code>
     */
    const CHOICE = 3;
    /**
     * Date picker.
     * Validation:
     *  - required - field must be non-empty
     *
     * Generated from protobuf enum <code>DATE = 4;</code>
     */
    const DATE = 4;
    /**
     * Email.
     * Validation:
     *  - required - field must be non-empty
     *
     * Generated from protobuf enum <code>EMAIL = 5;</code>
     */
    const EMAIL = 5;
    /**
     * Checkbox gives simple yes/no value.
     * Validation:
     *  - required - field must be checked
     *
     * Generated from protobuf enum <code>CHECKBOX = 6;</code>
     */
    const CHECKBOX = 6;
    /**
     * City and region in Ukraine. Special case for UOI.
     * Validation:
     *  - required - field must be non-empty
     *
     * Generated from protobuf enum <code>UKRAINE_CITY_AND_REGION = 1000;</code>
     */
    const UKRAINE_CITY_AND_REGION = 1000;

    private static $valueToName = [
        self::STRING => 'STRING',
        self::TEXT => 'TEXT',
        self::NUMBER => 'NUMBER',
        self::CHOICE => 'CHOICE',
        self::DATE => 'DATE',
        self::EMAIL => 'EMAIL',
        self::CHECKBOX => 'CHECKBOX',
        self::UKRAINE_CITY_AND_REGION => 'UKRAINE_CITY_AND_REGION',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Type::class, \Eolymp\Judge\Form_Field_Type::class);

