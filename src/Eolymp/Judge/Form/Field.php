<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/judge/form.proto

namespace Eolymp\Judge\Form;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Field is a basic element of the form
 *
 * Generated from protobuf message <code>eolymp.judge.Form.Field</code>
 */
class Field extends \Google\Protobuf\Internal\Message
{
    /**
     * unique field identifier (should be unique within the form, not globally unique)
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * field localized data, such as label and help message
     *
     * Generated from protobuf field <code>repeated .eolymp.judge.Form.Field.Description description = 10;</code>
     */
    private $description;
    /**
     * type of the field
     *
     * Generated from protobuf field <code>.eolymp.judge.Form.Field.Type type = 20;</code>
     */
    protected $type = 0;
    /**
     * validation
     *
     * Generated from protobuf field <code>bool required = 30;</code>
     */
    protected $required = false;
    /**
     * regexp validation (see field types for details)
     *
     * Generated from protobuf field <code>string regexp = 31;</code>
     */
    protected $regexp = '';
    /**
     * min value validation (see field types for details)
     *
     * Generated from protobuf field <code>int32 min = 32;</code>
     */
    protected $min = 0;
    /**
     * max value validation (see field types for details)
     *
     * Generated from protobuf field <code>int32 max = 33;</code>
     */
    protected $max = 0;
    /**
     * possible choices validation (see field types for details)
     *
     * Generated from protobuf field <code>repeated string choices = 34;</code>
     */
    private $choices;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           unique field identifier (should be unique within the form, not globally unique)
     *     @type \Eolymp\Judge\Form\Field\Description[]|\Google\Protobuf\Internal\RepeatedField $description
     *           field localized data, such as label and help message
     *     @type int $type
     *           type of the field
     *     @type bool $required
     *           validation
     *     @type string $regexp
     *           regexp validation (see field types for details)
     *     @type int $min
     *           min value validation (see field types for details)
     *     @type int $max
     *           max value validation (see field types for details)
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $choices
     *           possible choices validation (see field types for details)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Judge\Form::initOnce();
        parent::__construct($data);
    }

    /**
     * unique field identifier (should be unique within the form, not globally unique)
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * unique field identifier (should be unique within the form, not globally unique)
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * field localized data, such as label and help message
     *
     * Generated from protobuf field <code>repeated .eolymp.judge.Form.Field.Description description = 10;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * field localized data, such as label and help message
     *
     * Generated from protobuf field <code>repeated .eolymp.judge.Form.Field.Description description = 10;</code>
     * @param \Eolymp\Judge\Form\Field\Description[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDescription($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Eolymp\Judge\Form\Field\Description::class);
        $this->description = $arr;

        return $this;
    }

    /**
     * type of the field
     *
     * Generated from protobuf field <code>.eolymp.judge.Form.Field.Type type = 20;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * type of the field
     *
     * Generated from protobuf field <code>.eolymp.judge.Form.Field.Type type = 20;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Judge\Form_Field_Type::class);
        $this->type = $var;

        return $this;
    }

    /**
     * validation
     *
     * Generated from protobuf field <code>bool required = 30;</code>
     * @return bool
     */
    public function getRequired()
    {
        return $this->required;
    }

    /**
     * validation
     *
     * Generated from protobuf field <code>bool required = 30;</code>
     * @param bool $var
     * @return $this
     */
    public function setRequired($var)
    {
        GPBUtil::checkBool($var);
        $this->required = $var;

        return $this;
    }

    /**
     * regexp validation (see field types for details)
     *
     * Generated from protobuf field <code>string regexp = 31;</code>
     * @return string
     */
    public function getRegexp()
    {
        return $this->regexp;
    }

    /**
     * regexp validation (see field types for details)
     *
     * Generated from protobuf field <code>string regexp = 31;</code>
     * @param string $var
     * @return $this
     */
    public function setRegexp($var)
    {
        GPBUtil::checkString($var, True);
        $this->regexp = $var;

        return $this;
    }

    /**
     * min value validation (see field types for details)
     *
     * Generated from protobuf field <code>int32 min = 32;</code>
     * @return int
     */
    public function getMin()
    {
        return $this->min;
    }

    /**
     * min value validation (see field types for details)
     *
     * Generated from protobuf field <code>int32 min = 32;</code>
     * @param int $var
     * @return $this
     */
    public function setMin($var)
    {
        GPBUtil::checkInt32($var);
        $this->min = $var;

        return $this;
    }

    /**
     * max value validation (see field types for details)
     *
     * Generated from protobuf field <code>int32 max = 33;</code>
     * @return int
     */
    public function getMax()
    {
        return $this->max;
    }

    /**
     * max value validation (see field types for details)
     *
     * Generated from protobuf field <code>int32 max = 33;</code>
     * @param int $var
     * @return $this
     */
    public function setMax($var)
    {
        GPBUtil::checkInt32($var);
        $this->max = $var;

        return $this;
    }

    /**
     * possible choices validation (see field types for details)
     *
     * Generated from protobuf field <code>repeated string choices = 34;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getChoices()
    {
        return $this->choices;
    }

    /**
     * possible choices validation (see field types for details)
     *
     * Generated from protobuf field <code>repeated string choices = 34;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setChoices($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->choices = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Field::class, \Eolymp\Judge\Form_Field::class);

