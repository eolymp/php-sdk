<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/judge/submission.proto

namespace Eolymp\Judge\Submission;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.judge.Submission.Status</code>
 */
class Status
{
    /**
     * reserved, should not be used
     *
     * Generated from protobuf enum <code>NONE = 0;</code>
     */
    const NONE = 0;
    /**
     * submission created and awaiting testing
     *
     * Generated from protobuf enum <code>PENDING = 1;</code>
     */
    const PENDING = 1;
    /**
     * submission is being tested by an agent
     *
     * Generated from protobuf enum <code>TESTING = 2;</code>
     */
    const TESTING = 2;
    /**
     * submission testing took too long (too many timeouts in tests)
     *
     * Generated from protobuf enum <code>TIMEOUT = 3;</code>
     */
    const TIMEOUT = 3;
    /**
     * submission testing complete (score is populated)
     *
     * Generated from protobuf enum <code>COMPLETE = 4;</code>
     */
    const COMPLETE = 4;
    /**
     * submission produced an error (eg. compilation error)
     *
     * Generated from protobuf enum <code>ERROR = 5;</code>
     */
    const ERROR = 5;
    /**
     * submission testing failed due to system error (or problem configuration error)
     *
     * Generated from protobuf enum <code>FAILURE = 6;</code>
     */
    const FAILURE = 6;

    private static $valueToName = [
        self::NONE => 'NONE',
        self::PENDING => 'PENDING',
        self::TESTING => 'TESTING',
        self::TIMEOUT => 'TIMEOUT',
        self::COMPLETE => 'COMPLETE',
        self::ERROR => 'ERROR',
        self::FAILURE => 'FAILURE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Status::class, \Eolymp\Judge\Submission_Status::class);

