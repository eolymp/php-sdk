<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/judge/contest.proto

namespace Eolymp\Judge\Contest;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.judge.Contest.UpsolveMode</code>
 */
class UpsolveMode
{
    /**
     * Participants can't solve problems after contest
     *
     * Generated from protobuf enum <code>UPSOLVE_NONE = 0;</code>
     */
    const UPSOLVE_NONE = 0;
    /**
     * Participants who didn't participate yet can participate virtually, participants who completed contests can't contiune.
     *
     * Generated from protobuf enum <code>UPSOLVE_VIRTUAL = 1;</code>
     */
    const UPSOLVE_VIRTUAL = 1;
    /**
     * Participants can continue solving problems after completing contest
     *
     * Generated from protobuf enum <code>UPSOLVE_FREE = 2;</code>
     */
    const UPSOLVE_FREE = 2;
    /**
     * Same as virtual but after completing contest participants can continue solving problems
     *
     * Generated from protobuf enum <code>UPSOLVE_VIRTUAL_FREE = 3;</code>
     */
    const UPSOLVE_VIRTUAL_FREE = 3;

    private static $valueToName = [
        self::UPSOLVE_NONE => 'UPSOLVE_NONE',
        self::UPSOLVE_VIRTUAL => 'UPSOLVE_VIRTUAL',
        self::UPSOLVE_FREE => 'UPSOLVE_FREE',
        self::UPSOLVE_VIRTUAL_FREE => 'UPSOLVE_VIRTUAL_FREE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(UpsolveMode::class, \Eolymp\Judge\Contest_UpsolveMode::class);

