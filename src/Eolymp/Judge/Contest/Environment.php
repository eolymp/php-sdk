<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/judge/contest.proto

namespace Eolymp\Judge\Contest;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.judge.Contest.Environment</code>
 */
class Environment extends \Google\Protobuf\Internal\Message
{
    /**
     * List of available runtimes, empty means all
     *
     * Generated from protobuf field <code>repeated string allowed_runtimes = 1;</code>
     */
    private $allowed_runtimes;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $allowed_runtimes
     *           List of available runtimes, empty means all
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Judge\Contest::initOnce();
        parent::__construct($data);
    }

    /**
     * List of available runtimes, empty means all
     *
     * Generated from protobuf field <code>repeated string allowed_runtimes = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAllowedRuntimes()
    {
        return $this->allowed_runtimes;
    }

    /**
     * List of available runtimes, empty means all
     *
     * Generated from protobuf field <code>repeated string allowed_runtimes = 1;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAllowedRuntimes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->allowed_runtimes = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Environment::class, \Eolymp\Judge\Contest_Environment::class);

