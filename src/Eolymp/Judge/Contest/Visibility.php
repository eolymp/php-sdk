<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/judge/contest.proto

namespace Eolymp\Judge\Contest;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.judge.Contest.Visibility</code>
 */
class Visibility
{
    /**
     * reserved, should not be used
     *
     * Generated from protobuf enum <code>VISIBILITY_UNKNOWN = 0;</code>
     */
    const VISIBILITY_UNKNOWN = 0;
    /**
     * Generated from protobuf enum <code>PUBLIC = 1 [(.eolymp.api.mcp_value_desc) = "visible to everyone and shown on the website"];</code>
     */
    const PBPUBLIC = 1;
    /**
     * Generated from protobuf enum <code>UNLISTED = 2 [(.eolymp.api.mcp_value_desc) = "anyone can participate, but not shown on the website"];</code>
     */
    const UNLISTED = 2;
    /**
     * Generated from protobuf enum <code>PRIVATE = 3 [(.eolymp.api.mcp_value_desc) = "only explicitly added participants can participate"];</code>
     */
    const PBPRIVATE = 3;

    private static $valueToName = [
        self::VISIBILITY_UNKNOWN => 'VISIBILITY_UNKNOWN',
        self::PBPUBLIC => 'PUBLIC',
        self::UNLISTED => 'UNLISTED',
        self::PBPRIVATE => 'PRIVATE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            $pbconst =  __CLASS__. '::PB' . strtoupper($name);
            if (!defined($pbconst)) {
                throw new UnexpectedValueException(sprintf(
                        'Enum %s has no value defined for name %s', __CLASS__, $name));
            }
            return constant($pbconst);
        }
        return constant($const);
    }
}

