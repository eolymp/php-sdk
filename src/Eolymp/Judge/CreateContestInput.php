<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/judge/judge.proto

namespace Eolymp\Judge;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.judge.CreateContestInput</code>
 */
class CreateContestInput extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.eolymp.judge.Contest contest = 1;</code>
     */
    protected $contest = null;
    /**
     * Generated from protobuf field <code>.eolymp.judge.Scoreboard.Type type = 2;</code>
     */
    protected $type = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Eolymp\Judge\Contest $contest
     *     @type int $type
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Judge\Judge::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.eolymp.judge.Contest contest = 1;</code>
     * @return \Eolymp\Judge\Contest
     */
    public function getContest()
    {
        return $this->contest;
    }

    /**
     * Generated from protobuf field <code>.eolymp.judge.Contest contest = 1;</code>
     * @param \Eolymp\Judge\Contest $var
     * @return $this
     */
    public function setContest($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Judge\Contest::class);
        $this->contest = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.judge.Scoreboard.Type type = 2;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>.eolymp.judge.Scoreboard.Type type = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Judge\Scoreboard_Type::class);
        $this->type = $var;

        return $this;
    }

}

