<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/judge/judge.proto

namespace Eolymp\Judge;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.judge.WatchRepliesOutput</code>
 */
class WatchRepliesOutput extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.eolymp.judge.WatchRepliesOutput.Event event = 1;</code>
     */
    protected $event = 0;
    /**
     * Generated from protobuf field <code>.eolymp.judge.Reply reply = 2;</code>
     */
    protected $reply = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $event
     *     @type \Eolymp\Judge\Reply $reply
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Judge\Judge::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.eolymp.judge.WatchRepliesOutput.Event event = 1;</code>
     * @return int
     */
    public function getEvent()
    {
        return $this->event;
    }

    /**
     * Generated from protobuf field <code>.eolymp.judge.WatchRepliesOutput.Event event = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setEvent($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Judge\WatchRepliesOutput_Event::class);
        $this->event = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.judge.Reply reply = 2;</code>
     * @return \Eolymp\Judge\Reply
     */
    public function getReply()
    {
        return $this->reply;
    }

    /**
     * Generated from protobuf field <code>.eolymp.judge.Reply reply = 2;</code>
     * @param \Eolymp\Judge\Reply $var
     * @return $this
     */
    public function setReply($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Judge\Reply::class);
        $this->reply = $var;

        return $this;
    }

}

