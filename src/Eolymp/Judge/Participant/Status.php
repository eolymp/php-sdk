<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/judge/participant.proto

namespace Eolymp\Judge\Participant;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.judge.Participant.Status</code>
 */
class Status
{
    /**
     * reserved, should not be used
     *
     * Generated from protobuf enum <code>NONE = 0;</code>
     */
    const NONE = 0;
    /**
     * participant added to the contest and can start
     *
     * Generated from protobuf enum <code>READY = 1;</code>
     */
    const READY = 1;
    /**
     * participant has started participating in the contest
     *
     * Generated from protobuf enum <code>ACTIVE = 2;</code>
     */
    const ACTIVE = 2;
    /**
     * participant has completed contest (contest is complete, time run out etc)
     *
     * Generated from protobuf enum <code>COMPLETE = 3;</code>
     */
    const COMPLETE = 3;
    /**
     * participant has been "disabled", profile does not show up in results and user can not participate
     *
     * Generated from protobuf enum <code>INACTIVE = 4;</code>
     */
    const INACTIVE = 4;
    /**
     * participant needs to fill registration form
     *
     * Generated from protobuf enum <code>UNREGISTERED = 5;</code>
     */
    const UNREGISTERED = 5;

    private static $valueToName = [
        self::NONE => 'NONE',
        self::READY => 'READY',
        self::ACTIVE => 'ACTIVE',
        self::COMPLETE => 'COMPLETE',
        self::INACTIVE => 'INACTIVE',
        self::UNREGISTERED => 'UNREGISTERED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Status::class, \Eolymp\Judge\Participant_Status::class);

