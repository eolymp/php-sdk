<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/judge/scoreboard.proto

namespace Eolymp\Judge\Scoreboard\Column;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.judge.Scoreboard.Column.Type</code>
 */
class Type
{
    /**
     * Generated from protobuf enum <code>UNKNOWN_TYPE = 0;</code>
     */
    const UNKNOWN_TYPE = 0;
    /**
     * Generated from protobuf enum <code>ROUND_SCORE = 2;</code>
     */
    const ROUND_SCORE = 2;
    /**
     * Generated from protobuf enum <code>PROBLEM_SCORE = 3;</code>
     */
    const PROBLEM_SCORE = 3;

    private static $valueToName = [
        self::UNKNOWN_TYPE => 'UNKNOWN_TYPE',
        self::ROUND_SCORE => 'ROUND_SCORE',
        self::PROBLEM_SCORE => 'PROBLEM_SCORE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Type::class, \Eolymp\Judge\Scoreboard_Column_Type::class);

