<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/judge/medal.proto

namespace Eolymp\Judge;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.judge.Medal</code>
 */
class Medal
{
    /**
     * Generated from protobuf enum <code>NO_MEDAL = 0;</code>
     */
    const NO_MEDAL = 0;
    /**
     * Generated from protobuf enum <code>GOLD_MEDAL = 1;</code>
     */
    const GOLD_MEDAL = 1;
    /**
     * Generated from protobuf enum <code>SILVER_MEDAL = 2;</code>
     */
    const SILVER_MEDAL = 2;
    /**
     * Generated from protobuf enum <code>BRONZE_MEDAL = 3;</code>
     */
    const BRONZE_MEDAL = 3;
    /**
     * Generated from protobuf enum <code>HONORABLE_MENTION = 4;</code>
     */
    const HONORABLE_MENTION = 4;

    private static $valueToName = [
        self::NO_MEDAL => 'NO_MEDAL',
        self::GOLD_MEDAL => 'GOLD_MEDAL',
        self::SILVER_MEDAL => 'SILVER_MEDAL',
        self::BRONZE_MEDAL => 'BRONZE_MEDAL',
        self::HONORABLE_MENTION => 'HONORABLE_MENTION',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

