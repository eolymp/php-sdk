<?php
# Generated by the protocol buffer compiler. DO NOT EDIT!
# See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-php-esdk for more details.

namespace Eolymp\Judge;

class StaffServiceClient {

    /** @var string base URL */
    private $url;

    /** @var callable RPC client */
    private $invoker;

    /**
     * @param string   $url     defines base URL for service
     * @param callable $invoker provides transport implementation for calls
     */
    public function __construct($url, $invoker)
    {
        $this->url = $url;
        $this->invoker = $invoker;
    }

    /**
     * @param CreateStaffMemberInput $input message
     * @param array $context request parameters
     *
     * @return CreateStaffMemberOutput output message
     */
    public function CreateStaffMember(CreateStaffMemberInput $input, array $context = [])
    {
        $path = "/staff-members";

        $context['name'] = "eolymp.judge.StaffService/CreateStaffMember";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, CreateStaffMemberOutput::class, $context);
    }

    /**
     * @param UpdateStaffMemberInput $input message
     * @param array $context request parameters
     *
     * @return UpdateStaffMemberOutput output message
     */
    public function UpdateStaffMember(UpdateStaffMemberInput $input, array $context = [])
    {
        $path = "/staff-members/".rawurlencode($input->getStaffId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setStaffId("");

        $context['name'] = "eolymp.judge.StaffService/UpdateStaffMember";
        $context['path'] = $path;

        return call_user_func($this->invoker, "PUT", $this->url.$path, $input, UpdateStaffMemberOutput::class, $context);
    }

    /**
     * @param DeleteStaffMemberInput $input message
     * @param array $context request parameters
     *
     * @return DeleteStaffMemberOutput output message
     */
    public function DeleteStaffMember(DeleteStaffMemberInput $input, array $context = [])
    {
        $path = "/staff-members/".rawurlencode($input->getStaffId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setStaffId("");

        $context['name'] = "eolymp.judge.StaffService/DeleteStaffMember";
        $context['path'] = $path;

        return call_user_func($this->invoker, "DELETE", $this->url.$path, $input, DeleteStaffMemberOutput::class, $context);
    }

    /**
     * @param DescribeStaffMemberInput $input message
     * @param array $context request parameters
     *
     * @return DescribeStaffMemberOutput output message
     */
    public function DescribeStaffMember(DescribeStaffMemberInput $input, array $context = [])
    {
        $path = "/staff-members/".rawurlencode($input->getStaffId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setStaffId("");

        $context['name'] = "eolymp.judge.StaffService/DescribeStaffMember";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, DescribeStaffMemberOutput::class, $context);
    }

    /**
     * @param ListStaffMembersInput $input message
     * @param array $context request parameters
     *
     * @return ListStaffMembersOutput output message
     */
    public function ListStaffMembers(ListStaffMembersInput $input, array $context = [])
    {
        $path = "/staff-members";

        $context['name'] = "eolymp.judge.StaffService/ListStaffMembers";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, ListStaffMembersOutput::class, $context);
    }

}
