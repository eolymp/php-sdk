<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/judge/judge.proto

namespace Eolymp\Judge;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.judge.UpdateParticipantInput</code>
 */
class UpdateParticipantInput extends \Google\Protobuf\Internal\Message
{
    /**
     * Participant identifier to update
     *
     * Generated from protobuf field <code>string participant_id = 1;</code>
     */
    protected $participant_id = '';
    /**
     * Patch request to update participant partially (all fields are updated if not specified)
     *
     * Generated from protobuf field <code>.eolymp.judge.UpdateParticipantInput.Patch patch = 2;</code>
     */
    protected $patch = 0;
    /**
     * Updated participant name
     *
     * Generated from protobuf field <code>string name = 10;</code>
     */
    protected $name = '';
    /**
     * Updated bonus time
     *
     * Generated from protobuf field <code>uint32 bonus_time = 12;</code>
     */
    protected $bonus_time = 0;
    /**
     * Updated out of competition flag
     *
     * Generated from protobuf field <code>bool out_of_competition = 11;</code>
     */
    protected $out_of_competition = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $participant_id
     *           Participant identifier to update
     *     @type int $patch
     *           Patch request to update participant partially (all fields are updated if not specified)
     *     @type string $name
     *           Updated participant name
     *     @type int $bonus_time
     *           Updated bonus time
     *     @type bool $out_of_competition
     *           Updated out of competition flag
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Judge\Judge::initOnce();
        parent::__construct($data);
    }

    /**
     * Participant identifier to update
     *
     * Generated from protobuf field <code>string participant_id = 1;</code>
     * @return string
     */
    public function getParticipantId()
    {
        return $this->participant_id;
    }

    /**
     * Participant identifier to update
     *
     * Generated from protobuf field <code>string participant_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setParticipantId($var)
    {
        GPBUtil::checkString($var, True);
        $this->participant_id = $var;

        return $this;
    }

    /**
     * Patch request to update participant partially (all fields are updated if not specified)
     *
     * Generated from protobuf field <code>.eolymp.judge.UpdateParticipantInput.Patch patch = 2;</code>
     * @return int
     */
    public function getPatch()
    {
        return $this->patch;
    }

    /**
     * Patch request to update participant partially (all fields are updated if not specified)
     *
     * Generated from protobuf field <code>.eolymp.judge.UpdateParticipantInput.Patch patch = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setPatch($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Judge\UpdateParticipantInput_Patch::class);
        $this->patch = $var;

        return $this;
    }

    /**
     * Updated participant name
     *
     * Generated from protobuf field <code>string name = 10;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Updated participant name
     *
     * Generated from protobuf field <code>string name = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Updated bonus time
     *
     * Generated from protobuf field <code>uint32 bonus_time = 12;</code>
     * @return int
     */
    public function getBonusTime()
    {
        return $this->bonus_time;
    }

    /**
     * Updated bonus time
     *
     * Generated from protobuf field <code>uint32 bonus_time = 12;</code>
     * @param int $var
     * @return $this
     */
    public function setBonusTime($var)
    {
        GPBUtil::checkUint32($var);
        $this->bonus_time = $var;

        return $this;
    }

    /**
     * Updated out of competition flag
     *
     * Generated from protobuf field <code>bool out_of_competition = 11;</code>
     * @return bool
     */
    public function getOutOfCompetition()
    {
        return $this->out_of_competition;
    }

    /**
     * Updated out of competition flag
     *
     * Generated from protobuf field <code>bool out_of_competition = 11;</code>
     * @param bool $var
     * @return $this
     */
    public function setOutOfCompetition($var)
    {
        GPBUtil::checkBool($var);
        $this->out_of_competition = $var;

        return $this;
    }

}

