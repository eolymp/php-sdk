<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/certificate/certificate.proto

namespace Eolymp\Certificate;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.certificate.Certificate</code>
 */
class Certificate extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * ID of the member who owns the certificate
     *
     * Generated from protobuf field <code>string member_id = 2;</code>
     */
    protected $member_id = '';
    /**
     * ID of the target object (e.g. contest ID), only one certificate is allowed per member-target
     *
     * Generated from protobuf field <code>string target_id = 3;</code>
     */
    protected $target_id = '';
    /**
     * URL to verify certificate
     *
     * Generated from protobuf field <code>string verification_url = 20;</code>
     */
    protected $verification_url = '';
    /**
     * URL to download certificate in PDF
     *
     * Generated from protobuf field <code>string download_url = 21;</code>
     */
    protected $download_url = '';
    /**
     * URL to download certificate in HTML
     *
     * Generated from protobuf field <code>string html_url = 22;</code>
     */
    protected $html_url = '';
    /**
     * Generated from protobuf field <code>string locale = 7;</code>
     */
    protected $locale = '';
    /**
     * Generated from protobuf field <code>string type = 5;</code>
     */
    protected $type = '';
    /**
     * Generated from protobuf field <code>map<string, string> attributes = 6;</code>
     */
    private $attributes;
    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp issued_at = 10;</code>
     */
    protected $issued_at = null;
    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp expires_at = 11;</code>
     */
    protected $expires_at = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *     @type string $member_id
     *           ID of the member who owns the certificate
     *     @type string $target_id
     *           ID of the target object (e.g. contest ID), only one certificate is allowed per member-target
     *     @type string $verification_url
     *           URL to verify certificate
     *     @type string $download_url
     *           URL to download certificate in PDF
     *     @type string $html_url
     *           URL to download certificate in HTML
     *     @type string $locale
     *     @type string $type
     *     @type array|\Google\Protobuf\Internal\MapField $attributes
     *     @type \Google\Protobuf\Timestamp $issued_at
     *     @type \Google\Protobuf\Timestamp $expires_at
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Certificate\Certificate::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * ID of the member who owns the certificate
     *
     * Generated from protobuf field <code>string member_id = 2;</code>
     * @return string
     */
    public function getMemberId()
    {
        return $this->member_id;
    }

    /**
     * ID of the member who owns the certificate
     *
     * Generated from protobuf field <code>string member_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setMemberId($var)
    {
        GPBUtil::checkString($var, True);
        $this->member_id = $var;

        return $this;
    }

    /**
     * ID of the target object (e.g. contest ID), only one certificate is allowed per member-target
     *
     * Generated from protobuf field <code>string target_id = 3;</code>
     * @return string
     */
    public function getTargetId()
    {
        return $this->target_id;
    }

    /**
     * ID of the target object (e.g. contest ID), only one certificate is allowed per member-target
     *
     * Generated from protobuf field <code>string target_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setTargetId($var)
    {
        GPBUtil::checkString($var, True);
        $this->target_id = $var;

        return $this;
    }

    /**
     * URL to verify certificate
     *
     * Generated from protobuf field <code>string verification_url = 20;</code>
     * @return string
     */
    public function getVerificationUrl()
    {
        return $this->verification_url;
    }

    /**
     * URL to verify certificate
     *
     * Generated from protobuf field <code>string verification_url = 20;</code>
     * @param string $var
     * @return $this
     */
    public function setVerificationUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->verification_url = $var;

        return $this;
    }

    /**
     * URL to download certificate in PDF
     *
     * Generated from protobuf field <code>string download_url = 21;</code>
     * @return string
     */
    public function getDownloadUrl()
    {
        return $this->download_url;
    }

    /**
     * URL to download certificate in PDF
     *
     * Generated from protobuf field <code>string download_url = 21;</code>
     * @param string $var
     * @return $this
     */
    public function setDownloadUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->download_url = $var;

        return $this;
    }

    /**
     * URL to download certificate in HTML
     *
     * Generated from protobuf field <code>string html_url = 22;</code>
     * @return string
     */
    public function getHtmlUrl()
    {
        return $this->html_url;
    }

    /**
     * URL to download certificate in HTML
     *
     * Generated from protobuf field <code>string html_url = 22;</code>
     * @param string $var
     * @return $this
     */
    public function setHtmlUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->html_url = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string locale = 7;</code>
     * @return string
     */
    public function getLocale()
    {
        return $this->locale;
    }

    /**
     * Generated from protobuf field <code>string locale = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setLocale($var)
    {
        GPBUtil::checkString($var, True);
        $this->locale = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string type = 5;</code>
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>string type = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, True);
        $this->type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>map<string, string> attributes = 6;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getAttributes()
    {
        return $this->attributes;
    }

    /**
     * Generated from protobuf field <code>map<string, string> attributes = 6;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setAttributes($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->attributes = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp issued_at = 10;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getIssuedAt()
    {
        return $this->issued_at;
    }

    public function hasIssuedAt()
    {
        return isset($this->issued_at);
    }

    public function clearIssuedAt()
    {
        unset($this->issued_at);
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp issued_at = 10;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setIssuedAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->issued_at = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp expires_at = 11;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getExpiresAt()
    {
        return $this->expires_at;
    }

    public function hasExpiresAt()
    {
        return isset($this->expires_at);
    }

    public function clearExpiresAt()
    {
        unset($this->expires_at);
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp expires_at = 11;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setExpiresAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->expires_at = $var;

        return $this;
    }

}

