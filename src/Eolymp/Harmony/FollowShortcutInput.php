<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/harmony/harmony.proto

namespace Eolymp\Harmony;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.harmony.FollowShortcutInput</code>
 */
class FollowShortcutInput extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string shortcut_id = 1;</code>
     */
    protected $shortcut_id = '';
    /**
     * Generated from protobuf field <code>.eolymp.harmony.Consent.Status status = 2;</code>
     */
    protected $status = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $shortcut_id
     *     @type int $status
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Harmony\Harmony::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string shortcut_id = 1;</code>
     * @return string
     */
    public function getShortcutId()
    {
        return $this->shortcut_id;
    }

    /**
     * Generated from protobuf field <code>string shortcut_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setShortcutId($var)
    {
        GPBUtil::checkString($var, True);
        $this->shortcut_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.harmony.Consent.Status status = 2;</code>
     * @return int
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Generated from protobuf field <code>.eolymp.harmony.Consent.Status status = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Harmony\Consent_Status::class);
        $this->status = $var;

        return $this;
    }

}

