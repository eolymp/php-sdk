<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/atlas/submission.proto

namespace Eolymp\Atlas;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.atlas.Submission</code>
 */
class Submission extends \Google\Protobuf\Internal\Message
{
    /**
     * unique identifier
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * problem
     *
     * Generated from protobuf field <code>string problem_id = 2;</code>
     */
    protected $problem_id = '';
    /**
     * constantly increasing number to track changes in the submission
     *
     * Generated from protobuf field <code>uint32 version = 99;</code>
     */
    protected $version = 0;
    /**
     * time when submission was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp submitted_at = 5;</code>
     */
    protected $submitted_at = null;
    /**
     * time when submission was judged
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp judged_at = 6;</code>
     */
    protected $judged_at = null;
    /**
     * programming language
     *
     * Generated from protobuf field <code>string lang = 10;</code>
     */
    protected $lang = '';
    /**
     * deprecated: source code
     *
     * Generated from protobuf field <code>string source = 11;</code>
     */
    protected $source = '';
    /**
     * source code URL
     *
     * Generated from protobuf field <code>string source_url = 13;</code>
     */
    protected $source_url = '';
    /**
     * source code signature
     *
     * Generated from protobuf field <code>string signature = 12;</code>
     */
    protected $signature = '';
    /**
     * status (see explanation for enumeration values)
     *
     * Generated from protobuf field <code>.eolymp.atlas.Submission.Status status = 20;</code>
     */
    protected $status = 0;
    /**
     * overall verdict based on verdicts in groups / runs
     *
     * Generated from protobuf field <code>.eolymp.atlas.Submission.Verdict verdict = 22;</code>
     */
    protected $verdict = 0;
    /**
     * error message in case status is ERROR
     *
     * Generated from protobuf field <code>string error = 21;</code>
     */
    protected $error = '';
    /**
     * a URL with error output
     *
     * Generated from protobuf field <code>string error_url = 23;</code>
     */
    protected $error_url = '';
    /**
     * maximum possible score for the submission
     *
     * Generated from protobuf field <code>float cost = 30;</code>
     */
    protected $cost = 0.0;
    /**
     * sum of earned points
     *
     * Generated from protobuf field <code>float score = 31;</code>
     */
    protected $score = 0.0;
    /**
     * Generated from protobuf field <code>float percentage = 32;</code>
     */
    protected $percentage = 0.0;
    /**
     * maximum wall time
     *
     * Generated from protobuf field <code>uint32 time_usage = 41;</code>
     */
    protected $time_usage = 0;
    /**
     * maximum cpu time
     *
     * Generated from protobuf field <code>uint32 cpu_usage = 42;</code>
     */
    protected $cpu_usage = 0;
    /**
     * maximum memory usage
     *
     * Generated from protobuf field <code>uint64 memory_usage = 46;</code>
     */
    protected $memory_usage = 0;
    /**
     * maximum resource usage
     *
     * Generated from protobuf field <code>float resource_usage = 47;</code>
     */
    protected $resource_usage = 0.0;
    /**
     * status for each run by group
     *
     * Generated from protobuf field <code>repeated .eolymp.atlas.Submission.Group groups = 50;</code>
     */
    private $groups;
    /**
     * if true, submission can be debugged using submission assistant
     *
     * Generated from protobuf field <code>bool assistant_available = 60;</code>
     */
    protected $assistant_available = false;
    /**
     * cursor in the list
     *
     * Generated from protobuf field <code>string cursor = 100;</code>
     */
    protected $cursor = '';
    protected $submitter;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           unique identifier
     *     @type string $problem_id
     *           problem
     *     @type int $version
     *           constantly increasing number to track changes in the submission
     *     @type string $user_id
     *     @type string $member_id
     *     @type \Google\Protobuf\Timestamp $submitted_at
     *           time when submission was created
     *     @type \Google\Protobuf\Timestamp $judged_at
     *           time when submission was judged
     *     @type string $lang
     *           programming language
     *     @type string $source
     *           deprecated: source code
     *     @type string $source_url
     *           source code URL
     *     @type string $signature
     *           source code signature
     *     @type int $status
     *           status (see explanation for enumeration values)
     *     @type int $verdict
     *           overall verdict based on verdicts in groups / runs
     *     @type string $error
     *           error message in case status is ERROR
     *     @type string $error_url
     *           a URL with error output
     *     @type float $cost
     *           maximum possible score for the submission
     *     @type float $score
     *           sum of earned points
     *     @type float $percentage
     *     @type int $time_usage
     *           maximum wall time
     *     @type int $cpu_usage
     *           maximum cpu time
     *     @type int|string $memory_usage
     *           maximum memory usage
     *     @type float $resource_usage
     *           maximum resource usage
     *     @type array<\Eolymp\Atlas\Submission\Group>|\Google\Protobuf\Internal\RepeatedField $groups
     *           status for each run by group
     *     @type bool $assistant_available
     *           if true, submission can be debugged using submission assistant
     *     @type string $cursor
     *           cursor in the list
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Atlas\Submission::initOnce();
        parent::__construct($data);
    }

    /**
     * unique identifier
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * unique identifier
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * problem
     *
     * Generated from protobuf field <code>string problem_id = 2;</code>
     * @return string
     */
    public function getProblemId()
    {
        return $this->problem_id;
    }

    /**
     * problem
     *
     * Generated from protobuf field <code>string problem_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setProblemId($var)
    {
        GPBUtil::checkString($var, True);
        $this->problem_id = $var;

        return $this;
    }

    /**
     * constantly increasing number to track changes in the submission
     *
     * Generated from protobuf field <code>uint32 version = 99;</code>
     * @return int
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     * constantly increasing number to track changes in the submission
     *
     * Generated from protobuf field <code>uint32 version = 99;</code>
     * @param int $var
     * @return $this
     */
    public function setVersion($var)
    {
        GPBUtil::checkUint32($var);
        $this->version = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string user_id = 3;</code>
     * @return string
     */
    public function getUserId()
    {
        return $this->readOneof(3);
    }

    public function hasUserId()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>string user_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setUserId($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>string member_id = 4;</code>
     * @return string
     */
    public function getMemberId()
    {
        return $this->readOneof(4);
    }

    public function hasMemberId()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>string member_id = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setMemberId($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * time when submission was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp submitted_at = 5;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getSubmittedAt()
    {
        return $this->submitted_at;
    }

    public function hasSubmittedAt()
    {
        return isset($this->submitted_at);
    }

    public function clearSubmittedAt()
    {
        unset($this->submitted_at);
    }

    /**
     * time when submission was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp submitted_at = 5;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setSubmittedAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->submitted_at = $var;

        return $this;
    }

    /**
     * time when submission was judged
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp judged_at = 6;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getJudgedAt()
    {
        return $this->judged_at;
    }

    public function hasJudgedAt()
    {
        return isset($this->judged_at);
    }

    public function clearJudgedAt()
    {
        unset($this->judged_at);
    }

    /**
     * time when submission was judged
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp judged_at = 6;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setJudgedAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->judged_at = $var;

        return $this;
    }

    /**
     * programming language
     *
     * Generated from protobuf field <code>string lang = 10;</code>
     * @return string
     */
    public function getLang()
    {
        return $this->lang;
    }

    /**
     * programming language
     *
     * Generated from protobuf field <code>string lang = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setLang($var)
    {
        GPBUtil::checkString($var, True);
        $this->lang = $var;

        return $this;
    }

    /**
     * deprecated: source code
     *
     * Generated from protobuf field <code>string source = 11;</code>
     * @return string
     */
    public function getSource()
    {
        return $this->source;
    }

    /**
     * deprecated: source code
     *
     * Generated from protobuf field <code>string source = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setSource($var)
    {
        GPBUtil::checkString($var, True);
        $this->source = $var;

        return $this;
    }

    /**
     * source code URL
     *
     * Generated from protobuf field <code>string source_url = 13;</code>
     * @return string
     */
    public function getSourceUrl()
    {
        return $this->source_url;
    }

    /**
     * source code URL
     *
     * Generated from protobuf field <code>string source_url = 13;</code>
     * @param string $var
     * @return $this
     */
    public function setSourceUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->source_url = $var;

        return $this;
    }

    /**
     * source code signature
     *
     * Generated from protobuf field <code>string signature = 12;</code>
     * @return string
     */
    public function getSignature()
    {
        return $this->signature;
    }

    /**
     * source code signature
     *
     * Generated from protobuf field <code>string signature = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setSignature($var)
    {
        GPBUtil::checkString($var, True);
        $this->signature = $var;

        return $this;
    }

    /**
     * status (see explanation for enumeration values)
     *
     * Generated from protobuf field <code>.eolymp.atlas.Submission.Status status = 20;</code>
     * @return int
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * status (see explanation for enumeration values)
     *
     * Generated from protobuf field <code>.eolymp.atlas.Submission.Status status = 20;</code>
     * @param int $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Atlas\Submission\Status::class);
        $this->status = $var;

        return $this;
    }

    /**
     * overall verdict based on verdicts in groups / runs
     *
     * Generated from protobuf field <code>.eolymp.atlas.Submission.Verdict verdict = 22;</code>
     * @return int
     */
    public function getVerdict()
    {
        return $this->verdict;
    }

    /**
     * overall verdict based on verdicts in groups / runs
     *
     * Generated from protobuf field <code>.eolymp.atlas.Submission.Verdict verdict = 22;</code>
     * @param int $var
     * @return $this
     */
    public function setVerdict($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Atlas\Submission\Verdict::class);
        $this->verdict = $var;

        return $this;
    }

    /**
     * error message in case status is ERROR
     *
     * Generated from protobuf field <code>string error = 21;</code>
     * @return string
     */
    public function getError()
    {
        return $this->error;
    }

    /**
     * error message in case status is ERROR
     *
     * Generated from protobuf field <code>string error = 21;</code>
     * @param string $var
     * @return $this
     */
    public function setError($var)
    {
        GPBUtil::checkString($var, True);
        $this->error = $var;

        return $this;
    }

    /**
     * a URL with error output
     *
     * Generated from protobuf field <code>string error_url = 23;</code>
     * @return string
     */
    public function getErrorUrl()
    {
        return $this->error_url;
    }

    /**
     * a URL with error output
     *
     * Generated from protobuf field <code>string error_url = 23;</code>
     * @param string $var
     * @return $this
     */
    public function setErrorUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->error_url = $var;

        return $this;
    }

    /**
     * maximum possible score for the submission
     *
     * Generated from protobuf field <code>float cost = 30;</code>
     * @return float
     */
    public function getCost()
    {
        return $this->cost;
    }

    /**
     * maximum possible score for the submission
     *
     * Generated from protobuf field <code>float cost = 30;</code>
     * @param float $var
     * @return $this
     */
    public function setCost($var)
    {
        GPBUtil::checkFloat($var);
        $this->cost = $var;

        return $this;
    }

    /**
     * sum of earned points
     *
     * Generated from protobuf field <code>float score = 31;</code>
     * @return float
     */
    public function getScore()
    {
        return $this->score;
    }

    /**
     * sum of earned points
     *
     * Generated from protobuf field <code>float score = 31;</code>
     * @param float $var
     * @return $this
     */
    public function setScore($var)
    {
        GPBUtil::checkFloat($var);
        $this->score = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>float percentage = 32;</code>
     * @return float
     */
    public function getPercentage()
    {
        return $this->percentage;
    }

    /**
     * Generated from protobuf field <code>float percentage = 32;</code>
     * @param float $var
     * @return $this
     */
    public function setPercentage($var)
    {
        GPBUtil::checkFloat($var);
        $this->percentage = $var;

        return $this;
    }

    /**
     * maximum wall time
     *
     * Generated from protobuf field <code>uint32 time_usage = 41;</code>
     * @return int
     */
    public function getTimeUsage()
    {
        return $this->time_usage;
    }

    /**
     * maximum wall time
     *
     * Generated from protobuf field <code>uint32 time_usage = 41;</code>
     * @param int $var
     * @return $this
     */
    public function setTimeUsage($var)
    {
        GPBUtil::checkUint32($var);
        $this->time_usage = $var;

        return $this;
    }

    /**
     * maximum cpu time
     *
     * Generated from protobuf field <code>uint32 cpu_usage = 42;</code>
     * @return int
     */
    public function getCpuUsage()
    {
        return $this->cpu_usage;
    }

    /**
     * maximum cpu time
     *
     * Generated from protobuf field <code>uint32 cpu_usage = 42;</code>
     * @param int $var
     * @return $this
     */
    public function setCpuUsage($var)
    {
        GPBUtil::checkUint32($var);
        $this->cpu_usage = $var;

        return $this;
    }

    /**
     * maximum memory usage
     *
     * Generated from protobuf field <code>uint64 memory_usage = 46;</code>
     * @return int|string
     */
    public function getMemoryUsage()
    {
        return $this->memory_usage;
    }

    /**
     * maximum memory usage
     *
     * Generated from protobuf field <code>uint64 memory_usage = 46;</code>
     * @param int|string $var
     * @return $this
     */
    public function setMemoryUsage($var)
    {
        GPBUtil::checkUint64($var);
        $this->memory_usage = $var;

        return $this;
    }

    /**
     * maximum resource usage
     *
     * Generated from protobuf field <code>float resource_usage = 47;</code>
     * @return float
     */
    public function getResourceUsage()
    {
        return $this->resource_usage;
    }

    /**
     * maximum resource usage
     *
     * Generated from protobuf field <code>float resource_usage = 47;</code>
     * @param float $var
     * @return $this
     */
    public function setResourceUsage($var)
    {
        GPBUtil::checkFloat($var);
        $this->resource_usage = $var;

        return $this;
    }

    /**
     * status for each run by group
     *
     * Generated from protobuf field <code>repeated .eolymp.atlas.Submission.Group groups = 50;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getGroups()
    {
        return $this->groups;
    }

    /**
     * status for each run by group
     *
     * Generated from protobuf field <code>repeated .eolymp.atlas.Submission.Group groups = 50;</code>
     * @param array<\Eolymp\Atlas\Submission\Group>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setGroups($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Eolymp\Atlas\Submission\Group::class);
        $this->groups = $arr;

        return $this;
    }

    /**
     * if true, submission can be debugged using submission assistant
     *
     * Generated from protobuf field <code>bool assistant_available = 60;</code>
     * @return bool
     */
    public function getAssistantAvailable()
    {
        return $this->assistant_available;
    }

    /**
     * if true, submission can be debugged using submission assistant
     *
     * Generated from protobuf field <code>bool assistant_available = 60;</code>
     * @param bool $var
     * @return $this
     */
    public function setAssistantAvailable($var)
    {
        GPBUtil::checkBool($var);
        $this->assistant_available = $var;

        return $this;
    }

    /**
     * cursor in the list
     *
     * Generated from protobuf field <code>string cursor = 100;</code>
     * @return string
     */
    public function getCursor()
    {
        return $this->cursor;
    }

    /**
     * cursor in the list
     *
     * Generated from protobuf field <code>string cursor = 100;</code>
     * @param string $var
     * @return $this
     */
    public function setCursor($var)
    {
        GPBUtil::checkString($var, True);
        $this->cursor = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getSubmitter()
    {
        return $this->whichOneof("submitter");
    }

}

