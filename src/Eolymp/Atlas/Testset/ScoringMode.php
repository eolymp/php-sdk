<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/atlas/testset.proto

namespace Eolymp\Atlas\Testset;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.atlas.Testset.ScoringMode</code>
 */
class ScoringMode
{
    /**
     * no score is awarded for passing tests from this testset
     *
     * Generated from protobuf enum <code>NO_SCORE = 0;</code>
     */
    const NO_SCORE = 0;
    /**
     * scores are awarded for passing each individual test
     *
     * Generated from protobuf enum <code>EACH = 1;</code>
     */
    const EACH = 1;
    /**
     * scores are only awarded if all tests are passing
     *
     * Generated from protobuf enum <code>ALL = 2;</code>
     */
    const ALL = 2;

    private static $valueToName = [
        self::NO_SCORE => 'NO_SCORE',
        self::EACH => 'EACH',
        self::ALL => 'ALL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ScoringMode::class, \Eolymp\Atlas\Testset_ScoringMode::class);

