<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/atlas/test.proto

namespace Eolymp\Atlas;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.atlas.Test</code>
 */
class Test extends \Google\Protobuf\Internal\Message
{
    /**
     * Test unique identifier.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * Testset where this test belongs.
     *
     * Generated from protobuf field <code>string testset_id = 2;</code>
     */
    protected $testset_id = '';
    /**
     * Index, a sequential number, of the test within testset.
     *
     * Generated from protobuf field <code>int32 index = 3;</code>
     */
    protected $index = 0;
    /**
     * Flag which defines if test should be shown in as an example in the problem statement.
     *
     * Generated from protobuf field <code>bool example = 4;</code>
     */
    protected $example = false;
    /**
     * Score for passing this test.
     *
     * Generated from protobuf field <code>float score = 5;</code>
     */
    protected $score = 0.0;
    /**
     * Input Object ID, use keeper service to upload or download actual test data.
     *
     * Generated from protobuf field <code>string input_object_id = 10;</code>
     */
    protected $input_object_id = '';
    /**
     * Answer Object ID, use keeper service to upload or download actual test data.
     *
     * Generated from protobuf field <code>string answer_object_id = 20;</code>
     */
    protected $answer_object_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           Test unique identifier.
     *     @type string $testset_id
     *           Testset where this test belongs.
     *     @type int $index
     *           Index, a sequential number, of the test within testset.
     *     @type bool $example
     *           Flag which defines if test should be shown in as an example in the problem statement.
     *     @type float $score
     *           Score for passing this test.
     *     @type string $input_object_id
     *           Input Object ID, use keeper service to upload or download actual test data.
     *     @type string $answer_object_id
     *           Answer Object ID, use keeper service to upload or download actual test data.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Atlas\Test::initOnce();
        parent::__construct($data);
    }

    /**
     * Test unique identifier.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Test unique identifier.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Testset where this test belongs.
     *
     * Generated from protobuf field <code>string testset_id = 2;</code>
     * @return string
     */
    public function getTestsetId()
    {
        return $this->testset_id;
    }

    /**
     * Testset where this test belongs.
     *
     * Generated from protobuf field <code>string testset_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setTestsetId($var)
    {
        GPBUtil::checkString($var, True);
        $this->testset_id = $var;

        return $this;
    }

    /**
     * Index, a sequential number, of the test within testset.
     *
     * Generated from protobuf field <code>int32 index = 3;</code>
     * @return int
     */
    public function getIndex()
    {
        return $this->index;
    }

    /**
     * Index, a sequential number, of the test within testset.
     *
     * Generated from protobuf field <code>int32 index = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setIndex($var)
    {
        GPBUtil::checkInt32($var);
        $this->index = $var;

        return $this;
    }

    /**
     * Flag which defines if test should be shown in as an example in the problem statement.
     *
     * Generated from protobuf field <code>bool example = 4;</code>
     * @return bool
     */
    public function getExample()
    {
        return $this->example;
    }

    /**
     * Flag which defines if test should be shown in as an example in the problem statement.
     *
     * Generated from protobuf field <code>bool example = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setExample($var)
    {
        GPBUtil::checkBool($var);
        $this->example = $var;

        return $this;
    }

    /**
     * Score for passing this test.
     *
     * Generated from protobuf field <code>float score = 5;</code>
     * @return float
     */
    public function getScore()
    {
        return $this->score;
    }

    /**
     * Score for passing this test.
     *
     * Generated from protobuf field <code>float score = 5;</code>
     * @param float $var
     * @return $this
     */
    public function setScore($var)
    {
        GPBUtil::checkFloat($var);
        $this->score = $var;

        return $this;
    }

    /**
     * Input Object ID, use keeper service to upload or download actual test data.
     *
     * Generated from protobuf field <code>string input_object_id = 10;</code>
     * @return string
     */
    public function getInputObjectId()
    {
        return $this->input_object_id;
    }

    /**
     * Input Object ID, use keeper service to upload or download actual test data.
     *
     * Generated from protobuf field <code>string input_object_id = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setInputObjectId($var)
    {
        GPBUtil::checkString($var, True);
        $this->input_object_id = $var;

        return $this;
    }

    /**
     * Answer Object ID, use keeper service to upload or download actual test data.
     *
     * Generated from protobuf field <code>string answer_object_id = 20;</code>
     * @return string
     */
    public function getAnswerObjectId()
    {
        return $this->answer_object_id;
    }

    /**
     * Answer Object ID, use keeper service to upload or download actual test data.
     *
     * Generated from protobuf field <code>string answer_object_id = 20;</code>
     * @param string $var
     * @return $this
     */
    public function setAnswerObjectId($var)
    {
        GPBUtil::checkString($var, True);
        $this->answer_object_id = $var;

        return $this;
    }

}

