<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/atlas/form.proto

namespace Eolymp\Atlas\Form\Field;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.atlas.Form.Field.Code</code>
 */
class Code extends \Google\Protobuf\Internal\Message
{
    /**
     * allowed code execution runtimes
     *
     * Generated from protobuf field <code>repeated string runtimes = 1;</code>
     */
    private $runtimes;
    /**
     * maximum number of attachments, 0 means no attachments are allowed
     *
     * Generated from protobuf field <code>uint32 max_attachments = 2;</code>
     */
    protected $max_attachments = 0;
    /**
     * max attachment size in bytes, 0 means not limit
     *
     * Generated from protobuf field <code>uint32 attachment_max_size = 5;</code>
     */
    protected $attachment_max_size = 0;
    /**
     * allowed mime types for attachments, empty means all allowed
     *
     * Generated from protobuf field <code>repeated string attachment_types = 3;</code>
     */
    private $attachment_types;
    /**
     * allowed file extensions for attachments (with leading .), empty means all
     *
     * Generated from protobuf field <code>repeated string attachment_extensions = 4;</code>
     */
    private $attachment_extensions;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $runtimes
     *           allowed code execution runtimes
     *     @type int $max_attachments
     *           maximum number of attachments, 0 means no attachments are allowed
     *     @type int $attachment_max_size
     *           max attachment size in bytes, 0 means not limit
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $attachment_types
     *           allowed mime types for attachments, empty means all allowed
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $attachment_extensions
     *           allowed file extensions for attachments (with leading .), empty means all
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Atlas\Form::initOnce();
        parent::__construct($data);
    }

    /**
     * allowed code execution runtimes
     *
     * Generated from protobuf field <code>repeated string runtimes = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRuntimes()
    {
        return $this->runtimes;
    }

    /**
     * allowed code execution runtimes
     *
     * Generated from protobuf field <code>repeated string runtimes = 1;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRuntimes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->runtimes = $arr;

        return $this;
    }

    /**
     * maximum number of attachments, 0 means no attachments are allowed
     *
     * Generated from protobuf field <code>uint32 max_attachments = 2;</code>
     * @return int
     */
    public function getMaxAttachments()
    {
        return $this->max_attachments;
    }

    /**
     * maximum number of attachments, 0 means no attachments are allowed
     *
     * Generated from protobuf field <code>uint32 max_attachments = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxAttachments($var)
    {
        GPBUtil::checkUint32($var);
        $this->max_attachments = $var;

        return $this;
    }

    /**
     * max attachment size in bytes, 0 means not limit
     *
     * Generated from protobuf field <code>uint32 attachment_max_size = 5;</code>
     * @return int
     */
    public function getAttachmentMaxSize()
    {
        return $this->attachment_max_size;
    }

    /**
     * max attachment size in bytes, 0 means not limit
     *
     * Generated from protobuf field <code>uint32 attachment_max_size = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setAttachmentMaxSize($var)
    {
        GPBUtil::checkUint32($var);
        $this->attachment_max_size = $var;

        return $this;
    }

    /**
     * allowed mime types for attachments, empty means all allowed
     *
     * Generated from protobuf field <code>repeated string attachment_types = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAttachmentTypes()
    {
        return $this->attachment_types;
    }

    /**
     * allowed mime types for attachments, empty means all allowed
     *
     * Generated from protobuf field <code>repeated string attachment_types = 3;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAttachmentTypes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->attachment_types = $arr;

        return $this;
    }

    /**
     * allowed file extensions for attachments (with leading .), empty means all
     *
     * Generated from protobuf field <code>repeated string attachment_extensions = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAttachmentExtensions()
    {
        return $this->attachment_extensions;
    }

    /**
     * allowed file extensions for attachments (with leading .), empty means all
     *
     * Generated from protobuf field <code>repeated string attachment_extensions = 4;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAttachmentExtensions($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->attachment_extensions = $arr;

        return $this;
    }

}

