<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/atlas/form.proto

namespace Eolymp\Atlas\Form;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.atlas.Form.Field</code>
 */
class Field extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * Generated from protobuf field <code>string label = 2;</code>
     */
    protected $label = '';
    /**
     * Generated from protobuf field <code>.eolymp.atlas.Form.Field.Type type = 3;</code>
     */
    protected $type = 0;
    protected $input;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *     @type string $label
     *     @type int $type
     *     @type \Eolymp\Atlas\Form\Field\Code $code
     *     @type \Eolymp\Atlas\Form\Field\File $file
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Atlas\Form::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string label = 2;</code>
     * @return string
     */
    public function getLabel()
    {
        return $this->label;
    }

    /**
     * Generated from protobuf field <code>string label = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setLabel($var)
    {
        GPBUtil::checkString($var, True);
        $this->label = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.atlas.Form.Field.Type type = 3;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>.eolymp.atlas.Form.Field.Type type = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Atlas\Form\Field\Type::class);
        $this->type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.atlas.Form.Field.Code code = 101;</code>
     * @return \Eolymp\Atlas\Form\Field\Code|null
     */
    public function getCode()
    {
        return $this->readOneof(101);
    }

    public function hasCode()
    {
        return $this->hasOneof(101);
    }

    /**
     * Generated from protobuf field <code>.eolymp.atlas.Form.Field.Code code = 101;</code>
     * @param \Eolymp\Atlas\Form\Field\Code $var
     * @return $this
     */
    public function setCode($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Atlas\Form\Field\Code::class);
        $this->writeOneof(101, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.atlas.Form.Field.File file = 102;</code>
     * @return \Eolymp\Atlas\Form\Field\File|null
     */
    public function getFile()
    {
        return $this->readOneof(102);
    }

    public function hasFile()
    {
        return $this->hasOneof(102);
    }

    /**
     * Generated from protobuf field <code>.eolymp.atlas.Form.Field.File file = 102;</code>
     * @param \Eolymp\Atlas\Form\Field\File $var
     * @return $this
     */
    public function setFile($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Atlas\Form\Field\File::class);
        $this->writeOneof(102, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getInput()
    {
        return $this->whichOneof("input");
    }

}

