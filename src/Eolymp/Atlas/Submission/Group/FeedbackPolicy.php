<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/atlas/submission.proto

namespace Eolymp\Atlas\Submission\Group;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.atlas.Submission.Group.FeedbackPolicy</code>
 */
class FeedbackPolicy
{
    /**
     * show each test individually
     *
     * Generated from protobuf enum <code>COMPLETE = 0;</code>
     */
    const COMPLETE = 0;
    /**
     * show results as in ICPC contest (only first not accepted test from the set)
     *
     * Generated from protobuf enum <code>ICPC = 1;</code>
     */
    const ICPC = 1;

    private static $valueToName = [
        self::COMPLETE => 'COMPLETE',
        self::ICPC => 'ICPC',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(FeedbackPolicy::class, \Eolymp\Atlas\Submission_Group_FeedbackPolicy::class);

