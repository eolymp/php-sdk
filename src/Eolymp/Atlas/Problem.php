<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/atlas/problem.proto

namespace Eolymp\Atlas;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.atlas.Problem</code>
 */
class Problem extends \Google\Protobuf\Internal\Message
{
    /**
     * Unique identifier.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * Generated from protobuf field <code>string url = 2;</code>
     */
    protected $url = '';
    /**
     * Index in the public problem catalog.
     *
     * Generated from protobuf field <code>int32 number = 10;</code>
     */
    protected $number = 0;
    /**
     * Problem is visible to users in public catalog.
     *
     * Generated from protobuf field <code>bool visible = 11;</code>
     */
    protected $visible = false;
    /**
     * Problem is only accessible to users who were specifically granted access to it.
     *
     * Generated from protobuf field <code>bool private = 12;</code>
     */
    protected $private = false;
    /**
     * Problem topics (ID of topics from eolymp.taxonomy.TopicService)
     *
     * Generated from protobuf field <code>repeated string topics = 20;</code>
     */
    private $topics;
    /**
     * Difficulty from 0 (very easy) to 5 (very hard)
     *
     * Generated from protobuf field <code>uint32 difficulty = 21;</code>
     */
    protected $difficulty = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           Unique identifier.
     *     @type string $url
     *     @type int $number
     *           Index in the public problem catalog.
     *     @type bool $visible
     *           Problem is visible to users in public catalog.
     *     @type bool $private
     *           Problem is only accessible to users who were specifically granted access to it.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $topics
     *           Problem topics (ID of topics from eolymp.taxonomy.TopicService)
     *     @type int $difficulty
     *           Difficulty from 0 (very easy) to 5 (very hard)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Atlas\Problem::initOnce();
        parent::__construct($data);
    }

    /**
     * Unique identifier.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Unique identifier.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string url = 2;</code>
     * @return string
     */
    public function getUrl()
    {
        return $this->url;
    }

    /**
     * Generated from protobuf field <code>string url = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->url = $var;

        return $this;
    }

    /**
     * Index in the public problem catalog.
     *
     * Generated from protobuf field <code>int32 number = 10;</code>
     * @return int
     */
    public function getNumber()
    {
        return $this->number;
    }

    /**
     * Index in the public problem catalog.
     *
     * Generated from protobuf field <code>int32 number = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setNumber($var)
    {
        GPBUtil::checkInt32($var);
        $this->number = $var;

        return $this;
    }

    /**
     * Problem is visible to users in public catalog.
     *
     * Generated from protobuf field <code>bool visible = 11;</code>
     * @return bool
     */
    public function getVisible()
    {
        return $this->visible;
    }

    /**
     * Problem is visible to users in public catalog.
     *
     * Generated from protobuf field <code>bool visible = 11;</code>
     * @param bool $var
     * @return $this
     */
    public function setVisible($var)
    {
        GPBUtil::checkBool($var);
        $this->visible = $var;

        return $this;
    }

    /**
     * Problem is only accessible to users who were specifically granted access to it.
     *
     * Generated from protobuf field <code>bool private = 12;</code>
     * @return bool
     */
    public function getPrivate()
    {
        return $this->private;
    }

    /**
     * Problem is only accessible to users who were specifically granted access to it.
     *
     * Generated from protobuf field <code>bool private = 12;</code>
     * @param bool $var
     * @return $this
     */
    public function setPrivate($var)
    {
        GPBUtil::checkBool($var);
        $this->private = $var;

        return $this;
    }

    /**
     * Problem topics (ID of topics from eolymp.taxonomy.TopicService)
     *
     * Generated from protobuf field <code>repeated string topics = 20;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTopics()
    {
        return $this->topics;
    }

    /**
     * Problem topics (ID of topics from eolymp.taxonomy.TopicService)
     *
     * Generated from protobuf field <code>repeated string topics = 20;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTopics($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->topics = $arr;

        return $this;
    }

    /**
     * Difficulty from 0 (very easy) to 5 (very hard)
     *
     * Generated from protobuf field <code>uint32 difficulty = 21;</code>
     * @return int
     */
    public function getDifficulty()
    {
        return $this->difficulty;
    }

    /**
     * Difficulty from 0 (very easy) to 5 (very hard)
     *
     * Generated from protobuf field <code>uint32 difficulty = 21;</code>
     * @param int $var
     * @return $this
     */
    public function setDifficulty($var)
    {
        GPBUtil::checkUint32($var);
        $this->difficulty = $var;

        return $this;
    }

}

