<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/atlas/testing_config.proto

namespace Eolymp\Atlas;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.atlas.TestingConfig</code>
 */
class TestingConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * number of runs
     *
     * Generated from protobuf field <code>uint32 run_count = 1;</code>
     */
    protected $run_count = 0;
    /**
     * use interactor in the second and subsequent runs
     *
     * Generated from protobuf field <code>bool interactive_followup = 2;</code>
     */
    protected $interactive_followup = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $run_count
     *           number of runs
     *     @type bool $interactive_followup
     *           use interactor in the second and subsequent runs
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Atlas\TestingConfig::initOnce();
        parent::__construct($data);
    }

    /**
     * number of runs
     *
     * Generated from protobuf field <code>uint32 run_count = 1;</code>
     * @return int
     */
    public function getRunCount()
    {
        return $this->run_count;
    }

    /**
     * number of runs
     *
     * Generated from protobuf field <code>uint32 run_count = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setRunCount($var)
    {
        GPBUtil::checkUint32($var);
        $this->run_count = $var;

        return $this;
    }

    /**
     * use interactor in the second and subsequent runs
     *
     * Generated from protobuf field <code>bool interactive_followup = 2;</code>
     * @return bool
     */
    public function getInteractiveFollowup()
    {
        return $this->interactive_followup;
    }

    /**
     * use interactor in the second and subsequent runs
     *
     * Generated from protobuf field <code>bool interactive_followup = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setInteractiveFollowup($var)
    {
        GPBUtil::checkBool($var);
        $this->interactive_followup = $var;

        return $this;
    }

}

