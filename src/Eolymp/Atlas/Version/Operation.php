<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/atlas/version.proto

namespace Eolymp\Atlas\Version;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.atlas.Version.Operation</code>
 */
class Operation
{
    /**
     * Generated from protobuf enum <code>UNKNOWN_OPERATION = 0;</code>
     */
    const UNKNOWN_OPERATION = 0;
    /**
     * Generated from protobuf enum <code>ADD = 1;</code>
     */
    const ADD = 1;
    /**
     * Generated from protobuf enum <code>UPDATE = 2;</code>
     */
    const UPDATE = 2;
    /**
     * Generated from protobuf enum <code>DELETE = 3;</code>
     */
    const DELETE = 3;

    private static $valueToName = [
        self::UNKNOWN_OPERATION => 'UNKNOWN_OPERATION',
        self::ADD => 'ADD',
        self::UPDATE => 'UPDATE',
        self::DELETE => 'DELETE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Operation::class, \Eolymp\Atlas\Version_Operation::class);

