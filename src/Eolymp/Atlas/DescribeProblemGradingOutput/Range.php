<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/atlas/scoring_service.proto

namespace Eolymp\Atlas\DescribeProblemGradingOutput;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.atlas.DescribeProblemGradingOutput.Range</code>
 */
class Range extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>uint32 grade = 1;</code>
     */
    protected $grade = 0;
    /**
     * Generated from protobuf field <code>float upper_bound = 2;</code>
     */
    protected $upper_bound = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $grade
     *     @type float $upper_bound
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Atlas\ScoringService::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>uint32 grade = 1;</code>
     * @return int
     */
    public function getGrade()
    {
        return $this->grade;
    }

    /**
     * Generated from protobuf field <code>uint32 grade = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setGrade($var)
    {
        GPBUtil::checkUint32($var);
        $this->grade = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>float upper_bound = 2;</code>
     * @return float
     */
    public function getUpperBound()
    {
        return $this->upper_bound;
    }

    /**
     * Generated from protobuf field <code>float upper_bound = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setUpperBound($var)
    {
        GPBUtil::checkFloat($var);
        $this->upper_bound = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Range::class, \Eolymp\Atlas\DescribeProblemGradingOutput_Range::class);

