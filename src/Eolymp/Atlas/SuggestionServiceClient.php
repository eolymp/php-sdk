<?php
# Generated by the protocol buffer compiler. DO NOT EDIT!
# See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-php-esdk for more details.

namespace Eolymp\Atlas;

class SuggestionServiceClient {

    /** @var string base URL */
    private $url;

    /** @var callable RPC client */
    private $invoker;

    /**
     * @param string   $url     defines base URL for service
     * @param callable $invoker provides transport implementation for calls
     */
    public function __construct($url, $invoker)
    {
        $this->url = $url;
        $this->invoker = $invoker;
    }

    /**
     * @param CreateSuggestionInput $input message
     * @param array $context request parameters
     *
     * @return CreateSuggestionOutput output message
     */
    public function CreateSuggestion(CreateSuggestionInput $input, array $context = [])
    {
        $path = "/suggestions/";

        $context['name'] = "eolymp.atlas.SuggestionService/CreateSuggestion";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, CreateSuggestionOutput::class, $context);
    }

    /**
     * @param UpdateSuggestionInput $input message
     * @param array $context request parameters
     *
     * @return UpdateSuggestionOutput output message
     */
    public function UpdateSuggestion(UpdateSuggestionInput $input, array $context = [])
    {
        $path = "/suggestions/".rawurlencode($input->getSuggestionId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setSuggestionId("");

        $context['name'] = "eolymp.atlas.SuggestionService/UpdateSuggestion";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, UpdateSuggestionOutput::class, $context);
    }

    /**
     * @param ReviewSuggestionInput $input message
     * @param array $context request parameters
     *
     * @return ReviewSuggestionOutput output message
     */
    public function ReviewSuggestion(ReviewSuggestionInput $input, array $context = [])
    {
        $path = "/suggestions/".rawurlencode($input->getSuggestionId())."/review";

        // Cleanup URL parameters to avoid any ambiguity
        $input->setSuggestionId("");

        $context['name'] = "eolymp.atlas.SuggestionService/ReviewSuggestion";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, ReviewSuggestionOutput::class, $context);
    }

    /**
     * @param ResubmitSuggestionInput $input message
     * @param array $context request parameters
     *
     * @return ResubmitSuggestionOutput output message
     */
    public function ResubmitSuggestion(ResubmitSuggestionInput $input, array $context = [])
    {
        $path = "/suggestions/".rawurlencode($input->getSuggestionId())."/resubmit";

        // Cleanup URL parameters to avoid any ambiguity
        $input->setSuggestionId("");

        $context['name'] = "eolymp.atlas.SuggestionService/ResubmitSuggestion";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, ResubmitSuggestionOutput::class, $context);
    }

    /**
     * @param DeleteSuggestionInput $input message
     * @param array $context request parameters
     *
     * @return DeleteSuggestionOutput output message
     */
    public function DeleteSuggestion(DeleteSuggestionInput $input, array $context = [])
    {
        $path = "/suggestions/".rawurlencode($input->getSuggestionId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setSuggestionId("");

        $context['name'] = "eolymp.atlas.SuggestionService/DeleteSuggestion";
        $context['path'] = $path;

        return call_user_func($this->invoker, "DELETE", $this->url.$path, $input, DeleteSuggestionOutput::class, $context);
    }

    /**
     * @param ListSuggestionsInput $input message
     * @param array $context request parameters
     *
     * @return ListSuggestionsOutput output message
     */
    public function ListSuggestions(ListSuggestionsInput $input, array $context = [])
    {
        $path = "/suggestions";

        $context['name'] = "eolymp.atlas.SuggestionService/ListSuggestions";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, ListSuggestionsOutput::class, $context);
    }

    /**
     * @param DescribeSuggestionInput $input message
     * @param array $context request parameters
     *
     * @return DescribeSuggestionOutput output message
     */
    public function DescribeSuggestion(DescribeSuggestionInput $input, array $context = [])
    {
        $path = "/suggestions/".rawurlencode($input->getSuggestionId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setSuggestionId("");

        $context['name'] = "eolymp.atlas.SuggestionService/DescribeSuggestion";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, DescribeSuggestionOutput::class, $context);
    }

}
