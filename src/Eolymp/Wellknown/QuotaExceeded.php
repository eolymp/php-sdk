<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/wellknown/errors.proto

namespace Eolymp\Wellknown;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * QuotaExceeded error details. This structure can be returned with an error to provide details about quota usage.
 *
 * Generated from protobuf message <code>eolymp.wellknown.QuotaExceeded</code>
 */
class QuotaExceeded extends \Google\Protobuf\Internal\Message
{
    /**
     * Quota available to the user
     *
     * Generated from protobuf field <code>int32 quota = 1;</code>
     */
    protected $quota = 0;
    /**
     * Actual quota usage
     *
     * Generated from protobuf field <code>int32 usage = 2;</code>
     */
    protected $usage = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $quota
     *           Quota available to the user
     *     @type int $usage
     *           Actual quota usage
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Wellknown\Errors::initOnce();
        parent::__construct($data);
    }

    /**
     * Quota available to the user
     *
     * Generated from protobuf field <code>int32 quota = 1;</code>
     * @return int
     */
    public function getQuota()
    {
        return $this->quota;
    }

    /**
     * Quota available to the user
     *
     * Generated from protobuf field <code>int32 quota = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setQuota($var)
    {
        GPBUtil::checkInt32($var);
        $this->quota = $var;

        return $this;
    }

    /**
     * Actual quota usage
     *
     * Generated from protobuf field <code>int32 usage = 2;</code>
     * @return int
     */
    public function getUsage()
    {
        return $this->usage;
    }

    /**
     * Actual quota usage
     *
     * Generated from protobuf field <code>int32 usage = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setUsage($var)
    {
        GPBUtil::checkInt32($var);
        $this->usage = $var;

        return $this;
    }

}

