<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/taxonomy/enum_service.proto

namespace Eolymp\Taxonomy;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.taxonomy.UpdateValueInput</code>
 */
class UpdateValueInput extends \Google\Protobuf\Internal\Message
{
    /**
     * patch defines which fields should be set, if empty ALL fields are set
     *
     * Generated from protobuf field <code>repeated .eolymp.taxonomy.UpdateValueInput.Patch patch = 1;</code>
     */
    private $patch;
    /**
     * Generated from protobuf field <code>string enum_id = 2;</code>
     */
    protected $enum_id = '';
    /**
     * value to update
     *
     * Generated from protobuf field <code>string value_id = 3;</code>
     */
    protected $value_id = '';
    /**
     * value to set (id field is ignored during update)
     *
     * Generated from protobuf field <code>.eolymp.taxonomy.Value value = 4;</code>
     */
    protected $value = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<int>|\Google\Protobuf\Internal\RepeatedField $patch
     *           patch defines which fields should be set, if empty ALL fields are set
     *     @type string $enum_id
     *     @type string $value_id
     *           value to update
     *     @type \Eolymp\Taxonomy\Value $value
     *           value to set (id field is ignored during update)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Taxonomy\EnumService::initOnce();
        parent::__construct($data);
    }

    /**
     * patch defines which fields should be set, if empty ALL fields are set
     *
     * Generated from protobuf field <code>repeated .eolymp.taxonomy.UpdateValueInput.Patch patch = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPatch()
    {
        return $this->patch;
    }

    /**
     * patch defines which fields should be set, if empty ALL fields are set
     *
     * Generated from protobuf field <code>repeated .eolymp.taxonomy.UpdateValueInput.Patch patch = 1;</code>
     * @param array<int>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPatch($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Eolymp\Taxonomy\UpdateValueInput\Patch::class);
        $this->patch = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string enum_id = 2;</code>
     * @return string
     */
    public function getEnumId()
    {
        return $this->enum_id;
    }

    /**
     * Generated from protobuf field <code>string enum_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setEnumId($var)
    {
        GPBUtil::checkString($var, True);
        $this->enum_id = $var;

        return $this;
    }

    /**
     * value to update
     *
     * Generated from protobuf field <code>string value_id = 3;</code>
     * @return string
     */
    public function getValueId()
    {
        return $this->value_id;
    }

    /**
     * value to update
     *
     * Generated from protobuf field <code>string value_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setValueId($var)
    {
        GPBUtil::checkString($var, True);
        $this->value_id = $var;

        return $this;
    }

    /**
     * value to set (id field is ignored during update)
     *
     * Generated from protobuf field <code>.eolymp.taxonomy.Value value = 4;</code>
     * @return \Eolymp\Taxonomy\Value|null
     */
    public function getValue()
    {
        return $this->value;
    }

    public function hasValue()
    {
        return isset($this->value);
    }

    public function clearValue()
    {
        unset($this->value);
    }

    /**
     * value to set (id field is ignored during update)
     *
     * Generated from protobuf field <code>.eolymp.taxonomy.Value value = 4;</code>
     * @param \Eolymp\Taxonomy\Value $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Taxonomy\Value::class);
        $this->value = $var;

        return $this;
    }

}

