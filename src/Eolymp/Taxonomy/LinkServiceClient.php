<?php
# Generated by the protocol buffer compiler. DO NOT EDIT!
# See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-php-esdk for more details.

namespace Eolymp\Taxonomy;

    /**
     * Link service can be implemented by an endpoint which supports taxonomy, for example by a problem.
     */
class LinkServiceClient {

    /** @var string base URL */
    private $url;

    /** @var callable RPC client */
    private $invoker;

    /**
     * @param string   $url     defines base URL for service
     * @param callable $invoker provides transport implementation for calls
     */
    public function __construct($url, $invoker)
    {
        $this->url = $url;
        $this->invoker = $invoker;
    }

    /**
     * this method will override all existing links
     *
     * @param SetTopicLinksInput $input message
     * @param array $context request parameters
     *
     * @return SetTopicLinksOutput output message
     */
    public function SetTopicLinks(SetTopicLinksInput $input, array $context = [])
    {
        $path = "/topics";

        $context['name'] = "eolymp.taxonomy.LinkService/SetTopicLinks";
        $context['path'] = $path;

        return call_user_func($this->invoker, "PUT", $this->url.$path, $input, SetTopicLinksOutput::class, $context);
    }

    /**
     * list topics linked to an entity
     *
     * @param GetTopicLinksInput $input message
     * @param array $context request parameters
     *
     * @return GetTopicLinksOutput output message
     */
    public function GetTopicLinks(GetTopicLinksInput $input, array $context = [])
    {
        $path = "/topics";

        $context['name'] = "eolymp.taxonomy.LinkService/GetTopicLinks";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, GetTopicLinksOutput::class, $context);
    }

}
