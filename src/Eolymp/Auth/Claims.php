<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/auth/claims.proto

namespace Eolymp\Auth;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.auth.Claims</code>
 */
class Claims extends \Google\Protobuf\Internal\Message
{
    /**
     * jti: token unique identifier
     *
     * Generated from protobuf field <code>string id = 1000;</code>
     */
    protected $id = '';
    /**
     * iss
     *
     * Generated from protobuf field <code>string issuer = 1;</code>
     */
    protected $issuer = '';
    /**
     * sub
     *
     * Generated from protobuf field <code>string subject = 2;</code>
     */
    protected $subject = '';
    /**
     * email
     *
     * Generated from protobuf field <code>string email = 10;</code>
     */
    protected $email = '';
    /**
     * true if user has confirmed their email
     *
     * Generated from protobuf field <code>bool email_verified = 11;</code>
     */
    protected $email_verified = false;
    /**
     * user's name
     *
     * Generated from protobuf field <code>string name = 30;</code>
     */
    protected $name = '';
    /**
     * user's unique nickname (username, handler)
     *
     * Generated from protobuf field <code>string nickname = 31;</code>
     */
    protected $nickname = '';
    /**
     * fully qualified URL to fetch user's picture (photo, avatar)
     *
     * Generated from protobuf field <code>string picture = 40;</code>
     */
    protected $picture = '';
    /**
     * user's preferred locale
     *
     * Generated from protobuf field <code>string locale = 50;</code>
     */
    protected $locale = '';
    /**
     * user's preferred timezone
     *
     * Generated from protobuf field <code>string timezone = 51;</code>
     */
    protected $timezone = '';
    /**
     * true if user is a minor
     *
     * Generated from protobuf field <code>bool minor = 61;</code>
     */
    protected $minor = false;
    /**
     * country where the user is from
     *
     * Generated from protobuf field <code>string country = 70;</code>
     */
    protected $country = '';
    /**
     * deprecated: not used
     *
     * Generated from protobuf field <code>string city = 73;</code>
     */
    protected $city = '';
    /**
     * deprecated: not used
     *
     * Generated from protobuf field <code>string company = 80;</code>
     */
    protected $company = '';
    /**
     * deprecated: not used
     *
     * Generated from protobuf field <code>string business_title = 81;</code>
     */
    protected $business_title = '';
    /**
     * user's preferred runtime (programming language, compiler) at Eolymp
     *
     * Generated from protobuf field <code>string preferred_runtime = 90;</code>
     */
    protected $preferred_runtime = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           jti: token unique identifier
     *     @type string $issuer
     *           iss
     *     @type string $subject
     *           sub
     *     @type string $email
     *           email
     *     @type bool $email_verified
     *           true if user has confirmed their email
     *     @type string $name
     *           user's name
     *     @type string $nickname
     *           user's unique nickname (username, handler)
     *     @type string $picture
     *           fully qualified URL to fetch user's picture (photo, avatar)
     *     @type string $locale
     *           user's preferred locale
     *     @type string $timezone
     *           user's preferred timezone
     *     @type bool $minor
     *           true if user is a minor
     *     @type string $country
     *           country where the user is from
     *     @type string $city
     *           deprecated: not used
     *     @type string $company
     *           deprecated: not used
     *     @type string $business_title
     *           deprecated: not used
     *     @type string $preferred_runtime
     *           user's preferred runtime (programming language, compiler) at Eolymp
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Auth\Claims::initOnce();
        parent::__construct($data);
    }

    /**
     * jti: token unique identifier
     *
     * Generated from protobuf field <code>string id = 1000;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * jti: token unique identifier
     *
     * Generated from protobuf field <code>string id = 1000;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * iss
     *
     * Generated from protobuf field <code>string issuer = 1;</code>
     * @return string
     */
    public function getIssuer()
    {
        return $this->issuer;
    }

    /**
     * iss
     *
     * Generated from protobuf field <code>string issuer = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setIssuer($var)
    {
        GPBUtil::checkString($var, True);
        $this->issuer = $var;

        return $this;
    }

    /**
     * sub
     *
     * Generated from protobuf field <code>string subject = 2;</code>
     * @return string
     */
    public function getSubject()
    {
        return $this->subject;
    }

    /**
     * sub
     *
     * Generated from protobuf field <code>string subject = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSubject($var)
    {
        GPBUtil::checkString($var, True);
        $this->subject = $var;

        return $this;
    }

    /**
     * email
     *
     * Generated from protobuf field <code>string email = 10;</code>
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * email
     *
     * Generated from protobuf field <code>string email = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setEmail($var)
    {
        GPBUtil::checkString($var, True);
        $this->email = $var;

        return $this;
    }

    /**
     * true if user has confirmed their email
     *
     * Generated from protobuf field <code>bool email_verified = 11;</code>
     * @return bool
     */
    public function getEmailVerified()
    {
        return $this->email_verified;
    }

    /**
     * true if user has confirmed their email
     *
     * Generated from protobuf field <code>bool email_verified = 11;</code>
     * @param bool $var
     * @return $this
     */
    public function setEmailVerified($var)
    {
        GPBUtil::checkBool($var);
        $this->email_verified = $var;

        return $this;
    }

    /**
     * user's name
     *
     * Generated from protobuf field <code>string name = 30;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * user's name
     *
     * Generated from protobuf field <code>string name = 30;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * user's unique nickname (username, handler)
     *
     * Generated from protobuf field <code>string nickname = 31;</code>
     * @return string
     */
    public function getNickname()
    {
        return $this->nickname;
    }

    /**
     * user's unique nickname (username, handler)
     *
     * Generated from protobuf field <code>string nickname = 31;</code>
     * @param string $var
     * @return $this
     */
    public function setNickname($var)
    {
        GPBUtil::checkString($var, True);
        $this->nickname = $var;

        return $this;
    }

    /**
     * fully qualified URL to fetch user's picture (photo, avatar)
     *
     * Generated from protobuf field <code>string picture = 40;</code>
     * @return string
     */
    public function getPicture()
    {
        return $this->picture;
    }

    /**
     * fully qualified URL to fetch user's picture (photo, avatar)
     *
     * Generated from protobuf field <code>string picture = 40;</code>
     * @param string $var
     * @return $this
     */
    public function setPicture($var)
    {
        GPBUtil::checkString($var, True);
        $this->picture = $var;

        return $this;
    }

    /**
     * user's preferred locale
     *
     * Generated from protobuf field <code>string locale = 50;</code>
     * @return string
     */
    public function getLocale()
    {
        return $this->locale;
    }

    /**
     * user's preferred locale
     *
     * Generated from protobuf field <code>string locale = 50;</code>
     * @param string $var
     * @return $this
     */
    public function setLocale($var)
    {
        GPBUtil::checkString($var, True);
        $this->locale = $var;

        return $this;
    }

    /**
     * user's preferred timezone
     *
     * Generated from protobuf field <code>string timezone = 51;</code>
     * @return string
     */
    public function getTimezone()
    {
        return $this->timezone;
    }

    /**
     * user's preferred timezone
     *
     * Generated from protobuf field <code>string timezone = 51;</code>
     * @param string $var
     * @return $this
     */
    public function setTimezone($var)
    {
        GPBUtil::checkString($var, True);
        $this->timezone = $var;

        return $this;
    }

    /**
     * true if user is a minor
     *
     * Generated from protobuf field <code>bool minor = 61;</code>
     * @return bool
     */
    public function getMinor()
    {
        return $this->minor;
    }

    /**
     * true if user is a minor
     *
     * Generated from protobuf field <code>bool minor = 61;</code>
     * @param bool $var
     * @return $this
     */
    public function setMinor($var)
    {
        GPBUtil::checkBool($var);
        $this->minor = $var;

        return $this;
    }

    /**
     * country where the user is from
     *
     * Generated from protobuf field <code>string country = 70;</code>
     * @return string
     */
    public function getCountry()
    {
        return $this->country;
    }

    /**
     * country where the user is from
     *
     * Generated from protobuf field <code>string country = 70;</code>
     * @param string $var
     * @return $this
     */
    public function setCountry($var)
    {
        GPBUtil::checkString($var, True);
        $this->country = $var;

        return $this;
    }

    /**
     * deprecated: not used
     *
     * Generated from protobuf field <code>string city = 73;</code>
     * @return string
     */
    public function getCity()
    {
        return $this->city;
    }

    /**
     * deprecated: not used
     *
     * Generated from protobuf field <code>string city = 73;</code>
     * @param string $var
     * @return $this
     */
    public function setCity($var)
    {
        GPBUtil::checkString($var, True);
        $this->city = $var;

        return $this;
    }

    /**
     * deprecated: not used
     *
     * Generated from protobuf field <code>string company = 80;</code>
     * @return string
     */
    public function getCompany()
    {
        return $this->company;
    }

    /**
     * deprecated: not used
     *
     * Generated from protobuf field <code>string company = 80;</code>
     * @param string $var
     * @return $this
     */
    public function setCompany($var)
    {
        GPBUtil::checkString($var, True);
        $this->company = $var;

        return $this;
    }

    /**
     * deprecated: not used
     *
     * Generated from protobuf field <code>string business_title = 81;</code>
     * @return string
     */
    public function getBusinessTitle()
    {
        return $this->business_title;
    }

    /**
     * deprecated: not used
     *
     * Generated from protobuf field <code>string business_title = 81;</code>
     * @param string $var
     * @return $this
     */
    public function setBusinessTitle($var)
    {
        GPBUtil::checkString($var, True);
        $this->business_title = $var;

        return $this;
    }

    /**
     * user's preferred runtime (programming language, compiler) at Eolymp
     *
     * Generated from protobuf field <code>string preferred_runtime = 90;</code>
     * @return string
     */
    public function getPreferredRuntime()
    {
        return $this->preferred_runtime;
    }

    /**
     * user's preferred runtime (programming language, compiler) at Eolymp
     *
     * Generated from protobuf field <code>string preferred_runtime = 90;</code>
     * @param string $var
     * @return $this
     */
    public function setPreferredRuntime($var)
    {
        GPBUtil::checkString($var, True);
        $this->preferred_runtime = $var;

        return $this;
    }

}

