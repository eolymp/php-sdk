<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/auth/oauth2_service.proto

namespace Eolymp\Auth;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.auth.IssueTokenOutput</code>
 */
class IssueTokenOutput extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string access_token = 1;</code>
     */
    protected $access_token = '';
    /**
     * Generated from protobuf field <code>string token_type = 2;</code>
     */
    protected $token_type = '';
    /**
     * Generated from protobuf field <code>uint32 expires_in = 3;</code>
     */
    protected $expires_in = 0;
    /**
     * Generated from protobuf field <code>string refresh_token = 4;</code>
     */
    protected $refresh_token = '';
    /**
     * Generated from protobuf field <code>string scope = 5;</code>
     */
    protected $scope = '';
    /**
     * temporarily expose claims directly without wrapping them into id_token
     *
     * Generated from protobuf field <code>.eolymp.auth.Claims claims = 10;</code>
     */
    protected $claims = null;
    /**
     * Generated from protobuf field <code>string id_token = 100;</code>
     */
    protected $id_token = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $access_token
     *     @type string $token_type
     *     @type int $expires_in
     *     @type string $refresh_token
     *     @type string $scope
     *     @type \Eolymp\Auth\Claims $claims
     *           temporarily expose claims directly without wrapping them into id_token
     *     @type string $id_token
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Auth\Oauth2Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string access_token = 1;</code>
     * @return string
     */
    public function getAccessToken()
    {
        return $this->access_token;
    }

    /**
     * Generated from protobuf field <code>string access_token = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setAccessToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->access_token = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string token_type = 2;</code>
     * @return string
     */
    public function getTokenType()
    {
        return $this->token_type;
    }

    /**
     * Generated from protobuf field <code>string token_type = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setTokenType($var)
    {
        GPBUtil::checkString($var, True);
        $this->token_type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 expires_in = 3;</code>
     * @return int
     */
    public function getExpiresIn()
    {
        return $this->expires_in;
    }

    /**
     * Generated from protobuf field <code>uint32 expires_in = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setExpiresIn($var)
    {
        GPBUtil::checkUint32($var);
        $this->expires_in = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string refresh_token = 4;</code>
     * @return string
     */
    public function getRefreshToken()
    {
        return $this->refresh_token;
    }

    /**
     * Generated from protobuf field <code>string refresh_token = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setRefreshToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->refresh_token = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string scope = 5;</code>
     * @return string
     */
    public function getScope()
    {
        return $this->scope;
    }

    /**
     * Generated from protobuf field <code>string scope = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setScope($var)
    {
        GPBUtil::checkString($var, True);
        $this->scope = $var;

        return $this;
    }

    /**
     * temporarily expose claims directly without wrapping them into id_token
     *
     * Generated from protobuf field <code>.eolymp.auth.Claims claims = 10;</code>
     * @return \Eolymp\Auth\Claims|null
     */
    public function getClaims()
    {
        return $this->claims;
    }

    public function hasClaims()
    {
        return isset($this->claims);
    }

    public function clearClaims()
    {
        unset($this->claims);
    }

    /**
     * temporarily expose claims directly without wrapping them into id_token
     *
     * Generated from protobuf field <code>.eolymp.auth.Claims claims = 10;</code>
     * @param \Eolymp\Auth\Claims $var
     * @return $this
     */
    public function setClaims($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Auth\Claims::class);
        $this->claims = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string id_token = 100;</code>
     * @return string
     */
    public function getIdToken()
    {
        return $this->id_token;
    }

    /**
     * Generated from protobuf field <code>string id_token = 100;</code>
     * @param string $var
     * @return $this
     */
    public function setIdToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->id_token = $var;

        return $this;
    }

}

