<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/auth/certificate.proto

namespace Eolymp\Auth;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.auth.Certificate</code>
 */
class Certificate extends \Google\Protobuf\Internal\Message
{
    /**
     * kid
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * Generated from protobuf field <code>string use = 2;</code>
     */
    protected $use = '';
    /**
     * kty
     *
     * Generated from protobuf field <code>string type = 3;</code>
     */
    protected $type = '';
    /**
     * alg
     *
     * Generated from protobuf field <code>string algorithm = 4;</code>
     */
    protected $algorithm = '';
    /**
     * RSA: e (base64url encoded)
     *
     * Generated from protobuf field <code>string rsa_exponent = 10;</code>
     */
    protected $rsa_exponent = '';
    /**
     * RSA: n (base64url encoded)
     *
     * Generated from protobuf field <code>string rsa_modulus = 11;</code>
     */
    protected $rsa_modulus = '';
    /**
     * EC: curve
     *
     * Generated from protobuf field <code>string ec_curve = 20;</code>
     */
    protected $ec_curve = '';
    /**
     * EC: x (base64url encoded)
     *
     * Generated from protobuf field <code>string ec_x = 21;</code>
     */
    protected $ec_x = '';
    /**
     * EC: y (base64url encoded)
     *
     * Generated from protobuf field <code>string ec_y = 22;</code>
     */
    protected $ec_y = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           kid
     *     @type string $use
     *     @type string $type
     *           kty
     *     @type string $algorithm
     *           alg
     *     @type string $rsa_exponent
     *           RSA: e (base64url encoded)
     *     @type string $rsa_modulus
     *           RSA: n (base64url encoded)
     *     @type string $ec_curve
     *           EC: curve
     *     @type string $ec_x
     *           EC: x (base64url encoded)
     *     @type string $ec_y
     *           EC: y (base64url encoded)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Auth\Certificate::initOnce();
        parent::__construct($data);
    }

    /**
     * kid
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * kid
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string use = 2;</code>
     * @return string
     */
    public function getUse()
    {
        return $this->use;
    }

    /**
     * Generated from protobuf field <code>string use = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setUse($var)
    {
        GPBUtil::checkString($var, True);
        $this->use = $var;

        return $this;
    }

    /**
     * kty
     *
     * Generated from protobuf field <code>string type = 3;</code>
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * kty
     *
     * Generated from protobuf field <code>string type = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, True);
        $this->type = $var;

        return $this;
    }

    /**
     * alg
     *
     * Generated from protobuf field <code>string algorithm = 4;</code>
     * @return string
     */
    public function getAlgorithm()
    {
        return $this->algorithm;
    }

    /**
     * alg
     *
     * Generated from protobuf field <code>string algorithm = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setAlgorithm($var)
    {
        GPBUtil::checkString($var, True);
        $this->algorithm = $var;

        return $this;
    }

    /**
     * RSA: e (base64url encoded)
     *
     * Generated from protobuf field <code>string rsa_exponent = 10;</code>
     * @return string
     */
    public function getRsaExponent()
    {
        return $this->rsa_exponent;
    }

    /**
     * RSA: e (base64url encoded)
     *
     * Generated from protobuf field <code>string rsa_exponent = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setRsaExponent($var)
    {
        GPBUtil::checkString($var, True);
        $this->rsa_exponent = $var;

        return $this;
    }

    /**
     * RSA: n (base64url encoded)
     *
     * Generated from protobuf field <code>string rsa_modulus = 11;</code>
     * @return string
     */
    public function getRsaModulus()
    {
        return $this->rsa_modulus;
    }

    /**
     * RSA: n (base64url encoded)
     *
     * Generated from protobuf field <code>string rsa_modulus = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setRsaModulus($var)
    {
        GPBUtil::checkString($var, True);
        $this->rsa_modulus = $var;

        return $this;
    }

    /**
     * EC: curve
     *
     * Generated from protobuf field <code>string ec_curve = 20;</code>
     * @return string
     */
    public function getEcCurve()
    {
        return $this->ec_curve;
    }

    /**
     * EC: curve
     *
     * Generated from protobuf field <code>string ec_curve = 20;</code>
     * @param string $var
     * @return $this
     */
    public function setEcCurve($var)
    {
        GPBUtil::checkString($var, True);
        $this->ec_curve = $var;

        return $this;
    }

    /**
     * EC: x (base64url encoded)
     *
     * Generated from protobuf field <code>string ec_x = 21;</code>
     * @return string
     */
    public function getEcX()
    {
        return $this->ec_x;
    }

    /**
     * EC: x (base64url encoded)
     *
     * Generated from protobuf field <code>string ec_x = 21;</code>
     * @param string $var
     * @return $this
     */
    public function setEcX($var)
    {
        GPBUtil::checkString($var, True);
        $this->ec_x = $var;

        return $this;
    }

    /**
     * EC: y (base64url encoded)
     *
     * Generated from protobuf field <code>string ec_y = 22;</code>
     * @return string
     */
    public function getEcY()
    {
        return $this->ec_y;
    }

    /**
     * EC: y (base64url encoded)
     *
     * Generated from protobuf field <code>string ec_y = 22;</code>
     * @param string $var
     * @return $this
     */
    public function setEcY($var)
    {
        GPBUtil::checkString($var, True);
        $this->ec_y = $var;

        return $this;
    }

}

