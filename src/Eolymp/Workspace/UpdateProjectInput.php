<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/workspace/workspace.proto

namespace Eolymp\Workspace;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.workspace.UpdateProjectInput</code>
 */
class UpdateProjectInput extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string project_id = 1;</code>
     */
    protected $project_id = '';
    /**
     * Generated from protobuf field <code>.eolymp.workspace.Project project = 2;</code>
     */
    protected $project = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $project_id
     *     @type \Eolymp\Workspace\Project $project
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Workspace\Workspace::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string project_id = 1;</code>
     * @return string
     */
    public function getProjectId()
    {
        return $this->project_id;
    }

    /**
     * Generated from protobuf field <code>string project_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setProjectId($var)
    {
        GPBUtil::checkString($var, True);
        $this->project_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.workspace.Project project = 2;</code>
     * @return \Eolymp\Workspace\Project
     */
    public function getProject()
    {
        return $this->project;
    }

    /**
     * Generated from protobuf field <code>.eolymp.workspace.Project project = 2;</code>
     * @param \Eolymp\Workspace\Project $var
     * @return $this
     */
    public function setProject($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Workspace\Project::class);
        $this->project = $var;

        return $this;
    }

}

