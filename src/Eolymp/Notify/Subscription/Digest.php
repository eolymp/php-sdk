<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/notify/subscription.proto

namespace Eolymp\Notify\Subscription;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.notify.Subscription.Digest</code>
 */
class Digest
{
    /**
     * Generated from protobuf enum <code>UNKNOWN_DIGEST = 0;</code>
     */
    const UNKNOWN_DIGEST = 0;
    /**
     * Generated from protobuf enum <code>IMMEDIATE = 1;</code>
     */
    const IMMEDIATE = 1;
    /**
     * Generated from protobuf enum <code>HOURLY = 2;</code>
     */
    const HOURLY = 2;
    /**
     * Generated from protobuf enum <code>DAILY = 3;</code>
     */
    const DAILY = 3;

    private static $valueToName = [
        self::UNKNOWN_DIGEST => 'UNKNOWN_DIGEST',
        self::IMMEDIATE => 'IMMEDIATE',
        self::HOURLY => 'HOURLY',
        self::DAILY => 'DAILY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Digest::class, \Eolymp\Notify\Subscription_Digest::class);

