<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/helpdesk/ticket.proto

namespace Eolymp\Helpdesk\Ticket;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.helpdesk.Ticket.Status</code>
 */
class Status
{
    /**
     * Generated from protobuf enum <code>UNKNOWN = 0;</code>
     */
    const UNKNOWN = 0;
    /**
     * pending review by agent
     *
     * Generated from protobuf enum <code>PENDING = 1;</code>
     */
    const PENDING = 1;
    /**
     * pending action from customer
     *
     * Generated from protobuf enum <code>AWAITING = 2;</code>
     */
    const AWAITING = 2;
    /**
     * ticket is resolved
     *
     * Generated from protobuf enum <code>CLOSED = 3;</code>
     */
    const CLOSED = 3;
    /**
     * request is approved
     *
     * Generated from protobuf enum <code>APPROVED = 4;</code>
     */
    const APPROVED = 4;
    /**
     * request is rejected
     *
     * Generated from protobuf enum <code>REJECTED = 5;</code>
     */
    const REJECTED = 5;

    private static $valueToName = [
        self::UNKNOWN => 'UNKNOWN',
        self::PENDING => 'PENDING',
        self::AWAITING => 'AWAITING',
        self::CLOSED => 'CLOSED',
        self::APPROVED => 'APPROVED',
        self::REJECTED => 'REJECTED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

