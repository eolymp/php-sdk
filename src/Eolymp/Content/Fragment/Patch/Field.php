<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/content/content_fragment.proto

namespace Eolymp\Content\Fragment\Patch;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.content.Fragment.Patch.Field</code>
 */
class Field
{
    /**
     * Generated from protobuf enum <code>UNKNOWN_PATCH = 0;</code>
     */
    const UNKNOWN_PATCH = 0;
    /**
     * Generated from protobuf enum <code>PATH = 2;</code>
     */
    const PATH = 2;
    /**
     * Generated from protobuf enum <code>LOCALE = 3;</code>
     */
    const LOCALE = 3;
    /**
     * Generated from protobuf enum <code>DRAFT = 5;</code>
     */
    const DRAFT = 5;
    /**
     * Generated from protobuf enum <code>TITLE = 6;</code>
     */
    const TITLE = 6;
    /**
     * Generated from protobuf enum <code>CONTENT = 7;</code>
     */
    const CONTENT = 7;
    /**
     * Generated from protobuf enum <code>LABELS = 8;</code>
     */
    const LABELS = 8;

    private static $valueToName = [
        self::UNKNOWN_PATCH => 'UNKNOWN_PATCH',
        self::PATH => 'PATH',
        self::LOCALE => 'LOCALE',
        self::DRAFT => 'DRAFT',
        self::TITLE => 'TITLE',
        self::CONTENT => 'CONTENT',
        self::LABELS => 'LABELS',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

