<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/executor/status_v2.proto

namespace Eolymp\Executor\StatusV2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.executor.StatusV2.UploadOp</code>
 */
class UploadOp extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string target_name = 1;</code>
     */
    protected $target_name = '';
    /**
     * Generated from protobuf field <code>string target_ern = 2;</code>
     */
    protected $target_ern = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $target_name
     *     @type string $target_ern
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Executor\StatusV2::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string target_name = 1;</code>
     * @return string
     */
    public function getTargetName()
    {
        return $this->target_name;
    }

    /**
     * Generated from protobuf field <code>string target_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTargetName($var)
    {
        GPBUtil::checkString($var, True);
        $this->target_name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string target_ern = 2;</code>
     * @return string
     */
    public function getTargetErn()
    {
        return $this->target_ern;
    }

    /**
     * Generated from protobuf field <code>string target_ern = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setTargetErn($var)
    {
        GPBUtil::checkString($var, True);
        $this->target_ern = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(UploadOp::class, \Eolymp\Executor\StatusV2_UploadOp::class);

