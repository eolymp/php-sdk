<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/executor/verifier.proto

namespace Eolymp\Executor\Verifier;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.executor.Verifier.Type</code>
 */
class Type
{
    /**
     * None verifier does not perform verification. This type should be used when requester
     * wants to execute source code and inspect output by itself.
     *
     * Generated from protobuf enum <code>NONE = 0;</code>
     */
    const NONE = 0;
    /**
     * Tokens verifies individual tokens:
     *  - whitespaces and new-lines do not affect result
     *  - numbers are compared as numbers and string tokens are compared as strings
     *  - numbers are compared with predefined precision
     *  - string tokens are compared with case sensitivity
     *
     * Generated from protobuf enum <code>TOKENS = 1;</code>
     */
    const TOKENS = 1;
    /**
     * Lines verifies individual lines:
     *  - trailing whitespaces do not affect result
     *  - final empty lines do not affect result
     *
     * Generated from protobuf enum <code>LINES = 2;</code>
     */
    const LINES = 2;
    /**
     * Program verifies output and answer using program `source` written in `lang`
     * Program is compatible with testlib.
     * Program runs with following arguments: <input-file> <output-file> <answer-file>.
     * Additionally, program receives following environment variables:
     * - EOLYMP=1
     * - INPUT_FILE=<input-file>
     * - OUTPUT_FILE=<output-file>
     * - ANSWER_FILE=<answer-file>
     *
     * Generated from protobuf enum <code>PROGRAM = 3;</code>
     */
    const PROGRAM = 3;
    /**
     * Program verifies output and answer using program `source` written in `lang`
     * Program is compatible with E-Olymp checkers (uses different argument order comparing to testlib).
     * Program runs with following arguments: <input-file> <answer-file> <output-file>.
     * Additionally, program receives following environment variables:
     * - EOLYMP=1
     * - INPUT_FILE=<input-file>
     * - OUTPUT_FILE=<output-file>
     * - ANSWER_FILE=<answer-file>
     *
     * Generated from protobuf enum <code>LEGACY_PROGRAM = 4;</code>
     */
    const LEGACY_PROGRAM = 4;
    /**
     * Query results verifies JSON encoded results of a query.
     *
     * Generated from protobuf enum <code>QUERY_RESULTS = 5;</code>
     */
    const QUERY_RESULTS = 5;

    private static $valueToName = [
        self::NONE => 'NONE',
        self::TOKENS => 'TOKENS',
        self::LINES => 'LINES',
        self::PROGRAM => 'PROGRAM',
        self::LEGACY_PROGRAM => 'LEGACY_PROGRAM',
        self::QUERY_RESULTS => 'QUERY_RESULTS',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Type::class, \Eolymp\Executor\Verifier_Type::class);

