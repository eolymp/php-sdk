<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/executor/evaluation_task.proto

namespace Eolymp\Executor\EvaluationTask;

use UnexpectedValueException;

/**
 * Dependency mode used in depends_on preconditions.
 *
 * Protobuf type <code>eolymp.executor.EvaluationTask.DependencyMode</code>
 */
class DependencyMode
{
    /**
     * Generated from protobuf enum <code>UNKNOWN_DEPENDENCY_MODE = 0;</code>
     */
    const UNKNOWN_DEPENDENCY_MODE = 0;
    /**
     * to unlock dependency all runs must be accepted
     *
     * Generated from protobuf enum <code>FULLY_ACCEPTED = 1;</code>
     */
    const FULLY_ACCEPTED = 1;
    /**
     * to unlock dependency any of the matching runs must have at least one point or full accepted
     *
     * Generated from protobuf enum <code>FIRST_POINT = 2;</code>
     */
    const FIRST_POINT = 2;

    private static $valueToName = [
        self::UNKNOWN_DEPENDENCY_MODE => 'UNKNOWN_DEPENDENCY_MODE',
        self::FULLY_ACCEPTED => 'FULLY_ACCEPTED',
        self::FIRST_POINT => 'FIRST_POINT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

