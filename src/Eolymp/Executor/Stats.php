<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/executor/stats.proto

namespace Eolymp\Executor;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Stats of an execution
 *
 * Generated from protobuf message <code>eolymp.executor.Stats</code>
 */
class Stats extends \Google\Protobuf\Internal\Message
{
    /**
     * input used during run
     *
     * Generated from protobuf field <code>string stdin_url = 1;</code>
     */
    protected $stdin_url = '';
    /**
     * stdout output
     *
     * Generated from protobuf field <code>string stdout_url = 2;</code>
     */
    protected $stdout_url = '';
    /**
     * stderr output
     *
     * Generated from protobuf field <code>string stderr_url = 3;</code>
     */
    protected $stderr_url = '';
    /**
     * overall resource usage to the limits (0..1)
     *
     * Generated from protobuf field <code>float overall_usage = 10;</code>
     */
    protected $overall_usage = 0.0;
    /**
     * wall time in milliseconds
     *
     * Generated from protobuf field <code>uint32 wall_time_duration = 20;</code>
     */
    protected $wall_time_duration = 0;
    /**
     * wall time usage to the time limit (0..1)
     *
     * Generated from protobuf field <code>float wall_time_usage = 21;</code>
     */
    protected $wall_time_usage = 0.0;
    /**
     * CPU time in milliseconds
     *
     * Generated from protobuf field <code>uint32 cpu_time_duration = 25;</code>
     */
    protected $cpu_time_duration = 0;
    /**
     * CPU time usage to the time limit (0..1)
     *
     * Generated from protobuf field <code>float cpu_time_usage = 26;</code>
     */
    protected $cpu_time_usage = 0.0;
    /**
     * peak memory usage in bytes
     *
     * Generated from protobuf field <code>uint64 memory_peak = 30;</code>
     */
    protected $memory_peak = 0;
    /**
     * memory usage to the memory limit (0..1)
     *
     * Generated from protobuf field <code>float memory_usage = 31;</code>
     */
    protected $memory_usage = 0.0;
    /**
     * Generated from protobuf field <code>.eolymp.executor.ResourceUsage resource_usage = 50;</code>
     */
    protected $resource_usage = null;
    /**
     * exit code
     *
     * Generated from protobuf field <code>uint32 exit_code = 100;</code>
     */
    protected $exit_code = 0;
    /**
     * termination signal, if any
     *
     * Generated from protobuf field <code>uint32 signal = 101;</code>
     */
    protected $signal = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $stdin_url
     *           input used during run
     *     @type string $stdout_url
     *           stdout output
     *     @type string $stderr_url
     *           stderr output
     *     @type float $overall_usage
     *           overall resource usage to the limits (0..1)
     *     @type int $wall_time_duration
     *           wall time in milliseconds
     *     @type float $wall_time_usage
     *           wall time usage to the time limit (0..1)
     *     @type int $cpu_time_duration
     *           CPU time in milliseconds
     *     @type float $cpu_time_usage
     *           CPU time usage to the time limit (0..1)
     *     @type int|string $memory_peak
     *           peak memory usage in bytes
     *     @type float $memory_usage
     *           memory usage to the memory limit (0..1)
     *     @type \Eolymp\Executor\ResourceUsage $resource_usage
     *     @type int $exit_code
     *           exit code
     *     @type int $signal
     *           termination signal, if any
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Executor\Stats::initOnce();
        parent::__construct($data);
    }

    /**
     * input used during run
     *
     * Generated from protobuf field <code>string stdin_url = 1;</code>
     * @return string
     */
    public function getStdinUrl()
    {
        return $this->stdin_url;
    }

    /**
     * input used during run
     *
     * Generated from protobuf field <code>string stdin_url = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setStdinUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->stdin_url = $var;

        return $this;
    }

    /**
     * stdout output
     *
     * Generated from protobuf field <code>string stdout_url = 2;</code>
     * @return string
     */
    public function getStdoutUrl()
    {
        return $this->stdout_url;
    }

    /**
     * stdout output
     *
     * Generated from protobuf field <code>string stdout_url = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setStdoutUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->stdout_url = $var;

        return $this;
    }

    /**
     * stderr output
     *
     * Generated from protobuf field <code>string stderr_url = 3;</code>
     * @return string
     */
    public function getStderrUrl()
    {
        return $this->stderr_url;
    }

    /**
     * stderr output
     *
     * Generated from protobuf field <code>string stderr_url = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setStderrUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->stderr_url = $var;

        return $this;
    }

    /**
     * overall resource usage to the limits (0..1)
     *
     * Generated from protobuf field <code>float overall_usage = 10;</code>
     * @return float
     */
    public function getOverallUsage()
    {
        return $this->overall_usage;
    }

    /**
     * overall resource usage to the limits (0..1)
     *
     * Generated from protobuf field <code>float overall_usage = 10;</code>
     * @param float $var
     * @return $this
     */
    public function setOverallUsage($var)
    {
        GPBUtil::checkFloat($var);
        $this->overall_usage = $var;

        return $this;
    }

    /**
     * wall time in milliseconds
     *
     * Generated from protobuf field <code>uint32 wall_time_duration = 20;</code>
     * @return int
     */
    public function getWallTimeDuration()
    {
        return $this->wall_time_duration;
    }

    /**
     * wall time in milliseconds
     *
     * Generated from protobuf field <code>uint32 wall_time_duration = 20;</code>
     * @param int $var
     * @return $this
     */
    public function setWallTimeDuration($var)
    {
        GPBUtil::checkUint32($var);
        $this->wall_time_duration = $var;

        return $this;
    }

    /**
     * wall time usage to the time limit (0..1)
     *
     * Generated from protobuf field <code>float wall_time_usage = 21;</code>
     * @return float
     */
    public function getWallTimeUsage()
    {
        return $this->wall_time_usage;
    }

    /**
     * wall time usage to the time limit (0..1)
     *
     * Generated from protobuf field <code>float wall_time_usage = 21;</code>
     * @param float $var
     * @return $this
     */
    public function setWallTimeUsage($var)
    {
        GPBUtil::checkFloat($var);
        $this->wall_time_usage = $var;

        return $this;
    }

    /**
     * CPU time in milliseconds
     *
     * Generated from protobuf field <code>uint32 cpu_time_duration = 25;</code>
     * @return int
     */
    public function getCpuTimeDuration()
    {
        return $this->cpu_time_duration;
    }

    /**
     * CPU time in milliseconds
     *
     * Generated from protobuf field <code>uint32 cpu_time_duration = 25;</code>
     * @param int $var
     * @return $this
     */
    public function setCpuTimeDuration($var)
    {
        GPBUtil::checkUint32($var);
        $this->cpu_time_duration = $var;

        return $this;
    }

    /**
     * CPU time usage to the time limit (0..1)
     *
     * Generated from protobuf field <code>float cpu_time_usage = 26;</code>
     * @return float
     */
    public function getCpuTimeUsage()
    {
        return $this->cpu_time_usage;
    }

    /**
     * CPU time usage to the time limit (0..1)
     *
     * Generated from protobuf field <code>float cpu_time_usage = 26;</code>
     * @param float $var
     * @return $this
     */
    public function setCpuTimeUsage($var)
    {
        GPBUtil::checkFloat($var);
        $this->cpu_time_usage = $var;

        return $this;
    }

    /**
     * peak memory usage in bytes
     *
     * Generated from protobuf field <code>uint64 memory_peak = 30;</code>
     * @return int|string
     */
    public function getMemoryPeak()
    {
        return $this->memory_peak;
    }

    /**
     * peak memory usage in bytes
     *
     * Generated from protobuf field <code>uint64 memory_peak = 30;</code>
     * @param int|string $var
     * @return $this
     */
    public function setMemoryPeak($var)
    {
        GPBUtil::checkUint64($var);
        $this->memory_peak = $var;

        return $this;
    }

    /**
     * memory usage to the memory limit (0..1)
     *
     * Generated from protobuf field <code>float memory_usage = 31;</code>
     * @return float
     */
    public function getMemoryUsage()
    {
        return $this->memory_usage;
    }

    /**
     * memory usage to the memory limit (0..1)
     *
     * Generated from protobuf field <code>float memory_usage = 31;</code>
     * @param float $var
     * @return $this
     */
    public function setMemoryUsage($var)
    {
        GPBUtil::checkFloat($var);
        $this->memory_usage = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.executor.ResourceUsage resource_usage = 50;</code>
     * @return \Eolymp\Executor\ResourceUsage
     */
    public function getResourceUsage()
    {
        return $this->resource_usage;
    }

    /**
     * Generated from protobuf field <code>.eolymp.executor.ResourceUsage resource_usage = 50;</code>
     * @param \Eolymp\Executor\ResourceUsage $var
     * @return $this
     */
    public function setResourceUsage($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Executor\ResourceUsage::class);
        $this->resource_usage = $var;

        return $this;
    }

    /**
     * exit code
     *
     * Generated from protobuf field <code>uint32 exit_code = 100;</code>
     * @return int
     */
    public function getExitCode()
    {
        return $this->exit_code;
    }

    /**
     * exit code
     *
     * Generated from protobuf field <code>uint32 exit_code = 100;</code>
     * @param int $var
     * @return $this
     */
    public function setExitCode($var)
    {
        GPBUtil::checkUint32($var);
        $this->exit_code = $var;

        return $this;
    }

    /**
     * termination signal, if any
     *
     * Generated from protobuf field <code>uint32 signal = 101;</code>
     * @return int
     */
    public function getSignal()
    {
        return $this->signal;
    }

    /**
     * termination signal, if any
     *
     * Generated from protobuf field <code>uint32 signal = 101;</code>
     * @param int $var
     * @return $this
     */
    public function setSignal($var)
    {
        GPBUtil::checkUint32($var);
        $this->signal = $var;

        return $this;
    }

}

