<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/executor/task_v2.proto

namespace Eolymp\Executor\TaskV2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Mount defines how to mount workdir of one actor onto another
 *
 * Generated from protobuf message <code>eolymp.executor.TaskV2.Mount</code>
 */
class Mount extends \Google\Protobuf\Internal\Message
{
    /**
     * Name of the actor to mount
     *
     * Generated from protobuf field <code>string from_actor = 1;</code>
     */
    protected $from_actor = '';
    /**
     * Path where workdir will be mounted to
     *
     * Generated from protobuf field <code>string to_path = 2;</code>
     */
    protected $to_path = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $from_actor
     *           Name of the actor to mount
     *     @type string $to_path
     *           Path where workdir will be mounted to
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Executor\TaskV2::initOnce();
        parent::__construct($data);
    }

    /**
     * Name of the actor to mount
     *
     * Generated from protobuf field <code>string from_actor = 1;</code>
     * @return string
     */
    public function getFromActor()
    {
        return $this->from_actor;
    }

    /**
     * Name of the actor to mount
     *
     * Generated from protobuf field <code>string from_actor = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setFromActor($var)
    {
        GPBUtil::checkString($var, True);
        $this->from_actor = $var;

        return $this;
    }

    /**
     * Path where workdir will be mounted to
     *
     * Generated from protobuf field <code>string to_path = 2;</code>
     * @return string
     */
    public function getToPath()
    {
        return $this->to_path;
    }

    /**
     * Path where workdir will be mounted to
     *
     * Generated from protobuf field <code>string to_path = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setToPath($var)
    {
        GPBUtil::checkString($var, True);
        $this->to_path = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Mount::class, \Eolymp\Executor\TaskV2_Mount::class);

