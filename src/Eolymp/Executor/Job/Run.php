<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/executor/job.proto

namespace Eolymp\Executor\Job;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Run defines a single execution of the task.
 *
 * Generated from protobuf message <code>eolymp.executor.Job.Run</code>
 */
class Run extends \Google\Protobuf\Internal\Message
{
    /**
     * Run reference.
     *
     * Generated from protobuf field <code>string reference = 1;</code>
     */
    protected $reference = '';
    /**
     * Index defines order in which runs are executed.
     *
     * Generated from protobuf field <code>uint32 index = 2;</code>
     */
    protected $index = 0;
    /**
     * Labels used to match constraints and preconditions.
     *
     * Generated from protobuf field <code>repeated string labels = 10;</code>
     */
    private $labels;
    /**
     * Steps to execute the run
     *
     * Generated from protobuf field <code>repeated .eolymp.executor.Job.Step steps = 20;</code>
     */
    private $steps;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $reference
     *           Run reference.
     *     @type int $index
     *           Index defines order in which runs are executed.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $labels
     *           Labels used to match constraints and preconditions.
     *     @type array<\Eolymp\Executor\Job\Step>|\Google\Protobuf\Internal\RepeatedField $steps
     *           Steps to execute the run
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Executor\Job::initOnce();
        parent::__construct($data);
    }

    /**
     * Run reference.
     *
     * Generated from protobuf field <code>string reference = 1;</code>
     * @return string
     */
    public function getReference()
    {
        return $this->reference;
    }

    /**
     * Run reference.
     *
     * Generated from protobuf field <code>string reference = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setReference($var)
    {
        GPBUtil::checkString($var, True);
        $this->reference = $var;

        return $this;
    }

    /**
     * Index defines order in which runs are executed.
     *
     * Generated from protobuf field <code>uint32 index = 2;</code>
     * @return int
     */
    public function getIndex()
    {
        return $this->index;
    }

    /**
     * Index defines order in which runs are executed.
     *
     * Generated from protobuf field <code>uint32 index = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setIndex($var)
    {
        GPBUtil::checkUint32($var);
        $this->index = $var;

        return $this;
    }

    /**
     * Labels used to match constraints and preconditions.
     *
     * Generated from protobuf field <code>repeated string labels = 10;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getLabels()
    {
        return $this->labels;
    }

    /**
     * Labels used to match constraints and preconditions.
     *
     * Generated from protobuf field <code>repeated string labels = 10;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setLabels($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->labels = $arr;

        return $this;
    }

    /**
     * Steps to execute the run
     *
     * Generated from protobuf field <code>repeated .eolymp.executor.Job.Step steps = 20;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSteps()
    {
        return $this->steps;
    }

    /**
     * Steps to execute the run
     *
     * Generated from protobuf field <code>repeated .eolymp.executor.Job.Step steps = 20;</code>
     * @param array<\Eolymp\Executor\Job\Step>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSteps($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Eolymp\Executor\Job\Step::class);
        $this->steps = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Run::class, \Eolymp\Executor\Job_Run::class);

