<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/executor/deprecated_job.proto

namespace Eolymp\Executor\Job\Step;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Copy operation copies file from one actor to another
 *
 * Generated from protobuf message <code>eolymp.executor.Job.Step.Copy</code>
 */
class Copy extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string source_actor = 1;</code>
     */
    protected $source_actor = '';
    /**
     * Generated from protobuf field <code>string source_path = 2;</code>
     */
    protected $source_path = '';
    /**
     * Generated from protobuf field <code>string target_actor = 3;</code>
     */
    protected $target_actor = '';
    /**
     * Generated from protobuf field <code>string target_path = 4;</code>
     */
    protected $target_path = '';
    /**
     * If true, step won't fail if source file does not exist
     *
     * Generated from protobuf field <code>bool optionally = 5;</code>
     */
    protected $optionally = false;
    /**
     * If true, source file will be removed (ie. file will be moved rather than copied)
     *
     * Generated from protobuf field <code>bool remove_source = 6;</code>
     */
    protected $remove_source = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $source_actor
     *     @type string $source_path
     *     @type string $target_actor
     *     @type string $target_path
     *     @type bool $optionally
     *           If true, step won't fail if source file does not exist
     *     @type bool $remove_source
     *           If true, source file will be removed (ie. file will be moved rather than copied)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Executor\DeprecatedJob::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string source_actor = 1;</code>
     * @return string
     */
    public function getSourceActor()
    {
        return $this->source_actor;
    }

    /**
     * Generated from protobuf field <code>string source_actor = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSourceActor($var)
    {
        GPBUtil::checkString($var, True);
        $this->source_actor = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string source_path = 2;</code>
     * @return string
     */
    public function getSourcePath()
    {
        return $this->source_path;
    }

    /**
     * Generated from protobuf field <code>string source_path = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSourcePath($var)
    {
        GPBUtil::checkString($var, True);
        $this->source_path = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string target_actor = 3;</code>
     * @return string
     */
    public function getTargetActor()
    {
        return $this->target_actor;
    }

    /**
     * Generated from protobuf field <code>string target_actor = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setTargetActor($var)
    {
        GPBUtil::checkString($var, True);
        $this->target_actor = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string target_path = 4;</code>
     * @return string
     */
    public function getTargetPath()
    {
        return $this->target_path;
    }

    /**
     * Generated from protobuf field <code>string target_path = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setTargetPath($var)
    {
        GPBUtil::checkString($var, True);
        $this->target_path = $var;

        return $this;
    }

    /**
     * If true, step won't fail if source file does not exist
     *
     * Generated from protobuf field <code>bool optionally = 5;</code>
     * @return bool
     */
    public function getOptionally()
    {
        return $this->optionally;
    }

    /**
     * If true, step won't fail if source file does not exist
     *
     * Generated from protobuf field <code>bool optionally = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setOptionally($var)
    {
        GPBUtil::checkBool($var);
        $this->optionally = $var;

        return $this;
    }

    /**
     * If true, source file will be removed (ie. file will be moved rather than copied)
     *
     * Generated from protobuf field <code>bool remove_source = 6;</code>
     * @return bool
     */
    public function getRemoveSource()
    {
        return $this->remove_source;
    }

    /**
     * If true, source file will be removed (ie. file will be moved rather than copied)
     *
     * Generated from protobuf field <code>bool remove_source = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setRemoveSource($var)
    {
        GPBUtil::checkBool($var);
        $this->remove_source = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Copy::class, \Eolymp\Executor\Job_Step_Copy::class);

