<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/executor/checker.proto

namespace Eolymp\Executor;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Checker provides configuration on how to verify answers
 *
 * Generated from protobuf message <code>eolymp.executor.Checker</code>
 */
class Checker extends \Google\Protobuf\Internal\Message
{
    /**
     * Checker type (see types enumeration for details)
     *
     * Generated from protobuf field <code>.eolymp.executor.Checker.Type type = 1;</code>
     */
    protected $type = 0;
    /**
     * Programming language for PROGRAM checker
     *
     * Generated from protobuf field <code>string lang = 2;</code>
     */
    protected $lang = '';
    /**
     * deprecated
     *
     * Generated from protobuf field <code>string source = 3;</code>
     */
    protected $source = '';
    /**
     * Source code for PROGRAM checker
     *
     * Generated from protobuf field <code>string source_url = 8;</code>
     */
    protected $source_url = '';
    /**
     * Precision for TOKEN checker
     *
     * Generated from protobuf field <code>int32 precision = 4;</code>
     */
    protected $precision = 0;
    /**
     * Case sensitivity option for TOKEN checker
     *
     * Generated from protobuf field <code>bool case_sensitive = 5;</code>
     */
    protected $case_sensitive = false;
    /**
     * Order sensitivity option for QUERY_RESULTS checker.
     * If set to false the rows of output and answer will be sorted before comparison.
     *
     * Generated from protobuf field <code>bool order_sensitive = 6;</code>
     */
    protected $order_sensitive = false;
    /**
     * Secret means checker code and configuration must not be exposed to users
     *
     * Generated from protobuf field <code>bool secret = 7;</code>
     */
    protected $secret = false;
    /**
     * Additional files placed into workdir during compilation and execution
     *
     * Generated from protobuf field <code>repeated .eolymp.executor.Checker.File files = 10;</code>
     */
    private $files;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $type
     *           Checker type (see types enumeration for details)
     *     @type string $lang
     *           Programming language for PROGRAM checker
     *     @type string $source
     *           deprecated
     *     @type string $source_url
     *           Source code for PROGRAM checker
     *     @type int $precision
     *           Precision for TOKEN checker
     *     @type bool $case_sensitive
     *           Case sensitivity option for TOKEN checker
     *     @type bool $order_sensitive
     *           Order sensitivity option for QUERY_RESULTS checker.
     *           If set to false the rows of output and answer will be sorted before comparison.
     *     @type bool $secret
     *           Secret means checker code and configuration must not be exposed to users
     *     @type \Eolymp\Executor\Checker\File[]|\Google\Protobuf\Internal\RepeatedField $files
     *           Additional files placed into workdir during compilation and execution
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Executor\Checker::initOnce();
        parent::__construct($data);
    }

    /**
     * Checker type (see types enumeration for details)
     *
     * Generated from protobuf field <code>.eolymp.executor.Checker.Type type = 1;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Checker type (see types enumeration for details)
     *
     * Generated from protobuf field <code>.eolymp.executor.Checker.Type type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Executor\Checker_Type::class);
        $this->type = $var;

        return $this;
    }

    /**
     * Programming language for PROGRAM checker
     *
     * Generated from protobuf field <code>string lang = 2;</code>
     * @return string
     */
    public function getLang()
    {
        return $this->lang;
    }

    /**
     * Programming language for PROGRAM checker
     *
     * Generated from protobuf field <code>string lang = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setLang($var)
    {
        GPBUtil::checkString($var, True);
        $this->lang = $var;

        return $this;
    }

    /**
     * deprecated
     *
     * Generated from protobuf field <code>string source = 3;</code>
     * @return string
     */
    public function getSource()
    {
        return $this->source;
    }

    /**
     * deprecated
     *
     * Generated from protobuf field <code>string source = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setSource($var)
    {
        GPBUtil::checkString($var, True);
        $this->source = $var;

        return $this;
    }

    /**
     * Source code for PROGRAM checker
     *
     * Generated from protobuf field <code>string source_url = 8;</code>
     * @return string
     */
    public function getSourceUrl()
    {
        return $this->source_url;
    }

    /**
     * Source code for PROGRAM checker
     *
     * Generated from protobuf field <code>string source_url = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setSourceUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->source_url = $var;

        return $this;
    }

    /**
     * Precision for TOKEN checker
     *
     * Generated from protobuf field <code>int32 precision = 4;</code>
     * @return int
     */
    public function getPrecision()
    {
        return $this->precision;
    }

    /**
     * Precision for TOKEN checker
     *
     * Generated from protobuf field <code>int32 precision = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setPrecision($var)
    {
        GPBUtil::checkInt32($var);
        $this->precision = $var;

        return $this;
    }

    /**
     * Case sensitivity option for TOKEN checker
     *
     * Generated from protobuf field <code>bool case_sensitive = 5;</code>
     * @return bool
     */
    public function getCaseSensitive()
    {
        return $this->case_sensitive;
    }

    /**
     * Case sensitivity option for TOKEN checker
     *
     * Generated from protobuf field <code>bool case_sensitive = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setCaseSensitive($var)
    {
        GPBUtil::checkBool($var);
        $this->case_sensitive = $var;

        return $this;
    }

    /**
     * Order sensitivity option for QUERY_RESULTS checker.
     * If set to false the rows of output and answer will be sorted before comparison.
     *
     * Generated from protobuf field <code>bool order_sensitive = 6;</code>
     * @return bool
     */
    public function getOrderSensitive()
    {
        return $this->order_sensitive;
    }

    /**
     * Order sensitivity option for QUERY_RESULTS checker.
     * If set to false the rows of output and answer will be sorted before comparison.
     *
     * Generated from protobuf field <code>bool order_sensitive = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setOrderSensitive($var)
    {
        GPBUtil::checkBool($var);
        $this->order_sensitive = $var;

        return $this;
    }

    /**
     * Secret means checker code and configuration must not be exposed to users
     *
     * Generated from protobuf field <code>bool secret = 7;</code>
     * @return bool
     */
    public function getSecret()
    {
        return $this->secret;
    }

    /**
     * Secret means checker code and configuration must not be exposed to users
     *
     * Generated from protobuf field <code>bool secret = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setSecret($var)
    {
        GPBUtil::checkBool($var);
        $this->secret = $var;

        return $this;
    }

    /**
     * Additional files placed into workdir during compilation and execution
     *
     * Generated from protobuf field <code>repeated .eolymp.executor.Checker.File files = 10;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getFiles()
    {
        return $this->files;
    }

    /**
     * Additional files placed into workdir during compilation and execution
     *
     * Generated from protobuf field <code>repeated .eolymp.executor.Checker.File files = 10;</code>
     * @param \Eolymp\Executor\Checker\File[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setFiles($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Eolymp\Executor\Checker\File::class);
        $this->files = $arr;

        return $this;
    }

}

