<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/printer/printer_connector.proto

namespace Eolymp\Printer;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.printer.PrinterConnectorClientMessage</code>
 */
class PrinterConnectorClientMessage extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    protected $message;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *     @type \Eolymp\Printer\PrinterConnectorClientMessage\Authenticate $authenticate
     *     @type \Eolymp\Printer\PrinterConnectorClientMessage\Status $status
     *     @type \Eolymp\Printer\PrinterConnectorClientMessage\Report $report
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Printer\PrinterConnector::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.printer.PrinterConnectorClientMessage.Authenticate authenticate = 100;</code>
     * @return \Eolymp\Printer\PrinterConnectorClientMessage\Authenticate|null
     */
    public function getAuthenticate()
    {
        return $this->readOneof(100);
    }

    public function hasAuthenticate()
    {
        return $this->hasOneof(100);
    }

    /**
     * Generated from protobuf field <code>.eolymp.printer.PrinterConnectorClientMessage.Authenticate authenticate = 100;</code>
     * @param \Eolymp\Printer\PrinterConnectorClientMessage\Authenticate $var
     * @return $this
     */
    public function setAuthenticate($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Printer\PrinterConnectorClientMessage\Authenticate::class);
        $this->writeOneof(100, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.printer.PrinterConnectorClientMessage.Status status = 101;</code>
     * @return \Eolymp\Printer\PrinterConnectorClientMessage\Status|null
     */
    public function getStatus()
    {
        return $this->readOneof(101);
    }

    public function hasStatus()
    {
        return $this->hasOneof(101);
    }

    /**
     * Generated from protobuf field <code>.eolymp.printer.PrinterConnectorClientMessage.Status status = 101;</code>
     * @param \Eolymp\Printer\PrinterConnectorClientMessage\Status $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Printer\PrinterConnectorClientMessage\Status::class);
        $this->writeOneof(101, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.printer.PrinterConnectorClientMessage.Report report = 102;</code>
     * @return \Eolymp\Printer\PrinterConnectorClientMessage\Report|null
     */
    public function getReport()
    {
        return $this->readOneof(102);
    }

    public function hasReport()
    {
        return $this->hasOneof(102);
    }

    /**
     * Generated from protobuf field <code>.eolymp.printer.PrinterConnectorClientMessage.Report report = 102;</code>
     * @param \Eolymp\Printer\PrinterConnectorClientMessage\Report $var
     * @return $this
     */
    public function setReport($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Printer\PrinterConnectorClientMessage\Report::class);
        $this->writeOneof(102, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getMessage()
    {
        return $this->whichOneof("message");
    }

}

