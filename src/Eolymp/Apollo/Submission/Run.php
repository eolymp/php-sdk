<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/apollo/submission.proto

namespace Eolymp\Apollo\Submission;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.apollo.Submission.Run</code>
 */
class Run extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * Generated from protobuf field <code>int32 wall_time_usage = 2;</code>
     */
    protected $wall_time_usage = 0;
    /**
     * Generated from protobuf field <code>int32 cpu_time_usage = 3;</code>
     */
    protected $cpu_time_usage = 0;
    /**
     * Generated from protobuf field <code>int32 memory_usage = 4;</code>
     */
    protected $memory_usage = 0;
    /**
     * Generated from protobuf field <code>int32 test_index = 10;</code>
     */
    protected $test_index = 0;
    /**
     * Generated from protobuf field <code>string test_id = 11;</code>
     */
    protected $test_id = '';
    /**
     * Generated from protobuf field <code>.eolymp.apollo.Submission.Run.Status status = 20;</code>
     */
    protected $status = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *     @type int $wall_time_usage
     *     @type int $cpu_time_usage
     *     @type int $memory_usage
     *     @type int $test_index
     *     @type string $test_id
     *     @type int $status
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Apollo\Submission::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 wall_time_usage = 2;</code>
     * @return int
     */
    public function getWallTimeUsage()
    {
        return $this->wall_time_usage;
    }

    /**
     * Generated from protobuf field <code>int32 wall_time_usage = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setWallTimeUsage($var)
    {
        GPBUtil::checkInt32($var);
        $this->wall_time_usage = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 cpu_time_usage = 3;</code>
     * @return int
     */
    public function getCpuTimeUsage()
    {
        return $this->cpu_time_usage;
    }

    /**
     * Generated from protobuf field <code>int32 cpu_time_usage = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setCpuTimeUsage($var)
    {
        GPBUtil::checkInt32($var);
        $this->cpu_time_usage = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 memory_usage = 4;</code>
     * @return int
     */
    public function getMemoryUsage()
    {
        return $this->memory_usage;
    }

    /**
     * Generated from protobuf field <code>int32 memory_usage = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setMemoryUsage($var)
    {
        GPBUtil::checkInt32($var);
        $this->memory_usage = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 test_index = 10;</code>
     * @return int
     */
    public function getTestIndex()
    {
        return $this->test_index;
    }

    /**
     * Generated from protobuf field <code>int32 test_index = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setTestIndex($var)
    {
        GPBUtil::checkInt32($var);
        $this->test_index = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string test_id = 11;</code>
     * @return string
     */
    public function getTestId()
    {
        return $this->test_id;
    }

    /**
     * Generated from protobuf field <code>string test_id = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setTestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->test_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.apollo.Submission.Run.Status status = 20;</code>
     * @return int
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Generated from protobuf field <code>.eolymp.apollo.Submission.Run.Status status = 20;</code>
     * @param int $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Apollo\Submission_Run_Status::class);
        $this->status = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Run::class, \Eolymp\Apollo\Submission_Run::class);

