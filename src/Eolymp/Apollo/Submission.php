<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/apollo/submission.proto

namespace Eolymp\Apollo;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.apollo.Submission</code>
 */
class Submission extends \Google\Protobuf\Internal\Message
{
    /**
     * unique identifier
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * problem
     *
     * Generated from protobuf field <code>string problem_id = 2;</code>
     */
    protected $problem_id = '';
    /**
     * submitter
     *
     * Generated from protobuf field <code>string user_id = 3;</code>
     */
    protected $user_id = '';
    /**
     * time when submission was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp submitted_at = 4;</code>
     */
    protected $submitted_at = null;
    /**
     * programming language
     *
     * Generated from protobuf field <code>string lang = 10;</code>
     */
    protected $lang = '';
    /**
     * source code
     *
     * Generated from protobuf field <code>string source = 11;</code>
     */
    protected $source = '';
    /**
     * status (see explanation for enumeration values)
     *
     * Generated from protobuf field <code>.eolymp.apollo.Submission.Status status = 20;</code>
     */
    protected $status = 0;
    /**
     * error message in case status is ERROR
     *
     * Generated from protobuf field <code>string error = 21;</code>
     */
    protected $error = '';
    /**
     * score from 0 (none of the tests are passing) to 1 (all tests are passing)
     *
     * Generated from protobuf field <code>float score = 30;</code>
     */
    protected $score = 0.0;
    /**
     * status for each run
     *
     * Generated from protobuf field <code>repeated .eolymp.apollo.Submission.Run runs = 50;</code>
     */
    private $runs;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           unique identifier
     *     @type string $problem_id
     *           problem
     *     @type string $user_id
     *           submitter
     *     @type \Google\Protobuf\Timestamp $submitted_at
     *           time when submission was created
     *     @type string $lang
     *           programming language
     *     @type string $source
     *           source code
     *     @type int $status
     *           status (see explanation for enumeration values)
     *     @type string $error
     *           error message in case status is ERROR
     *     @type float $score
     *           score from 0 (none of the tests are passing) to 1 (all tests are passing)
     *     @type \Eolymp\Apollo\Submission\Run[]|\Google\Protobuf\Internal\RepeatedField $runs
     *           status for each run
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Apollo\Submission::initOnce();
        parent::__construct($data);
    }

    /**
     * unique identifier
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * unique identifier
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * problem
     *
     * Generated from protobuf field <code>string problem_id = 2;</code>
     * @return string
     */
    public function getProblemId()
    {
        return $this->problem_id;
    }

    /**
     * problem
     *
     * Generated from protobuf field <code>string problem_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setProblemId($var)
    {
        GPBUtil::checkString($var, True);
        $this->problem_id = $var;

        return $this;
    }

    /**
     * submitter
     *
     * Generated from protobuf field <code>string user_id = 3;</code>
     * @return string
     */
    public function getUserId()
    {
        return $this->user_id;
    }

    /**
     * submitter
     *
     * Generated from protobuf field <code>string user_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setUserId($var)
    {
        GPBUtil::checkString($var, True);
        $this->user_id = $var;

        return $this;
    }

    /**
     * time when submission was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp submitted_at = 4;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getSubmittedAt()
    {
        return $this->submitted_at;
    }

    /**
     * time when submission was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp submitted_at = 4;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setSubmittedAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->submitted_at = $var;

        return $this;
    }

    /**
     * programming language
     *
     * Generated from protobuf field <code>string lang = 10;</code>
     * @return string
     */
    public function getLang()
    {
        return $this->lang;
    }

    /**
     * programming language
     *
     * Generated from protobuf field <code>string lang = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setLang($var)
    {
        GPBUtil::checkString($var, True);
        $this->lang = $var;

        return $this;
    }

    /**
     * source code
     *
     * Generated from protobuf field <code>string source = 11;</code>
     * @return string
     */
    public function getSource()
    {
        return $this->source;
    }

    /**
     * source code
     *
     * Generated from protobuf field <code>string source = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setSource($var)
    {
        GPBUtil::checkString($var, True);
        $this->source = $var;

        return $this;
    }

    /**
     * status (see explanation for enumeration values)
     *
     * Generated from protobuf field <code>.eolymp.apollo.Submission.Status status = 20;</code>
     * @return int
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * status (see explanation for enumeration values)
     *
     * Generated from protobuf field <code>.eolymp.apollo.Submission.Status status = 20;</code>
     * @param int $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Apollo\Submission_Status::class);
        $this->status = $var;

        return $this;
    }

    /**
     * error message in case status is ERROR
     *
     * Generated from protobuf field <code>string error = 21;</code>
     * @return string
     */
    public function getError()
    {
        return $this->error;
    }

    /**
     * error message in case status is ERROR
     *
     * Generated from protobuf field <code>string error = 21;</code>
     * @param string $var
     * @return $this
     */
    public function setError($var)
    {
        GPBUtil::checkString($var, True);
        $this->error = $var;

        return $this;
    }

    /**
     * score from 0 (none of the tests are passing) to 1 (all tests are passing)
     *
     * Generated from protobuf field <code>float score = 30;</code>
     * @return float
     */
    public function getScore()
    {
        return $this->score;
    }

    /**
     * score from 0 (none of the tests are passing) to 1 (all tests are passing)
     *
     * Generated from protobuf field <code>float score = 30;</code>
     * @param float $var
     * @return $this
     */
    public function setScore($var)
    {
        GPBUtil::checkFloat($var);
        $this->score = $var;

        return $this;
    }

    /**
     * status for each run
     *
     * Generated from protobuf field <code>repeated .eolymp.apollo.Submission.Run runs = 50;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRuns()
    {
        return $this->runs;
    }

    /**
     * status for each run
     *
     * Generated from protobuf field <code>repeated .eolymp.apollo.Submission.Run runs = 50;</code>
     * @param \Eolymp\Apollo\Submission\Run[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRuns($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Eolymp\Apollo\Submission\Run::class);
        $this->runs = $arr;

        return $this;
    }

}

