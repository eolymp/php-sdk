<?php
# Generated by the protocol buffer compiler. DO NOT EDIT!
# See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-php-esdk for more details.

namespace Eolymp\Community;

class SessionServiceClient {

    /** @var string base URL */
    private $url;

    /** @var callable RPC client */
    private $invoker;

    /**
     * @param string   $url     defines base URL for service
     * @param callable $invoker provides transport implementation for calls
     */
    public function __construct($url, $invoker)
    {
        $this->url = $url;
        $this->invoker = $invoker;
    }

    /**
     * @param DescribeSessionInput $input message
     * @param array $context request parameters
     *
     * @return DescribeSessionOutput output message
     */
    public function DescribeSession(DescribeSessionInput $input, array $context = [])
    {
        $path = "/sessions/".rawurlencode($input->getSessionId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setSessionId("");

        $context['name'] = "eolymp.community.SessionService/DescribeSession";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, DescribeSessionOutput::class, $context);
    }

    /**
     * @param ListSessionsInput $input message
     * @param array $context request parameters
     *
     * @return ListSessionsOutput output message
     */
    public function ListSessions(ListSessionsInput $input, array $context = [])
    {
        $path = "/sessions";

        $context['name'] = "eolymp.community.SessionService/ListSessions";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, ListSessionsOutput::class, $context);
    }

    /**
     * @param TerminateSessionInput $input message
     * @param array $context request parameters
     *
     * @return TerminateSessionOutput output message
     */
    public function TerminateSession(TerminateSessionInput $input, array $context = [])
    {
        $path = "/sessions/".rawurlencode($input->getSessionId())."/terminate";

        // Cleanup URL parameters to avoid any ambiguity
        $input->setSessionId("");

        $context['name'] = "eolymp.community.SessionService/TerminateSession";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, TerminateSessionOutput::class, $context);
    }

    /**
     * @param TerminateAllSessionsInput $input message
     * @param array $context request parameters
     *
     * @return TerminateAllSessionsOutput output message
     */
    public function TerminateAllSessions(TerminateAllSessionsInput $input, array $context = [])
    {
        $path = "/sessions:terminate-all";

        $context['name'] = "eolymp.community.SessionService/TerminateAllSessions";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, TerminateAllSessionsOutput::class, $context);
    }

}
