<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/community/group.proto

namespace Eolymp\Community\Group\Patch;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.community.Group.Patch.Field</code>
 */
class Field
{
    /**
     * Generated from protobuf enum <code>UNKNOWN = 0;</code>
     */
    const UNKNOWN = 0;
    /**
     * Generated from protobuf enum <code>NAME = 1;</code>
     */
    const NAME = 1;
    /**
     * Generated from protobuf enum <code>DESCRIPTION = 2;</code>
     */
    const DESCRIPTION = 2;
    /**
     * Generated from protobuf enum <code>EXTERNAL_REF = 3;</code>
     */
    const EXTERNAL_REF = 3;
    /**
     * Generated from protobuf enum <code>ICON = 4;</code>
     */
    const ICON = 4;
    /**
     * Generated from protobuf enum <code>BADGE = 5;</code>
     */
    const BADGE = 5;
    /**
     * Generated from protobuf enum <code>COLOR = 6;</code>
     */
    const COLOR = 6;
    /**
     * Generated from protobuf enum <code>METADATA = 7;</code>
     */
    const METADATA = 7;

    private static $valueToName = [
        self::UNKNOWN => 'UNKNOWN',
        self::NAME => 'NAME',
        self::DESCRIPTION => 'DESCRIPTION',
        self::EXTERNAL_REF => 'EXTERNAL_REF',
        self::ICON => 'ICON',
        self::BADGE => 'BADGE',
        self::COLOR => 'COLOR',
        self::METADATA => 'METADATA',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

