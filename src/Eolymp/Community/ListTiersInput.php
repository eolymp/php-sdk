<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/community/tier_service.proto

namespace Eolymp\Community;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.community.ListTiersInput</code>
 */
class ListTiersInput extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int32 offset = 10;</code>
     */
    protected $offset = 0;
    /**
     * Generated from protobuf field <code>int32 size = 11;</code>
     */
    protected $size = 0;
    /**
     * render description to ecm
     *
     * Generated from protobuf field <code>bool render = 100;</code>
     */
    protected $render = false;
    /**
     * optionally, request name and description in particular language
     *
     * Generated from protobuf field <code>string locale = 101;</code>
     */
    protected $locale = '';
    /**
     * optionally, request prices in particular currency
     *
     * Generated from protobuf field <code>string currency = 102;</code>
     */
    protected $currency = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $offset
     *     @type int $size
     *     @type bool $render
     *           render description to ecm
     *     @type string $locale
     *           optionally, request name and description in particular language
     *     @type string $currency
     *           optionally, request prices in particular currency
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Community\TierService::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int32 offset = 10;</code>
     * @return int
     */
    public function getOffset()
    {
        return $this->offset;
    }

    /**
     * Generated from protobuf field <code>int32 offset = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setOffset($var)
    {
        GPBUtil::checkInt32($var);
        $this->offset = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 size = 11;</code>
     * @return int
     */
    public function getSize()
    {
        return $this->size;
    }

    /**
     * Generated from protobuf field <code>int32 size = 11;</code>
     * @param int $var
     * @return $this
     */
    public function setSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->size = $var;

        return $this;
    }

    /**
     * render description to ecm
     *
     * Generated from protobuf field <code>bool render = 100;</code>
     * @return bool
     */
    public function getRender()
    {
        return $this->render;
    }

    /**
     * render description to ecm
     *
     * Generated from protobuf field <code>bool render = 100;</code>
     * @param bool $var
     * @return $this
     */
    public function setRender($var)
    {
        GPBUtil::checkBool($var);
        $this->render = $var;

        return $this;
    }

    /**
     * optionally, request name and description in particular language
     *
     * Generated from protobuf field <code>string locale = 101;</code>
     * @return string
     */
    public function getLocale()
    {
        return $this->locale;
    }

    /**
     * optionally, request name and description in particular language
     *
     * Generated from protobuf field <code>string locale = 101;</code>
     * @param string $var
     * @return $this
     */
    public function setLocale($var)
    {
        GPBUtil::checkString($var, True);
        $this->locale = $var;

        return $this;
    }

    /**
     * optionally, request prices in particular currency
     *
     * Generated from protobuf field <code>string currency = 102;</code>
     * @return string
     */
    public function getCurrency()
    {
        return $this->currency;
    }

    /**
     * optionally, request prices in particular currency
     *
     * Generated from protobuf field <code>string currency = 102;</code>
     * @param string $var
     * @return $this
     */
    public function setCurrency($var)
    {
        GPBUtil::checkString($var, True);
        $this->currency = $var;

        return $this;
    }

}

