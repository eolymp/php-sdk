<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/community/achievement.proto

namespace Eolymp\Community;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.community.Achievement</code>
 */
class Achievement extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * the estimated value of the achievement (the higher the more "prestigious")
     *
     * Generated from protobuf field <code>string value = 2;</code>
     */
    protected $value = '';
    /**
     * a number from 0 to 10 reflecting how many users have achievement (0 common, 10 very rare)
     *
     * Generated from protobuf field <code>string rarity = 3;</code>
     */
    protected $rarity = '';
    /**
     * how many times achievement was received
     *
     * Generated from protobuf field <code>uint32 quantity = 4;</code>
     */
    protected $quantity = 0;
    /**
     * Generated from protobuf field <code>string name = 10;</code>
     */
    protected $name = '';
    /**
     * Generated from protobuf field <code>string image_url = 12;</code>
     */
    protected $image_url = '';
    /**
     * Generated from protobuf field <code>.eolymp.ecm.Content summary = 11;</code>
     */
    protected $summary = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *     @type string $value
     *           the estimated value of the achievement (the higher the more "prestigious")
     *     @type string $rarity
     *           a number from 0 to 10 reflecting how many users have achievement (0 common, 10 very rare)
     *     @type int $quantity
     *           how many times achievement was received
     *     @type string $name
     *     @type string $image_url
     *     @type \Eolymp\Ecm\Content $summary
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Community\Achievement::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * the estimated value of the achievement (the higher the more "prestigious")
     *
     * Generated from protobuf field <code>string value = 2;</code>
     * @return string
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * the estimated value of the achievement (the higher the more "prestigious")
     *
     * Generated from protobuf field <code>string value = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->value = $var;

        return $this;
    }

    /**
     * a number from 0 to 10 reflecting how many users have achievement (0 common, 10 very rare)
     *
     * Generated from protobuf field <code>string rarity = 3;</code>
     * @return string
     */
    public function getRarity()
    {
        return $this->rarity;
    }

    /**
     * a number from 0 to 10 reflecting how many users have achievement (0 common, 10 very rare)
     *
     * Generated from protobuf field <code>string rarity = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setRarity($var)
    {
        GPBUtil::checkString($var, True);
        $this->rarity = $var;

        return $this;
    }

    /**
     * how many times achievement was received
     *
     * Generated from protobuf field <code>uint32 quantity = 4;</code>
     * @return int
     */
    public function getQuantity()
    {
        return $this->quantity;
    }

    /**
     * how many times achievement was received
     *
     * Generated from protobuf field <code>uint32 quantity = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setQuantity($var)
    {
        GPBUtil::checkUint32($var);
        $this->quantity = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string name = 10;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Generated from protobuf field <code>string name = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string image_url = 12;</code>
     * @return string
     */
    public function getImageUrl()
    {
        return $this->image_url;
    }

    /**
     * Generated from protobuf field <code>string image_url = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setImageUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->image_url = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.ecm.Content summary = 11;</code>
     * @return \Eolymp\Ecm\Content|null
     */
    public function getSummary()
    {
        return $this->summary;
    }

    public function hasSummary()
    {
        return isset($this->summary);
    }

    public function clearSummary()
    {
        unset($this->summary);
    }

    /**
     * Generated from protobuf field <code>.eolymp.ecm.Content summary = 11;</code>
     * @param \Eolymp\Ecm\Content $var
     * @return $this
     */
    public function setSummary($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Ecm\Content::class);
        $this->summary = $var;

        return $this;
    }

}

