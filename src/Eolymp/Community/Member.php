<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/community/member.proto

namespace Eolymp\Community;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.community.Member</code>
 */
class Member extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * display name, readonly, users nickname, ghosts name or teams name
     *
     * Generated from protobuf field <code>string name = 2;</code>
     */
    protected $name = '';
    /**
     * Generated from protobuf field <code>bool active = 10;</code>
     */
    protected $active = false;
    /**
     * member profile (attributes) is missing some information
     *
     * Generated from protobuf field <code>bool incomplete = 20;</code>
     */
    protected $incomplete = false;
    /**
     * member participates in all competitions unofficially
     *
     * Generated from protobuf field <code>bool unofficial = 30;</code>
     */
    protected $unofficial = false;
    /**
     * member is secret and does not appear on anywhere (for example, an admin who performs testing)
     *
     * Generated from protobuf field <code>bool secret = 40;</code>
     */
    protected $secret = false;
    /**
     * Generated from protobuf field <code>string tier_id = 50;</code>
     */
    protected $tier_id = '';
    /**
     * Generated from protobuf field <code>string fallback_tier_id = 51;</code>
     */
    protected $fallback_tier_id = '';
    /**
     * Generated from protobuf field <code>repeated string groups = 200;</code>
     */
    private $groups;
    /**
     * Generated from protobuf field <code>repeated .eolymp.community.Attribute.Value attributes = 900;</code>
     */
    private $attributes;
    protected $account;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *     @type string $name
     *           display name, readonly, users nickname, ghosts name or teams name
     *     @type bool $active
     *     @type bool $incomplete
     *           member profile (attributes) is missing some information
     *     @type bool $unofficial
     *           member participates in all competitions unofficially
     *     @type bool $secret
     *           member is secret and does not appear on anywhere (for example, an admin who performs testing)
     *     @type string $tier_id
     *     @type string $fallback_tier_id
     *     @type \Eolymp\Community\User $user
     *     @type \Eolymp\Community\Team $team
     *     @type \Eolymp\Community\Ghost $ghost
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $groups
     *     @type \Eolymp\Community\Attribute\Value[]|\Google\Protobuf\Internal\RepeatedField $attributes
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Community\Member::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * display name, readonly, users nickname, ghosts name or teams name
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * display name, readonly, users nickname, ghosts name or teams name
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool active = 10;</code>
     * @return bool
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * Generated from protobuf field <code>bool active = 10;</code>
     * @param bool $var
     * @return $this
     */
    public function setActive($var)
    {
        GPBUtil::checkBool($var);
        $this->active = $var;

        return $this;
    }

    /**
     * member profile (attributes) is missing some information
     *
     * Generated from protobuf field <code>bool incomplete = 20;</code>
     * @return bool
     */
    public function getIncomplete()
    {
        return $this->incomplete;
    }

    /**
     * member profile (attributes) is missing some information
     *
     * Generated from protobuf field <code>bool incomplete = 20;</code>
     * @param bool $var
     * @return $this
     */
    public function setIncomplete($var)
    {
        GPBUtil::checkBool($var);
        $this->incomplete = $var;

        return $this;
    }

    /**
     * member participates in all competitions unofficially
     *
     * Generated from protobuf field <code>bool unofficial = 30;</code>
     * @return bool
     */
    public function getUnofficial()
    {
        return $this->unofficial;
    }

    /**
     * member participates in all competitions unofficially
     *
     * Generated from protobuf field <code>bool unofficial = 30;</code>
     * @param bool $var
     * @return $this
     */
    public function setUnofficial($var)
    {
        GPBUtil::checkBool($var);
        $this->unofficial = $var;

        return $this;
    }

    /**
     * member is secret and does not appear on anywhere (for example, an admin who performs testing)
     *
     * Generated from protobuf field <code>bool secret = 40;</code>
     * @return bool
     */
    public function getSecret()
    {
        return $this->secret;
    }

    /**
     * member is secret and does not appear on anywhere (for example, an admin who performs testing)
     *
     * Generated from protobuf field <code>bool secret = 40;</code>
     * @param bool $var
     * @return $this
     */
    public function setSecret($var)
    {
        GPBUtil::checkBool($var);
        $this->secret = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string tier_id = 50;</code>
     * @return string
     */
    public function getTierId()
    {
        return $this->tier_id;
    }

    /**
     * Generated from protobuf field <code>string tier_id = 50;</code>
     * @param string $var
     * @return $this
     */
    public function setTierId($var)
    {
        GPBUtil::checkString($var, True);
        $this->tier_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string fallback_tier_id = 51;</code>
     * @return string
     */
    public function getFallbackTierId()
    {
        return $this->fallback_tier_id;
    }

    /**
     * Generated from protobuf field <code>string fallback_tier_id = 51;</code>
     * @param string $var
     * @return $this
     */
    public function setFallbackTierId($var)
    {
        GPBUtil::checkString($var, True);
        $this->fallback_tier_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.community.User user = 100;</code>
     * @return \Eolymp\Community\User
     */
    public function getUser()
    {
        return $this->readOneof(100);
    }

    /**
     * Generated from protobuf field <code>.eolymp.community.User user = 100;</code>
     * @param \Eolymp\Community\User $var
     * @return $this
     */
    public function setUser($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Community\User::class);
        $this->writeOneof(100, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.community.Team team = 101;</code>
     * @return \Eolymp\Community\Team
     */
    public function getTeam()
    {
        return $this->readOneof(101);
    }

    /**
     * Generated from protobuf field <code>.eolymp.community.Team team = 101;</code>
     * @param \Eolymp\Community\Team $var
     * @return $this
     */
    public function setTeam($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Community\Team::class);
        $this->writeOneof(101, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.community.Ghost ghost = 102;</code>
     * @return \Eolymp\Community\Ghost
     */
    public function getGhost()
    {
        return $this->readOneof(102);
    }

    /**
     * Generated from protobuf field <code>.eolymp.community.Ghost ghost = 102;</code>
     * @param \Eolymp\Community\Ghost $var
     * @return $this
     */
    public function setGhost($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Community\Ghost::class);
        $this->writeOneof(102, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated string groups = 200;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getGroups()
    {
        return $this->groups;
    }

    /**
     * Generated from protobuf field <code>repeated string groups = 200;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setGroups($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->groups = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .eolymp.community.Attribute.Value attributes = 900;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAttributes()
    {
        return $this->attributes;
    }

    /**
     * Generated from protobuf field <code>repeated .eolymp.community.Attribute.Value attributes = 900;</code>
     * @param \Eolymp\Community\Attribute\Value[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAttributes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Eolymp\Community\Attribute\Value::class);
        $this->attributes = $arr;

        return $this;
    }

    /**
     * @return string
     */
    public function getAccount()
    {
        return $this->whichOneof("account");
    }

}

