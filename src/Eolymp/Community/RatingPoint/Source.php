<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/community/rating_point.proto

namespace Eolymp\Community\RatingPoint;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.community.RatingPoint.Source</code>
 */
class Source extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * Generated from protobuf field <code>string url = 2;</code>
     */
    protected $url = '';
    /**
     * Generated from protobuf field <code>string name = 3;</code>
     */
    protected $name = '';
    /**
     * Generated from protobuf field <code>uint32 score = 10;</code>
     */
    protected $score = 0;
    /**
     * Generated from protobuf field <code>uint32 penalty = 11;</code>
     */
    protected $penalty = 0;
    /**
     * Generated from protobuf field <code>uint32 tie_breaker = 12;</code>
     */
    protected $tie_breaker = 0;
    /**
     * Generated from protobuf field <code>uint32 rank = 20;</code>
     */
    protected $rank = 0;
    /**
     * Generated from protobuf field <code>uint32 rank_lower = 21;</code>
     */
    protected $rank_lower = 0;
    /**
     * Generated from protobuf field <code>uint32 rank_total = 22;</code>
     */
    protected $rank_total = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *     @type string $url
     *     @type string $name
     *     @type int $score
     *     @type int $penalty
     *     @type int $tie_breaker
     *     @type int $rank
     *     @type int $rank_lower
     *     @type int $rank_total
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Community\RatingPoint::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string url = 2;</code>
     * @return string
     */
    public function getUrl()
    {
        return $this->url;
    }

    /**
     * Generated from protobuf field <code>string url = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->url = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string name = 3;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Generated from protobuf field <code>string name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 score = 10;</code>
     * @return int
     */
    public function getScore()
    {
        return $this->score;
    }

    /**
     * Generated from protobuf field <code>uint32 score = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setScore($var)
    {
        GPBUtil::checkUint32($var);
        $this->score = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 penalty = 11;</code>
     * @return int
     */
    public function getPenalty()
    {
        return $this->penalty;
    }

    /**
     * Generated from protobuf field <code>uint32 penalty = 11;</code>
     * @param int $var
     * @return $this
     */
    public function setPenalty($var)
    {
        GPBUtil::checkUint32($var);
        $this->penalty = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 tie_breaker = 12;</code>
     * @return int
     */
    public function getTieBreaker()
    {
        return $this->tie_breaker;
    }

    /**
     * Generated from protobuf field <code>uint32 tie_breaker = 12;</code>
     * @param int $var
     * @return $this
     */
    public function setTieBreaker($var)
    {
        GPBUtil::checkUint32($var);
        $this->tie_breaker = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 rank = 20;</code>
     * @return int
     */
    public function getRank()
    {
        return $this->rank;
    }

    /**
     * Generated from protobuf field <code>uint32 rank = 20;</code>
     * @param int $var
     * @return $this
     */
    public function setRank($var)
    {
        GPBUtil::checkUint32($var);
        $this->rank = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 rank_lower = 21;</code>
     * @return int
     */
    public function getRankLower()
    {
        return $this->rank_lower;
    }

    /**
     * Generated from protobuf field <code>uint32 rank_lower = 21;</code>
     * @param int $var
     * @return $this
     */
    public function setRankLower($var)
    {
        GPBUtil::checkUint32($var);
        $this->rank_lower = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 rank_total = 22;</code>
     * @return int
     */
    public function getRankTotal()
    {
        return $this->rank_total;
    }

    /**
     * Generated from protobuf field <code>uint32 rank_total = 22;</code>
     * @param int $var
     * @return $this
     */
    public function setRankTotal($var)
    {
        GPBUtil::checkUint32($var);
        $this->rank_total = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Source::class, \Eolymp\Community\RatingPoint_Source::class);

