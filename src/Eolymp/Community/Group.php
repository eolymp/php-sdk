<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/community/group.proto

namespace Eolymp\Community;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Group describes a group of members in the space.
 * Members can belong to multiple groups.
 * Groups may give members "decorations" (icons, badges and color highlights). If multiple groups define decorations,
 * the one with highest index takes over.
 *
 * Generated from protobuf message <code>eolymp.community.Group</code>
 */
class Group extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * group name
     *
     * Generated from protobuf field <code>string name = 2;</code>
     */
    protected $name = '';
    /**
     * group description
     *
     * Generated from protobuf field <code>string description = 3;</code>
     */
    protected $description = '';
    /**
     * Generated from protobuf field <code>string external_ref = 4;</code>
     */
    protected $external_ref = '';
    /**
     * a URL for an icon, displayed in front of a username on the site
     *
     * Generated from protobuf field <code>string icon = 10;</code>
     */
    protected $icon = '';
    /**
     * a string displayed next to the username on the site
     *
     * Generated from protobuf field <code>string badge = 11;</code>
     */
    protected $badge = '';
    /**
     * a hexadecimal color code, displayed in the given color.
     *
     * Generated from protobuf field <code>string color = 12;</code>
     */
    protected $color = '';
    /**
     * additional key-value properties used by external systems
     *
     * Generated from protobuf field <code>map<string, string> metadata = 1024;</code>
     */
    private $metadata;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *     @type string $name
     *           group name
     *     @type string $description
     *           group description
     *     @type string $external_ref
     *     @type string $icon
     *           a URL for an icon, displayed in front of a username on the site
     *     @type string $badge
     *           a string displayed next to the username on the site
     *     @type string $color
     *           a hexadecimal color code, displayed in the given color.
     *     @type array|\Google\Protobuf\Internal\MapField $metadata
     *           additional key-value properties used by external systems
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Community\Group::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * group name
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * group name
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * group description
     *
     * Generated from protobuf field <code>string description = 3;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * group description
     *
     * Generated from protobuf field <code>string description = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string external_ref = 4;</code>
     * @return string
     */
    public function getExternalRef()
    {
        return $this->external_ref;
    }

    /**
     * Generated from protobuf field <code>string external_ref = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setExternalRef($var)
    {
        GPBUtil::checkString($var, True);
        $this->external_ref = $var;

        return $this;
    }

    /**
     * a URL for an icon, displayed in front of a username on the site
     *
     * Generated from protobuf field <code>string icon = 10;</code>
     * @return string
     */
    public function getIcon()
    {
        return $this->icon;
    }

    /**
     * a URL for an icon, displayed in front of a username on the site
     *
     * Generated from protobuf field <code>string icon = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setIcon($var)
    {
        GPBUtil::checkString($var, True);
        $this->icon = $var;

        return $this;
    }

    /**
     * a string displayed next to the username on the site
     *
     * Generated from protobuf field <code>string badge = 11;</code>
     * @return string
     */
    public function getBadge()
    {
        return $this->badge;
    }

    /**
     * a string displayed next to the username on the site
     *
     * Generated from protobuf field <code>string badge = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setBadge($var)
    {
        GPBUtil::checkString($var, True);
        $this->badge = $var;

        return $this;
    }

    /**
     * a hexadecimal color code, displayed in the given color.
     *
     * Generated from protobuf field <code>string color = 12;</code>
     * @return string
     */
    public function getColor()
    {
        return $this->color;
    }

    /**
     * a hexadecimal color code, displayed in the given color.
     *
     * Generated from protobuf field <code>string color = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setColor($var)
    {
        GPBUtil::checkString($var, True);
        $this->color = $var;

        return $this;
    }

    /**
     * additional key-value properties used by external systems
     *
     * Generated from protobuf field <code>map<string, string> metadata = 1024;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * additional key-value properties used by external systems
     *
     * Generated from protobuf field <code>map<string, string> metadata = 1024;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setMetadata($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->metadata = $arr;

        return $this;
    }

}

