<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/community/email_service.proto

namespace Eolymp\Community;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.community.SendEmailInput</code>
 */
class SendEmailInput extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string member_id = 1;</code>
     */
    protected $member_id = '';
    /**
     * send a test email to the current user instead of the member
     *
     * Generated from protobuf field <code>bool dry_run = 20;</code>
     */
    protected $dry_run = false;
    /**
     * send a copy of the email to the current user
     *
     * Generated from protobuf field <code>bool bcc_me = 21;</code>
     */
    protected $bcc_me = false;
    /**
     * Generated from protobuf field <code>.eolymp.community.EmailType type = 10;</code>
     */
    protected $type = 0;
    /**
     * for internal use, campaign id for tracking feedback
     *
     * Generated from protobuf field <code>string campaign = 15;</code>
     */
    protected $campaign = '';
    /**
     * locale for the content
     *
     * Generated from protobuf field <code>string locale = 11;</code>
     */
    protected $locale = '';
    protected $content;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $member_id
     *     @type bool $dry_run
     *           send a test email to the current user instead of the member
     *     @type bool $bcc_me
     *           send a copy of the email to the current user
     *     @type int $type
     *     @type string $campaign
     *           for internal use, campaign id for tracking feedback
     *     @type string $locale
     *           locale for the content
     *     @type \Eolymp\Community\SendEmailInput\Message $message
     *           send specific message
     *     @type \Eolymp\Community\SendEmailInput\Fragment $fragment
     *           send message from content fragment
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Community\EmailService::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string member_id = 1;</code>
     * @return string
     */
    public function getMemberId()
    {
        return $this->member_id;
    }

    /**
     * Generated from protobuf field <code>string member_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setMemberId($var)
    {
        GPBUtil::checkString($var, True);
        $this->member_id = $var;

        return $this;
    }

    /**
     * send a test email to the current user instead of the member
     *
     * Generated from protobuf field <code>bool dry_run = 20;</code>
     * @return bool
     */
    public function getDryRun()
    {
        return $this->dry_run;
    }

    /**
     * send a test email to the current user instead of the member
     *
     * Generated from protobuf field <code>bool dry_run = 20;</code>
     * @param bool $var
     * @return $this
     */
    public function setDryRun($var)
    {
        GPBUtil::checkBool($var);
        $this->dry_run = $var;

        return $this;
    }

    /**
     * send a copy of the email to the current user
     *
     * Generated from protobuf field <code>bool bcc_me = 21;</code>
     * @return bool
     */
    public function getBccMe()
    {
        return $this->bcc_me;
    }

    /**
     * send a copy of the email to the current user
     *
     * Generated from protobuf field <code>bool bcc_me = 21;</code>
     * @param bool $var
     * @return $this
     */
    public function setBccMe($var)
    {
        GPBUtil::checkBool($var);
        $this->bcc_me = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.community.EmailType type = 10;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>.eolymp.community.EmailType type = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Community\EmailType::class);
        $this->type = $var;

        return $this;
    }

    /**
     * for internal use, campaign id for tracking feedback
     *
     * Generated from protobuf field <code>string campaign = 15;</code>
     * @return string
     */
    public function getCampaign()
    {
        return $this->campaign;
    }

    /**
     * for internal use, campaign id for tracking feedback
     *
     * Generated from protobuf field <code>string campaign = 15;</code>
     * @param string $var
     * @return $this
     */
    public function setCampaign($var)
    {
        GPBUtil::checkString($var, True);
        $this->campaign = $var;

        return $this;
    }

    /**
     * locale for the content
     *
     * Generated from protobuf field <code>string locale = 11;</code>
     * @return string
     */
    public function getLocale()
    {
        return $this->locale;
    }

    /**
     * locale for the content
     *
     * Generated from protobuf field <code>string locale = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setLocale($var)
    {
        GPBUtil::checkString($var, True);
        $this->locale = $var;

        return $this;
    }

    /**
     * send specific message
     *
     * Generated from protobuf field <code>.eolymp.community.SendEmailInput.Message message = 30;</code>
     * @return \Eolymp\Community\SendEmailInput\Message|null
     */
    public function getMessage()
    {
        return $this->readOneof(30);
    }

    public function hasMessage()
    {
        return $this->hasOneof(30);
    }

    /**
     * send specific message
     *
     * Generated from protobuf field <code>.eolymp.community.SendEmailInput.Message message = 30;</code>
     * @param \Eolymp\Community\SendEmailInput\Message $var
     * @return $this
     */
    public function setMessage($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Community\SendEmailInput\Message::class);
        $this->writeOneof(30, $var);

        return $this;
    }

    /**
     * send message from content fragment
     *
     * Generated from protobuf field <code>.eolymp.community.SendEmailInput.Fragment fragment = 31;</code>
     * @return \Eolymp\Community\SendEmailInput\Fragment|null
     */
    public function getFragment()
    {
        return $this->readOneof(31);
    }

    public function hasFragment()
    {
        return $this->hasOneof(31);
    }

    /**
     * send message from content fragment
     *
     * Generated from protobuf field <code>.eolymp.community.SendEmailInput.Fragment fragment = 31;</code>
     * @param \Eolymp\Community\SendEmailInput\Fragment $var
     * @return $this
     */
    public function setFragment($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Community\SendEmailInput\Fragment::class);
        $this->writeOneof(31, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getContent()
    {
        return $this->whichOneof("content");
    }

}

