<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/community/configuration_identity.proto

namespace Eolymp\Community\IdentityConfig;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.community.IdentityConfig.DisplayNameType</code>
 */
class DisplayNameType
{
    /**
     * Generated from protobuf enum <code>UNKNOWN_DISPLAY_NAME = 0;</code>
     */
    const UNKNOWN_DISPLAY_NAME = 0;
    /**
     * Generated from protobuf enum <code>NICKNAME = 1;</code>
     */
    const NICKNAME = 1;
    /**
     * Generated from protobuf enum <code>NAME = 2;</code>
     */
    const NAME = 2;
    /**
     * Generated from protobuf enum <code>ATTRIBUTE = 3;</code>
     */
    const ATTRIBUTE = 3;

    private static $valueToName = [
        self::UNKNOWN_DISPLAY_NAME => 'UNKNOWN_DISPLAY_NAME',
        self::NICKNAME => 'NICKNAME',
        self::NAME => 'NAME',
        self::ATTRIBUTE => 'ATTRIBUTE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

