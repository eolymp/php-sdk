<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/community/credit.proto

namespace Eolymp\Community\Credit;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.community.Credit.Grant</code>
 */
class Grant extends \Google\Protobuf\Internal\Message
{
    /**
     * unique grant ID (assigned by the system)
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * a unique grant reference, ensures the same grant is not granted twice
     *
     * Generated from protobuf field <code>string reference = 2;</code>
     */
    protected $reference = '';
    /**
     * a note for the grant, describes why the credit was granted
     *
     * Generated from protobuf field <code>string note = 3;</code>
     */
    protected $note = '';
    /**
     * whether the grant is active (not redeemed or expired)
     *
     * Generated from protobuf field <code>bool active = 20;</code>
     */
    protected $active = false;
    /**
     * whether the grant was revoked/cancelled
     *
     * Generated from protobuf field <code>bool revoked = 21;</code>
     */
    protected $revoked = false;
    /**
     * amount of credits granted
     *
     * Generated from protobuf field <code>uint32 total_amount = 4;</code>
     */
    protected $total_amount = 0;
    /**
     * amount of credit already redeemed
     *
     * Generated from protobuf field <code>uint32 redeemed_amount = 5;</code>
     */
    protected $redeemed_amount = 0;
    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp granted_at = 10;</code>
     */
    protected $granted_at = null;
    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp expires_at = 11;</code>
     */
    protected $expires_at = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           unique grant ID (assigned by the system)
     *     @type string $reference
     *           a unique grant reference, ensures the same grant is not granted twice
     *     @type string $note
     *           a note for the grant, describes why the credit was granted
     *     @type bool $active
     *           whether the grant is active (not redeemed or expired)
     *     @type bool $revoked
     *           whether the grant was revoked/cancelled
     *     @type int $total_amount
     *           amount of credits granted
     *     @type int $redeemed_amount
     *           amount of credit already redeemed
     *     @type \Google\Protobuf\Timestamp $granted_at
     *     @type \Google\Protobuf\Timestamp $expires_at
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Community\Credit::initOnce();
        parent::__construct($data);
    }

    /**
     * unique grant ID (assigned by the system)
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * unique grant ID (assigned by the system)
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * a unique grant reference, ensures the same grant is not granted twice
     *
     * Generated from protobuf field <code>string reference = 2;</code>
     * @return string
     */
    public function getReference()
    {
        return $this->reference;
    }

    /**
     * a unique grant reference, ensures the same grant is not granted twice
     *
     * Generated from protobuf field <code>string reference = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setReference($var)
    {
        GPBUtil::checkString($var, True);
        $this->reference = $var;

        return $this;
    }

    /**
     * a note for the grant, describes why the credit was granted
     *
     * Generated from protobuf field <code>string note = 3;</code>
     * @return string
     */
    public function getNote()
    {
        return $this->note;
    }

    /**
     * a note for the grant, describes why the credit was granted
     *
     * Generated from protobuf field <code>string note = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setNote($var)
    {
        GPBUtil::checkString($var, True);
        $this->note = $var;

        return $this;
    }

    /**
     * whether the grant is active (not redeemed or expired)
     *
     * Generated from protobuf field <code>bool active = 20;</code>
     * @return bool
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * whether the grant is active (not redeemed or expired)
     *
     * Generated from protobuf field <code>bool active = 20;</code>
     * @param bool $var
     * @return $this
     */
    public function setActive($var)
    {
        GPBUtil::checkBool($var);
        $this->active = $var;

        return $this;
    }

    /**
     * whether the grant was revoked/cancelled
     *
     * Generated from protobuf field <code>bool revoked = 21;</code>
     * @return bool
     */
    public function getRevoked()
    {
        return $this->revoked;
    }

    /**
     * whether the grant was revoked/cancelled
     *
     * Generated from protobuf field <code>bool revoked = 21;</code>
     * @param bool $var
     * @return $this
     */
    public function setRevoked($var)
    {
        GPBUtil::checkBool($var);
        $this->revoked = $var;

        return $this;
    }

    /**
     * amount of credits granted
     *
     * Generated from protobuf field <code>uint32 total_amount = 4;</code>
     * @return int
     */
    public function getTotalAmount()
    {
        return $this->total_amount;
    }

    /**
     * amount of credits granted
     *
     * Generated from protobuf field <code>uint32 total_amount = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setTotalAmount($var)
    {
        GPBUtil::checkUint32($var);
        $this->total_amount = $var;

        return $this;
    }

    /**
     * amount of credit already redeemed
     *
     * Generated from protobuf field <code>uint32 redeemed_amount = 5;</code>
     * @return int
     */
    public function getRedeemedAmount()
    {
        return $this->redeemed_amount;
    }

    /**
     * amount of credit already redeemed
     *
     * Generated from protobuf field <code>uint32 redeemed_amount = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setRedeemedAmount($var)
    {
        GPBUtil::checkUint32($var);
        $this->redeemed_amount = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp granted_at = 10;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getGrantedAt()
    {
        return $this->granted_at;
    }

    public function hasGrantedAt()
    {
        return isset($this->granted_at);
    }

    public function clearGrantedAt()
    {
        unset($this->granted_at);
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp granted_at = 10;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setGrantedAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->granted_at = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp expires_at = 11;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getExpiresAt()
    {
        return $this->expires_at;
    }

    public function hasExpiresAt()
    {
        return isset($this->expires_at);
    }

    public function clearExpiresAt()
    {
        unset($this->expires_at);
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp expires_at = 11;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setExpiresAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->expires_at = $var;

        return $this;
    }

}

