<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/course/enrollment.proto

namespace Eolymp\Course\Enrollment;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.course.Enrollment.Assignment</code>
 */
class Assignment extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string module_id = 1;</code>
     */
    protected $module_id = '';
    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_after = 10;</code>
     */
    protected $start_after = null;
    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp complete_before = 11;</code>
     */
    protected $complete_before = null;
    /**
     * Generated from protobuf field <code>uint32 duration = 20;</code>
     */
    protected $duration = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $module_id
     *     @type \Google\Protobuf\Timestamp $start_after
     *     @type \Google\Protobuf\Timestamp $complete_before
     *     @type int $duration
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Course\Enrollment::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string module_id = 1;</code>
     * @return string
     */
    public function getModuleId()
    {
        return $this->module_id;
    }

    /**
     * Generated from protobuf field <code>string module_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setModuleId($var)
    {
        GPBUtil::checkString($var, True);
        $this->module_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_after = 10;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getStartAfter()
    {
        return $this->start_after;
    }

    public function hasStartAfter()
    {
        return isset($this->start_after);
    }

    public function clearStartAfter()
    {
        unset($this->start_after);
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_after = 10;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setStartAfter($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->start_after = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp complete_before = 11;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCompleteBefore()
    {
        return $this->complete_before;
    }

    public function hasCompleteBefore()
    {
        return isset($this->complete_before);
    }

    public function clearCompleteBefore()
    {
        unset($this->complete_before);
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp complete_before = 11;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCompleteBefore($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->complete_before = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 duration = 20;</code>
     * @return int
     */
    public function getDuration()
    {
        return $this->duration;
    }

    /**
     * Generated from protobuf field <code>uint32 duration = 20;</code>
     * @param int $var
     * @return $this
     */
    public function setDuration($var)
    {
        GPBUtil::checkUint32($var);
        $this->duration = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Assignment::class, \Eolymp\Course\Enrollment_Assignment::class);

