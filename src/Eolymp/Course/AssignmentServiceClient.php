<?php
# Generated by the protocol buffer compiler. DO NOT EDIT!
# See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-php-esdk for more details.

namespace Eolymp\Course;

class AssignmentServiceClient {

    /** @var string base URL */
    private $url;

    /** @var callable RPC client */
    private $invoker;

    /**
     * @param string   $url     defines base URL for service
     * @param callable $invoker provides transport implementation for calls
     */
    public function __construct($url, $invoker)
    {
        $this->url = $url;
        $this->invoker = $invoker;
    }

    /**
     * @param CreateAssignmentInput $input message
     * @param array $context request parameters
     *
     * @return CreateAssignmentOutput output message
     */
    public function CreateAssignment(CreateAssignmentInput $input, array $context = [])
    {
        $path = "/assignments";

        $context['name'] = "eolymp.course.AssignmentService/CreateAssignment";
        $context['path'] = $path;

        return call_user_func($this->invoker, "PUT", $this->url.$path, $input, CreateAssignmentOutput::class, $context);
    }

    /**
     * @param UpdateAssignmentInput $input message
     * @param array $context request parameters
     *
     * @return UpdateAssignmentOutput output message
     */
    public function UpdateAssignment(UpdateAssignmentInput $input, array $context = [])
    {
        $path = "/assignments/".rawurlencode($input->getAssignmentId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setAssignmentId("");

        $context['name'] = "eolymp.course.AssignmentService/UpdateAssignment";
        $context['path'] = $path;

        return call_user_func($this->invoker, "PUT", $this->url.$path, $input, UpdateAssignmentOutput::class, $context);
    }

    /**
     * @param DeleteAssignmentInput $input message
     * @param array $context request parameters
     *
     * @return DeleteAssignmentOutput output message
     */
    public function DeleteAssignment(DeleteAssignmentInput $input, array $context = [])
    {
        $path = "/assignments/".rawurlencode($input->getAssignmentId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setAssignmentId("");

        $context['name'] = "eolymp.course.AssignmentService/DeleteAssignment";
        $context['path'] = $path;

        return call_user_func($this->invoker, "DELETE", $this->url.$path, $input, DeleteAssignmentOutput::class, $context);
    }

    /**
     * @param DescribeAssignmentInput $input message
     * @param array $context request parameters
     *
     * @return DescribeAssignmentOutput output message
     */
    public function DescribeAssignment(DescribeAssignmentInput $input, array $context = [])
    {
        $path = "/assignments/".rawurlencode($input->getAssignmentId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setAssignmentId("");

        $context['name'] = "eolymp.course.AssignmentService/DescribeAssignment";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, DescribeAssignmentOutput::class, $context);
    }

    /**
     * @param IntrospectAssignmentInput $input message
     * @param array $context request parameters
     *
     * @return IntrospectAssignmentOutput output message
     */
    public function IntrospectAssignment(IntrospectAssignmentInput $input, array $context = [])
    {
        $path = "/viewer/assignment";

        $context['name'] = "eolymp.course.AssignmentService/IntrospectAssignment";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, IntrospectAssignmentOutput::class, $context);
    }

    /**
     * @param ListAssignmentsInput $input message
     * @param array $context request parameters
     *
     * @return ListAssignmentsOutput output message
     */
    public function ListAssignments(ListAssignmentsInput $input, array $context = [])
    {
        $path = "/assignments";

        $context['name'] = "eolymp.course.AssignmentService/ListAssignments";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, ListAssignmentsOutput::class, $context);
    }

    /**
     * @param StartAssignmentInput $input message
     * @param array $context request parameters
     *
     * @return StartAssignmentOutput output message
     */
    public function StartAssignment(StartAssignmentInput $input, array $context = [])
    {
        $path = "/assignments/".rawurlencode($input->getAssignmentId())."/start";

        // Cleanup URL parameters to avoid any ambiguity
        $input->setAssignmentId("");

        $context['name'] = "eolymp.course.AssignmentService/StartAssignment";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, StartAssignmentOutput::class, $context);
    }

}
