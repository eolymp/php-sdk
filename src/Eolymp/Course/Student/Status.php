<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/course/student.proto

namespace Eolymp\Course\Student;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.course.Student.Status</code>
 */
class Status
{
    /**
     * Generated from protobuf enum <code>UNKNOWN_STATUS = 0;</code>
     */
    const UNKNOWN_STATUS = 0;
    /**
     * Unassigned, instructor did not assign the module yet
     *
     * Generated from protobuf enum <code>UNASSIGNED = 1;</code>
     */
    const UNASSIGNED = 1;
    /**
     * Pending, instructor assigned the module but it will start later
     *
     * Generated from protobuf enum <code>PENDING = 2;</code>
     */
    const PENDING = 2;
    /**
     * Ready, module is assigned but requires manual start
     *
     * Generated from protobuf enum <code>READY = 3;</code>
     */
    const READY = 3;
    /**
     * Started, module is in progress
     *
     * Generated from protobuf enum <code>STARTED = 4;</code>
     */
    const STARTED = 4;
    /**
     * Completed, module is completed (time run out or complete before is reached)
     *
     * Generated from protobuf enum <code>COMPLETED = 5;</code>
     */
    const COMPLETED = 5;
    /**
     * Blocked, module is blocked by another module
     *
     * Generated from protobuf enum <code>BLOCKED = 6;</code>
     */
    const BLOCKED = 6;

    private static $valueToName = [
        self::UNKNOWN_STATUS => 'UNKNOWN_STATUS',
        self::UNASSIGNED => 'UNASSIGNED',
        self::PENDING => 'PENDING',
        self::READY => 'READY',
        self::STARTED => 'STARTED',
        self::COMPLETED => 'COMPLETED',
        self::BLOCKED => 'BLOCKED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Status::class, \Eolymp\Course\Student_Status::class);

