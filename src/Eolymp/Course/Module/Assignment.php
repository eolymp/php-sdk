<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/course/module.proto

namespace Eolymp\Course\Module;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.course.Module.Assignment</code>
 */
class Assignment extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.eolymp.course.Module.Status status = 1000;</code>
     */
    protected $status = 0;
    /**
     * value from 0 to 1 showing overall progress in the module
     *
     * Generated from protobuf field <code>float progress = 1001;</code>
     */
    protected $progress = 0.0;
    /**
     * value from 0 to 100 showing overall grade in the module
     *
     * Generated from protobuf field <code>uint32 grade = 1002;</code>
     */
    protected $grade = 0;
    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp due_time = 1010;</code>
     */
    protected $due_time = null;
    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_time = 1011;</code>
     */
    protected $start_time = null;
    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_time = 1012;</code>
     */
    protected $end_time = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $status
     *     @type float $progress
     *           value from 0 to 1 showing overall progress in the module
     *     @type int $grade
     *           value from 0 to 100 showing overall grade in the module
     *     @type \Google\Protobuf\Timestamp $due_time
     *     @type \Google\Protobuf\Timestamp $start_time
     *     @type \Google\Protobuf\Timestamp $end_time
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Course\Module::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.eolymp.course.Module.Status status = 1000;</code>
     * @return int
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Generated from protobuf field <code>.eolymp.course.Module.Status status = 1000;</code>
     * @param int $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Course\Module\Status::class);
        $this->status = $var;

        return $this;
    }

    /**
     * value from 0 to 1 showing overall progress in the module
     *
     * Generated from protobuf field <code>float progress = 1001;</code>
     * @return float
     */
    public function getProgress()
    {
        return $this->progress;
    }

    /**
     * value from 0 to 1 showing overall progress in the module
     *
     * Generated from protobuf field <code>float progress = 1001;</code>
     * @param float $var
     * @return $this
     */
    public function setProgress($var)
    {
        GPBUtil::checkFloat($var);
        $this->progress = $var;

        return $this;
    }

    /**
     * value from 0 to 100 showing overall grade in the module
     *
     * Generated from protobuf field <code>uint32 grade = 1002;</code>
     * @return int
     */
    public function getGrade()
    {
        return $this->grade;
    }

    /**
     * value from 0 to 100 showing overall grade in the module
     *
     * Generated from protobuf field <code>uint32 grade = 1002;</code>
     * @param int $var
     * @return $this
     */
    public function setGrade($var)
    {
        GPBUtil::checkUint32($var);
        $this->grade = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp due_time = 1010;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getDueTime()
    {
        return $this->due_time;
    }

    public function hasDueTime()
    {
        return isset($this->due_time);
    }

    public function clearDueTime()
    {
        unset($this->due_time);
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp due_time = 1010;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setDueTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->due_time = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_time = 1011;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getStartTime()
    {
        return $this->start_time;
    }

    public function hasStartTime()
    {
        return isset($this->start_time);
    }

    public function clearStartTime()
    {
        unset($this->start_time);
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_time = 1011;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setStartTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->start_time = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_time = 1012;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getEndTime()
    {
        return $this->end_time;
    }

    public function hasEndTime()
    {
        return isset($this->end_time);
    }

    public function clearEndTime()
    {
        unset($this->end_time);
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_time = 1012;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setEndTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->end_time = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Assignment::class, \Eolymp\Course\Module_Assignment::class);

