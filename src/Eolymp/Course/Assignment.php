<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/course/assignment.proto

namespace Eolymp\Course;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.course.Assignment</code>
 */
class Assignment extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.eolymp.course.Assignment.Status status = 1;</code>
     */
    protected $status = 0;
    /**
     * optionally, time when assignment will commence
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_at = 10;</code>
     */
    protected $start_at = null;
    /**
     * optionally, time by when assignment should be complete
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_at = 11;</code>
     */
    protected $end_at = null;
    /**
     * optionally, time when assignment was actually complete
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp complete_at = 12;</code>
     */
    protected $complete_at = null;
    /**
     * optionally, duration of the assignment in seconds
     *
     * Generated from protobuf field <code>uint32 duration = 15;</code>
     */
    protected $duration = 0;
    /**
     * progress from 0 to 1
     *
     * Generated from protobuf field <code>float progress = 20;</code>
     */
    protected $progress = 0.0;
    /**
     * grade from 0 to 100
     *
     * Generated from protobuf field <code>uint32 grade = 30;</code>
     */
    protected $grade = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $status
     *     @type \Google\Protobuf\Timestamp $start_at
     *           optionally, time when assignment will commence
     *     @type \Google\Protobuf\Timestamp $end_at
     *           optionally, time by when assignment should be complete
     *     @type \Google\Protobuf\Timestamp $complete_at
     *           optionally, time when assignment was actually complete
     *     @type int $duration
     *           optionally, duration of the assignment in seconds
     *     @type float $progress
     *           progress from 0 to 1
     *     @type int $grade
     *           grade from 0 to 100
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Course\Assignment::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.eolymp.course.Assignment.Status status = 1;</code>
     * @return int
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Generated from protobuf field <code>.eolymp.course.Assignment.Status status = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Course\Assignment_Status::class);
        $this->status = $var;

        return $this;
    }

    /**
     * optionally, time when assignment will commence
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_at = 10;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getStartAt()
    {
        return $this->start_at;
    }

    /**
     * optionally, time when assignment will commence
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_at = 10;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setStartAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->start_at = $var;

        return $this;
    }

    /**
     * optionally, time by when assignment should be complete
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_at = 11;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getEndAt()
    {
        return $this->end_at;
    }

    /**
     * optionally, time by when assignment should be complete
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_at = 11;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setEndAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->end_at = $var;

        return $this;
    }

    /**
     * optionally, time when assignment was actually complete
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp complete_at = 12;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getCompleteAt()
    {
        return $this->complete_at;
    }

    /**
     * optionally, time when assignment was actually complete
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp complete_at = 12;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCompleteAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->complete_at = $var;

        return $this;
    }

    /**
     * optionally, duration of the assignment in seconds
     *
     * Generated from protobuf field <code>uint32 duration = 15;</code>
     * @return int
     */
    public function getDuration()
    {
        return $this->duration;
    }

    /**
     * optionally, duration of the assignment in seconds
     *
     * Generated from protobuf field <code>uint32 duration = 15;</code>
     * @param int $var
     * @return $this
     */
    public function setDuration($var)
    {
        GPBUtil::checkUint32($var);
        $this->duration = $var;

        return $this;
    }

    /**
     * progress from 0 to 1
     *
     * Generated from protobuf field <code>float progress = 20;</code>
     * @return float
     */
    public function getProgress()
    {
        return $this->progress;
    }

    /**
     * progress from 0 to 1
     *
     * Generated from protobuf field <code>float progress = 20;</code>
     * @param float $var
     * @return $this
     */
    public function setProgress($var)
    {
        GPBUtil::checkFloat($var);
        $this->progress = $var;

        return $this;
    }

    /**
     * grade from 0 to 100
     *
     * Generated from protobuf field <code>uint32 grade = 30;</code>
     * @return int
     */
    public function getGrade()
    {
        return $this->grade;
    }

    /**
     * grade from 0 to 100
     *
     * Generated from protobuf field <code>uint32 grade = 30;</code>
     * @param int $var
     * @return $this
     */
    public function setGrade($var)
    {
        GPBUtil::checkUint32($var);
        $this->grade = $var;

        return $this;
    }

}

