<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/course/material.proto

namespace Eolymp\Course\Material;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.course.Material.Grading</code>
 */
class Grading extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>uint32 max_score = 1;</code>
     */
    protected $max_score = 0;
    /**
     * grade weight in the module
     *
     * Generated from protobuf field <code>float weight = 2;</code>
     */
    protected $weight = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $max_score
     *     @type float $weight
     *           grade weight in the module
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Course\Material::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>uint32 max_score = 1;</code>
     * @return int
     */
    public function getMaxScore()
    {
        return $this->max_score;
    }

    /**
     * Generated from protobuf field <code>uint32 max_score = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxScore($var)
    {
        GPBUtil::checkUint32($var);
        $this->max_score = $var;

        return $this;
    }

    /**
     * grade weight in the module
     *
     * Generated from protobuf field <code>float weight = 2;</code>
     * @return float
     */
    public function getWeight()
    {
        return $this->weight;
    }

    /**
     * grade weight in the module
     *
     * Generated from protobuf field <code>float weight = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setWeight($var)
    {
        GPBUtil::checkFloat($var);
        $this->weight = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Grading::class, \Eolymp\Course\Material_Grading::class);

