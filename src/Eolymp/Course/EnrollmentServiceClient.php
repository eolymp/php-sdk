<?php
# Generated by the protocol buffer compiler. DO NOT EDIT!
# See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-php-esdk for more details.

namespace Eolymp\Course;

class EnrollmentServiceClient {

    /** @var string base URL */
    private $url;

    /** @var callable RPC client */
    private $invoker;

    /**
     * @param string   $url     defines base URL for service
     * @param callable $invoker provides transport implementation for calls
     */
    public function __construct($url, $invoker)
    {
        $this->url = $url;
        $this->invoker = $invoker;
    }

    /**
     * @param CreateEnrollmentInput $input message
     * @param array $context request parameters
     *
     * @return CreateEnrollmentOutput output message
     */
    public function CreateEnrollment(CreateEnrollmentInput $input, array $context = [])
    {
        $path = "/enrollments";

        $context['name'] = "eolymp.course.EnrollmentService/CreateEnrollment";
        $context['path'] = $path;

        return call_user_func($this->invoker, "PUT", $this->url.$path, $input, CreateEnrollmentOutput::class, $context);
    }

    /**
     * @param UpdateEnrollmentInput $input message
     * @param array $context request parameters
     *
     * @return UpdateEnrollmentOutput output message
     */
    public function UpdateEnrollment(UpdateEnrollmentInput $input, array $context = [])
    {
        $path = "/enrollments/".rawurlencode($input->getEnrollmentId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setEnrollmentId("");

        $context['name'] = "eolymp.course.EnrollmentService/UpdateEnrollment";
        $context['path'] = $path;

        return call_user_func($this->invoker, "PUT", $this->url.$path, $input, UpdateEnrollmentOutput::class, $context);
    }

    /**
     * @param DeleteEnrollmentInput $input message
     * @param array $context request parameters
     *
     * @return DeleteEnrollmentOutput output message
     */
    public function DeleteEnrollment(DeleteEnrollmentInput $input, array $context = [])
    {
        $path = "/enrollments/".rawurlencode($input->getEnrollmentId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setEnrollmentId("");

        $context['name'] = "eolymp.course.EnrollmentService/DeleteEnrollment";
        $context['path'] = $path;

        return call_user_func($this->invoker, "DELETE", $this->url.$path, $input, DeleteEnrollmentOutput::class, $context);
    }

    /**
     * @param DescribeEnrollmentInput $input message
     * @param array $context request parameters
     *
     * @return DescribeEnrollmentOutput output message
     */
    public function DescribeEnrollment(DescribeEnrollmentInput $input, array $context = [])
    {
        $path = "/enrollments/".rawurlencode($input->getEnrollmentId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setEnrollmentId("");

        $context['name'] = "eolymp.course.EnrollmentService/DescribeEnrollment";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, DescribeEnrollmentOutput::class, $context);
    }

    /**
     * @param ListEnrollmentsInput $input message
     * @param array $context request parameters
     *
     * @return ListEnrollmentsOutput output message
     */
    public function ListEnrollments(ListEnrollmentsInput $input, array $context = [])
    {
        $path = "/enrollments";

        $context['name'] = "eolymp.course.EnrollmentService/ListEnrollments";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, ListEnrollmentsOutput::class, $context);
    }

}
