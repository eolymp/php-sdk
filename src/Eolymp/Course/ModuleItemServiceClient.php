<?php
# Generated by the protocol buffer compiler. DO NOT EDIT!
# See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-php-esdk for more details.

namespace Eolymp\Course;

class ModuleItemServiceClient {

    /** @var string base URL */
    private $url;

    /** @var callable RPC client */
    private $invoker;

    /**
     * @param string   $url     defines base URL for service
     * @param callable $invoker provides transport implementation for calls
     */
    public function __construct($url, $invoker)
    {
        $this->url = $url;
        $this->invoker = $invoker;
    }

    /**
     * @param CreateModuleItemInput $input message
     * @param array $context request parameters
     *
     * @return CreateModuleItemOutput output message
     */
    public function CreateModuleItem(CreateModuleItemInput $input, array $context = [])
    {
        $path = "/items";

        $context['name'] = "eolymp.course.ModuleItemService/CreateModuleItem";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, CreateModuleItemOutput::class, $context);
    }

    /**
     * @param UpdateModuleItemInput $input message
     * @param array $context request parameters
     *
     * @return UpdateModuleItemOutput output message
     */
    public function UpdateModuleItem(UpdateModuleItemInput $input, array $context = [])
    {
        $path = "/items/".rawurlencode($input->getItemId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setItemId("");

        $context['name'] = "eolymp.course.ModuleItemService/UpdateModuleItem";
        $context['path'] = $path;

        return call_user_func($this->invoker, "PUT", $this->url.$path, $input, UpdateModuleItemOutput::class, $context);
    }

    /**
     * @param MoveModuleItemInput $input message
     * @param array $context request parameters
     *
     * @return MoveModuleItemOutput output message
     */
    public function MoveModuleItem(MoveModuleItemInput $input, array $context = [])
    {
        $path = "/items/".rawurlencode($input->getItemId())."/move";

        // Cleanup URL parameters to avoid any ambiguity
        $input->setItemId("");

        $context['name'] = "eolymp.course.ModuleItemService/MoveModuleItem";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, MoveModuleItemOutput::class, $context);
    }

    /**
     * @param DeleteModuleItemInput $input message
     * @param array $context request parameters
     *
     * @return DeleteModuleItemOutput output message
     */
    public function DeleteModuleItem(DeleteModuleItemInput $input, array $context = [])
    {
        $path = "/items/".rawurlencode($input->getItemId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setItemId("");

        $context['name'] = "eolymp.course.ModuleItemService/DeleteModuleItem";
        $context['path'] = $path;

        return call_user_func($this->invoker, "DELETE", $this->url.$path, $input, DeleteModuleItemOutput::class, $context);
    }

    /**
     * @param DescribeModuleItemInput $input message
     * @param array $context request parameters
     *
     * @return DescribeModuleItemOutput output message
     */
    public function DescribeModuleItem(DescribeModuleItemInput $input, array $context = [])
    {
        $path = "/items/".rawurlencode($input->getItemId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setItemId("");

        $context['name'] = "eolymp.course.ModuleItemService/DescribeModuleItem";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, DescribeModuleItemOutput::class, $context);
    }

    /**
     * @param ListModuleItemsInput $input message
     * @param array $context request parameters
     *
     * @return ListModuleItemsOutput output message
     */
    public function ListModuleItems(ListModuleItemsInput $input, array $context = [])
    {
        $path = "/items";

        $context['name'] = "eolymp.course.ModuleItemService/ListModuleItems";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, ListModuleItemsOutput::class, $context);
    }

}
