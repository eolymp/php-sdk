<?php
# Generated by the protocol buffer compiler. DO NOT EDIT!
# See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-php-esdk for more details.

namespace Eolymp\Newsletter;

class RecipientServiceClient {

    /** @var string base URL */
    private $url;

    /** @var callable RPC client */
    private $invoker;

    /**
     * @param string   $url     defines base URL for service
     * @param callable $invoker provides transport implementation for calls
     */
    public function __construct($url, $invoker)
    {
        $this->url = $url;
        $this->invoker = $invoker;
    }

    /**
     * @param DescribeRecipientInput $input message
     * @param array $context request parameters
     *
     * @return DescribeRecipientOutput output message
     */
    public function DescribeRecipient(DescribeRecipientInput $input, array $context = [])
    {
        $path = "/recipients/".rawurlencode($input->getRecipientId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setRecipientId("");

        $context['name'] = "eolymp.newsletter.RecipientService/DescribeRecipient";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, DescribeRecipientOutput::class, $context);
    }

    /**
     * @param ImportRecipientsInput $input message
     * @param array $context request parameters
     *
     * @return ImportRecipientsOutput output message
     */
    public function ImportRecipients(ImportRecipientsInput $input, array $context = [])
    {
        $path = "/imports/recipients";

        $context['name'] = "eolymp.newsletter.RecipientService/ImportRecipients";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, ImportRecipientsOutput::class, $context);
    }

    /**
     * @param ListRecipientsInput $input message
     * @param array $context request parameters
     *
     * @return ListRecipientsOutput output message
     */
    public function ListRecipients(ListRecipientsInput $input, array $context = [])
    {
        $path = "/recipients";

        $context['name'] = "eolymp.newsletter.RecipientService/ListRecipients";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, ListRecipientsOutput::class, $context);
    }

    /**
     * @param CreateRecipientInput $input message
     * @param array $context request parameters
     *
     * @return CreateRecipientOutput output message
     */
    public function CreateRecipient(CreateRecipientInput $input, array $context = [])
    {
        $path = "/recipients";

        $context['name'] = "eolymp.newsletter.RecipientService/CreateRecipient";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, CreateRecipientOutput::class, $context);
    }

    /**
     * @param RemoveRecipientInput $input message
     * @param array $context request parameters
     *
     * @return RemoveRecipientOutput output message
     */
    public function RemoveRecipient(RemoveRecipientInput $input, array $context = [])
    {
        $path = "/recipients/".rawurlencode($input->getRecipientId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setRecipientId("");

        $context['name'] = "eolymp.newsletter.RecipientService/RemoveRecipient";
        $context['path'] = $path;

        return call_user_func($this->invoker, "DELETE", $this->url.$path, $input, RemoveRecipientOutput::class, $context);
    }

}
