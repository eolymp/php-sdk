<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/newsletter/campaign_service.proto

namespace Eolymp\Newsletter;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.newsletter.ImportRecipientInput</code>
 */
class ImportRecipientInput extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string campaign_id = 1;</code>
     */
    protected $campaign_id = '';
    /**
     * Generated from protobuf field <code>map<string, string> parameters = 20;</code>
     */
    private $parameters;
    protected $source;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $campaign_id
     *     @type bool $all_members
     *     @type string $group_id
     *     @type string $contest_id
     *     @type array|\Google\Protobuf\Internal\MapField $parameters
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Newsletter\CampaignService::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string campaign_id = 1;</code>
     * @return string
     */
    public function getCampaignId()
    {
        return $this->campaign_id;
    }

    /**
     * Generated from protobuf field <code>string campaign_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCampaignId($var)
    {
        GPBUtil::checkString($var, True);
        $this->campaign_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool all_members = 10;</code>
     * @return bool
     */
    public function getAllMembers()
    {
        return $this->readOneof(10);
    }

    public function hasAllMembers()
    {
        return $this->hasOneof(10);
    }

    /**
     * Generated from protobuf field <code>bool all_members = 10;</code>
     * @param bool $var
     * @return $this
     */
    public function setAllMembers($var)
    {
        GPBUtil::checkBool($var);
        $this->writeOneof(10, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>string group_id = 11;</code>
     * @return string
     */
    public function getGroupId()
    {
        return $this->readOneof(11);
    }

    public function hasGroupId()
    {
        return $this->hasOneof(11);
    }

    /**
     * Generated from protobuf field <code>string group_id = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setGroupId($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(11, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>string contest_id = 12;</code>
     * @return string
     */
    public function getContestId()
    {
        return $this->readOneof(12);
    }

    public function hasContestId()
    {
        return $this->hasOneof(12);
    }

    /**
     * Generated from protobuf field <code>string contest_id = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setContestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(12, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>map<string, string> parameters = 20;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getParameters()
    {
        return $this->parameters;
    }

    /**
     * Generated from protobuf field <code>map<string, string> parameters = 20;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setParameters($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->parameters = $arr;

        return $this;
    }

    /**
     * @return string
     */
    public function getSource()
    {
        return $this->whichOneof("source");
    }

}

