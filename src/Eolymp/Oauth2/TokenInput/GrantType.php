<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/oauth2/oauth2.proto

namespace Eolymp\Oauth2\TokenInput;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.oauth2.TokenInput.GrantType</code>
 */
class GrantType
{
    /**
     * Generated from protobuf enum <code>NONE = 0;</code>
     */
    const NONE = 0;
    /**
     * Generated from protobuf enum <code>PASSWORD = 1;</code>
     */
    const PASSWORD = 1;
    /**
     * Generated from protobuf enum <code>AUTHORIZATION_CODE = 2;</code>
     */
    const AUTHORIZATION_CODE = 2;
    /**
     * Generated from protobuf enum <code>REFRESH_TOKEN = 3;</code>
     */
    const REFRESH_TOKEN = 3;
    /**
     * deprecated: to be removed
     *
     * Generated from protobuf enum <code>GOOGLE_CODE = 4;</code>
     */
    const GOOGLE_CODE = 4;

    private static $valueToName = [
        self::NONE => 'NONE',
        self::PASSWORD => 'PASSWORD',
        self::AUTHORIZATION_CODE => 'AUTHORIZATION_CODE',
        self::REFRESH_TOKEN => 'REFRESH_TOKEN',
        self::GOOGLE_CODE => 'GOOGLE_CODE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(GrantType::class, \Eolymp\Oauth2\TokenInput_GrantType::class);

