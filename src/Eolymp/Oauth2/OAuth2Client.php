<?php
# Generated by the protocol buffer compiler. DO NOT EDIT!
# See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-php-esdk for more details.

namespace Eolymp\Oauth2;

class OAuth2Client {

    /** @var string base URL */
    private $url;

    /** @var callable RPC client */
    private $invoker;

    /**
     * @param string   $url     defines base URL for service
     * @param callable $invoker provides transport implementation for calls
     */
    public function __construct($url, $invoker)
    {
        $this->url = $url;
        $this->invoker = $invoker;
    }

    /**
     * @param TokenInput $input message
     * @param array $context request parameters
     *
     * @return TokenOutput output message
     */
    public function Token(TokenInput $input, array $context = [])
    {
        $path = "/oauth2/token";

        $context['name'] = "eolymp.oauth2.OAuth2/Token";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, TokenOutput::class, $context);
    }

    /**
     * @param AuthorizeInput $input message
     * @param array $context request parameters
     *
     * @return AuthorizeOutput output message
     */
    public function Authorize(AuthorizeInput $input, array $context = [])
    {
        $path = "/oauth2/authorize";

        $context['name'] = "eolymp.oauth2.OAuth2/Authorize";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, AuthorizeOutput::class, $context);
    }

    /**
     * @param CallbackInput $input message
     * @param array $context request parameters
     *
     * @return CallbackOutput output message
     */
    public function Callback(CallbackInput $input, array $context = [])
    {
        $path = "/oauth2/callback";

        $context['name'] = "eolymp.oauth2.OAuth2/Callback";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, CallbackOutput::class, $context);
    }

    /**
     * @param UserInfoInput $input message
     * @param array $context request parameters
     *
     * @return UserInfoOutput output message
     */
    public function UserInfo(UserInfoInput $input, array $context = [])
    {
        $path = "/oauth2/userinfo";

        $context['name'] = "eolymp.oauth2.OAuth2/UserInfo";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, UserInfoOutput::class, $context);
    }

}
