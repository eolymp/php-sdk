<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/typewriter/inline.proto

namespace Eolymp\Typewriter;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.typewriter.Inline</code>
 */
class Inline extends \Google\Protobuf\Internal\Message
{
    protected $node;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Eolymp\Typewriter\Inline\Text $text
     *     @type \Eolymp\Typewriter\Inline\Link $link
     *     @type \Eolymp\Typewriter\Inline\Math $math
     *     @type \Eolymp\Typewriter\Inline\Code $code
     *     @type \Eolymp\Typewriter\Inline\Variable $variable
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Typewriter\Inline::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.eolymp.typewriter.Inline.Text text = 1;</code>
     * @return \Eolymp\Typewriter\Inline\Text
     */
    public function getText()
    {
        return $this->readOneof(1);
    }

    /**
     * Generated from protobuf field <code>.eolymp.typewriter.Inline.Text text = 1;</code>
     * @param \Eolymp\Typewriter\Inline\Text $var
     * @return $this
     */
    public function setText($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Typewriter\Inline_Text::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.typewriter.Inline.Link link = 2;</code>
     * @return \Eolymp\Typewriter\Inline\Link
     */
    public function getLink()
    {
        return $this->readOneof(2);
    }

    /**
     * Generated from protobuf field <code>.eolymp.typewriter.Inline.Link link = 2;</code>
     * @param \Eolymp\Typewriter\Inline\Link $var
     * @return $this
     */
    public function setLink($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Typewriter\Inline_Link::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.typewriter.Inline.Math math = 3;</code>
     * @return \Eolymp\Typewriter\Inline\Math
     */
    public function getMath()
    {
        return $this->readOneof(3);
    }

    /**
     * Generated from protobuf field <code>.eolymp.typewriter.Inline.Math math = 3;</code>
     * @param \Eolymp\Typewriter\Inline\Math $var
     * @return $this
     */
    public function setMath($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Typewriter\Inline_Math::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.typewriter.Inline.Code code = 4;</code>
     * @return \Eolymp\Typewriter\Inline\Code
     */
    public function getCode()
    {
        return $this->readOneof(4);
    }

    /**
     * Generated from protobuf field <code>.eolymp.typewriter.Inline.Code code = 4;</code>
     * @param \Eolymp\Typewriter\Inline\Code $var
     * @return $this
     */
    public function setCode($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Typewriter\Inline_Code::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.typewriter.Inline.Variable variable = 5;</code>
     * @return \Eolymp\Typewriter\Inline\Variable
     */
    public function getVariable()
    {
        return $this->readOneof(5);
    }

    /**
     * Generated from protobuf field <code>.eolymp.typewriter.Inline.Variable variable = 5;</code>
     * @param \Eolymp\Typewriter\Inline\Variable $var
     * @return $this
     */
    public function setVariable($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Typewriter\Inline_Variable::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getNode()
    {
        return $this->whichOneof("node");
    }

}

