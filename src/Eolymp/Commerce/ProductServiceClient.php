<?php
# Generated by the protocol buffer compiler. DO NOT EDIT!
# See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-php-esdk for more details.

namespace Eolymp\Commerce;

class ProductServiceClient {

    /** @var string base URL */
    private $url;

    /** @var callable RPC client */
    private $invoker;

    /**
     * @param string   $url     defines base URL for service
     * @param callable $invoker provides transport implementation for calls
     */
    public function __construct($url, $invoker)
    {
        $this->url = $url;
        $this->invoker = $invoker;
    }

    /**
     * @param CreateProductInput $input message
     * @param array $context request parameters
     *
     * @return CreateProductOutput output message
     */
    public function CreateProduct(CreateProductInput $input, array $context = [])
    {
        $path = "/store/products";

        $context['name'] = "eolymp.commerce.ProductService/CreateProduct";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, CreateProductOutput::class, $context);
    }

    /**
     * @param UpdateProductInput $input message
     * @param array $context request parameters
     *
     * @return UpdateProductOutput output message
     */
    public function UpdateProduct(UpdateProductInput $input, array $context = [])
    {
        $path = "/store/products/".rawurlencode($input->getProductId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setProductId("");

        $context['name'] = "eolymp.commerce.ProductService/UpdateProduct";
        $context['path'] = $path;

        return call_user_func($this->invoker, "PUT", $this->url.$path, $input, UpdateProductOutput::class, $context);
    }

    /**
     * @param DeleteProductInput $input message
     * @param array $context request parameters
     *
     * @return DeleteProductOutput output message
     */
    public function DeleteProduct(DeleteProductInput $input, array $context = [])
    {
        $path = "/store/products/".rawurlencode($input->getProductId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setProductId("");

        $context['name'] = "eolymp.commerce.ProductService/DeleteProduct";
        $context['path'] = $path;

        return call_user_func($this->invoker, "DELETE", $this->url.$path, $input, DeleteProductOutput::class, $context);
    }

    /**
     * @param DescribeProductInput $input message
     * @param array $context request parameters
     *
     * @return DescribeProductOutput output message
     */
    public function DescribeProduct(DescribeProductInput $input, array $context = [])
    {
        $path = "/store/products/".rawurlencode($input->getProductId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setProductId("");

        $context['name'] = "eolymp.commerce.ProductService/DescribeProduct";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, DescribeProductOutput::class, $context);
    }

    /**
     * @param ListProductsInput $input message
     * @param array $context request parameters
     *
     * @return ListProductsOutput output message
     */
    public function ListProducts(ListProductsInput $input, array $context = [])
    {
        $path = "/store/products";

        $context['name'] = "eolymp.commerce.ProductService/ListProducts";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, ListProductsOutput::class, $context);
    }

}
