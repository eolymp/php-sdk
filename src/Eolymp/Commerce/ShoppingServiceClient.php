<?php
# Generated by the protocol buffer compiler. DO NOT EDIT!
# See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-php-esdk for more details.

namespace Eolymp\Commerce;

class ShoppingServiceClient {

    /** @var string base URL */
    private $url;

    /** @var callable RPC client */
    private $invoker;

    /**
     * @param string   $url     defines base URL for service
     * @param callable $invoker provides transport implementation for calls
     */
    public function __construct($url, $invoker)
    {
        $this->url = $url;
        $this->invoker = $invoker;
    }

    /**
     * @param DescribeShoppingCartInput $input message
     * @param array $context request parameters
     *
     * @return DescribeShoppingCartOutput output message
     */
    public function DescribeShoppingCart(DescribeShoppingCartInput $input, array $context = [])
    {
        $path = "/store/cart";

        $context['name'] = "eolymp.commerce.ShoppingService/DescribeShoppingCart";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, DescribeShoppingCartOutput::class, $context);
    }

    /**
     * @param CreateShoppingCartItemInput $input message
     * @param array $context request parameters
     *
     * @return CreateShoppingCartItemOutput output message
     */
    public function CreateShoppingCartItem(CreateShoppingCartItemInput $input, array $context = [])
    {
        $path = "/store/cart/items";

        $context['name'] = "eolymp.commerce.ShoppingService/CreateShoppingCartItem";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, CreateShoppingCartItemOutput::class, $context);
    }

    /**
     * @param UpdateShoppingCartItemInput $input message
     * @param array $context request parameters
     *
     * @return UpdateShoppingCartItemOutput output message
     */
    public function UpdateShoppingCartItem(UpdateShoppingCartItemInput $input, array $context = [])
    {
        $path = "/store/cart/items/".rawurlencode($input->getItemId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setItemId("");

        $context['name'] = "eolymp.commerce.ShoppingService/UpdateShoppingCartItem";
        $context['path'] = $path;

        return call_user_func($this->invoker, "PUT", $this->url.$path, $input, UpdateShoppingCartItemOutput::class, $context);
    }

    /**
     * @param DeleteShoppingCartItemInput $input message
     * @param array $context request parameters
     *
     * @return DeleteShoppingCartItemOutput output message
     */
    public function DeleteShoppingCartItem(DeleteShoppingCartItemInput $input, array $context = [])
    {
        $path = "/store/cart/items/".rawurlencode($input->getItemId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setItemId("");

        $context['name'] = "eolymp.commerce.ShoppingService/DeleteShoppingCartItem";
        $context['path'] = $path;

        return call_user_func($this->invoker, "DELETE", $this->url.$path, $input, DeleteShoppingCartItemOutput::class, $context);
    }

    /**
     * @param UpdateShippingAddressInput $input message
     * @param array $context request parameters
     *
     * @return UpdateShippingAddressOutput output message
     */
    public function UpdateShippingAddress(UpdateShippingAddressInput $input, array $context = [])
    {
        $path = "/store/cart/shipping-address";

        $context['name'] = "eolymp.commerce.ShoppingService/UpdateShippingAddress";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, UpdateShippingAddressOutput::class, $context);
    }

    /**
     * @param UpdateBillingAddressInput $input message
     * @param array $context request parameters
     *
     * @return UpdateBillingAddressOutput output message
     */
    public function UpdateBillingAddress(UpdateBillingAddressInput $input, array $context = [])
    {
        $path = "/store/cart/billing-address";

        $context['name'] = "eolymp.commerce.ShoppingService/UpdateBillingAddress";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, UpdateBillingAddressOutput::class, $context);
    }

    /**
     * @param UpdateShippingMethodInput $input message
     * @param array $context request parameters
     *
     * @return UpdateShippingMethodOutput output message
     */
    public function UpdateShippingMethod(UpdateShippingMethodInput $input, array $context = [])
    {
        $path = "/store/cart/shipping-method";

        $context['name'] = "eolymp.commerce.ShoppingService/UpdateShippingMethod";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, UpdateShippingMethodOutput::class, $context);
    }

    /**
     * @param ListShippingMethodsInput $input message
     * @param array $context request parameters
     *
     * @return ListShippingMethodsOutput output message
     */
    public function ListShippingMethods(ListShippingMethodsInput $input, array $context = [])
    {
        $path = "/store/cart/shipping-methods";

        $context['name'] = "eolymp.commerce.ShoppingService/ListShippingMethods";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, ListShippingMethodsOutput::class, $context);
    }

    /**
     * @param PlaceOrderInput $input message
     * @param array $context request parameters
     *
     * @return PlaceOrderOutput output message
     */
    public function PlaceOrder(PlaceOrderInput $input, array $context = [])
    {
        $path = "/store/cart:order";

        $context['name'] = "eolymp.commerce.ShoppingService/PlaceOrder";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, PlaceOrderOutput::class, $context);
    }

}
