<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/commerce/subscription.proto

namespace Eolymp\Commerce\Subscription;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.commerce.Subscription.Status</code>
 */
class Status
{
    /**
     * Generated from protobuf enum <code>UNKNOWN_STATUS = 0;</code>
     */
    const UNKNOWN_STATUS = 0;
    /**
     * Generated from protobuf enum <code>INCOMPLETE = 1;</code>
     */
    const INCOMPLETE = 1;
    /**
     * Generated from protobuf enum <code>INCOMPLETE_EXPIRED = 2;</code>
     */
    const INCOMPLETE_EXPIRED = 2;
    /**
     * Generated from protobuf enum <code>TRIALING = 3;</code>
     */
    const TRIALING = 3;
    /**
     * Generated from protobuf enum <code>ACTIVE = 4;</code>
     */
    const ACTIVE = 4;
    /**
     * Generated from protobuf enum <code>PAST_DUE = 5;</code>
     */
    const PAST_DUE = 5;
    /**
     * Generated from protobuf enum <code>CANCELLED = 6;</code>
     */
    const CANCELLED = 6;
    /**
     * Generated from protobuf enum <code>UNPAID = 7;</code>
     */
    const UNPAID = 7;

    private static $valueToName = [
        self::UNKNOWN_STATUS => 'UNKNOWN_STATUS',
        self::INCOMPLETE => 'INCOMPLETE',
        self::INCOMPLETE_EXPIRED => 'INCOMPLETE_EXPIRED',
        self::TRIALING => 'TRIALING',
        self::ACTIVE => 'ACTIVE',
        self::PAST_DUE => 'PAST_DUE',
        self::CANCELLED => 'CANCELLED',
        self::UNPAID => 'UNPAID',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Status::class, \Eolymp\Commerce\Subscription_Status::class);

