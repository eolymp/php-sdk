<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/commerce/order.proto

namespace Eolymp\Commerce\Order;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.commerce.Order.Recurrence</code>
 */
class Recurrence
{
    /**
     * Generated from protobuf enum <code>UNKNOWN_RECURRENCE = 0;</code>
     */
    const UNKNOWN_RECURRENCE = 0;
    /**
     * Generated from protobuf enum <code>NONE = 1;</code>
     */
    const NONE = 1;
    /**
     * Generated from protobuf enum <code>MONTHLY = 2;</code>
     */
    const MONTHLY = 2;
    /**
     * Generated from protobuf enum <code>YEARLY = 3;</code>
     */
    const YEARLY = 3;

    private static $valueToName = [
        self::UNKNOWN_RECURRENCE => 'UNKNOWN_RECURRENCE',
        self::NONE => 'NONE',
        self::MONTHLY => 'MONTHLY',
        self::YEARLY => 'YEARLY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Recurrence::class, \Eolymp\Commerce\Order_Recurrence::class);

