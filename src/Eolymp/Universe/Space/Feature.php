<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/universe/space.proto

namespace Eolymp\Universe\Space;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.universe.Space.Feature</code>
 */
class Feature
{
    /**
     * Generated from protobuf enum <code>UNKNOWN_FEATURE = 0;</code>
     */
    const UNKNOWN_FEATURE = 0;
    /**
     * sso is enabled
     *
     * Generated from protobuf enum <code>FEATURE_SSO = 1;</code>
     */
    const FEATURE_SSO = 1;
    /**
     * discussions are enabled
     *
     * Generated from protobuf enum <code>FEATURE_DISCUSSIONS = 2;</code>
     */
    const FEATURE_DISCUSSIONS = 2;
    /**
     * posts are enabled
     *
     * Generated from protobuf enum <code>FEATURE_POSTS = 3;</code>
     */
    const FEATURE_POSTS = 3;
    /**
     * members can publish posts
     *
     * Generated from protobuf enum <code>FEATURE_MEMBER_POSTS = 4;</code>
     */
    const FEATURE_MEMBER_POSTS = 4;
    /**
     * upsolve mode is enabled
     *
     * Generated from protobuf enum <code>FEATURE_UPSOLVE = 5;</code>
     */
    const FEATURE_UPSOLVE = 5;
    /**
     * unofficial participants are allowed
     *
     * Generated from protobuf enum <code>FEATURE_UNOFFICIAL = 6;</code>
     */
    const FEATURE_UNOFFICIAL = 6;

    private static $valueToName = [
        self::UNKNOWN_FEATURE => 'UNKNOWN_FEATURE',
        self::FEATURE_SSO => 'FEATURE_SSO',
        self::FEATURE_DISCUSSIONS => 'FEATURE_DISCUSSIONS',
        self::FEATURE_POSTS => 'FEATURE_POSTS',
        self::FEATURE_MEMBER_POSTS => 'FEATURE_MEMBER_POSTS',
        self::FEATURE_UPSOLVE => 'FEATURE_UPSOLVE',
        self::FEATURE_UNOFFICIAL => 'FEATURE_UNOFFICIAL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Feature::class, \Eolymp\Universe\Space_Feature::class);

