<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/universe/space.proto

namespace Eolymp\Universe;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.universe.Space</code>
 */
class Space extends \Google\Protobuf\Internal\Message
{
    /**
     * space unique identifier
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * space key used to build URLs
     *
     * Generated from protobuf field <code>string key = 2;</code>
     */
    protected $key = '';
    /**
     * space key used to build URLs
     *
     * Generated from protobuf field <code>string url = 3;</code>
     */
    protected $url = '';
    /**
     * human friendly name
     *
     * Generated from protobuf field <code>string name = 10;</code>
     */
    protected $name = '';
    /**
     * space logo image
     *
     * Generated from protobuf field <code>string image = 11;</code>
     */
    protected $image = '';
    /**
     * space use type
     *
     * Generated from protobuf field <code>.eolymp.universe.Space.Type type = 12;</code>
     */
    protected $type = 0;
    /**
     * plan defines billing plan for the space
     *
     * Generated from protobuf field <code>string plan = 13;</code>
     */
    protected $plan = '';
    /**
     * Generated from protobuf field <code>.eolymp.universe.Space.Visibility visibility = 14;</code>
     */
    protected $visibility = 0;
    /**
     * space home page URL
     *
     * Generated from protobuf field <code>string home_url = 50;</code>
     */
    protected $home_url = '';
    /**
     * space issuer URL (used for issuing tokens)
     *
     * Generated from protobuf field <code>string issuer_url = 51;</code>
     */
    protected $issuer_url = '';
    /**
     * Generated from protobuf field <code>.eolymp.universe.UserConfig user_config = 100;</code>
     */
    protected $user_config = null;
    /**
     * Generated from protobuf field <code>.eolymp.universe.AppearanceConfig appearance_config = 101;</code>
     */
    protected $appearance_config = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           space unique identifier
     *     @type string $key
     *           space key used to build URLs
     *     @type string $url
     *           space key used to build URLs
     *     @type string $name
     *           human friendly name
     *     @type string $image
     *           space logo image
     *     @type int $type
     *           space use type
     *     @type string $plan
     *           plan defines billing plan for the space
     *     @type int $visibility
     *     @type string $home_url
     *           space home page URL
     *     @type string $issuer_url
     *           space issuer URL (used for issuing tokens)
     *     @type \Eolymp\Universe\UserConfig $user_config
     *     @type \Eolymp\Universe\AppearanceConfig $appearance_config
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Universe\Space::initOnce();
        parent::__construct($data);
    }

    /**
     * space unique identifier
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * space unique identifier
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * space key used to build URLs
     *
     * Generated from protobuf field <code>string key = 2;</code>
     * @return string
     */
    public function getKey()
    {
        return $this->key;
    }

    /**
     * space key used to build URLs
     *
     * Generated from protobuf field <code>string key = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->key = $var;

        return $this;
    }

    /**
     * space key used to build URLs
     *
     * Generated from protobuf field <code>string url = 3;</code>
     * @return string
     */
    public function getUrl()
    {
        return $this->url;
    }

    /**
     * space key used to build URLs
     *
     * Generated from protobuf field <code>string url = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->url = $var;

        return $this;
    }

    /**
     * human friendly name
     *
     * Generated from protobuf field <code>string name = 10;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * human friendly name
     *
     * Generated from protobuf field <code>string name = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * space logo image
     *
     * Generated from protobuf field <code>string image = 11;</code>
     * @return string
     */
    public function getImage()
    {
        return $this->image;
    }

    /**
     * space logo image
     *
     * Generated from protobuf field <code>string image = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setImage($var)
    {
        GPBUtil::checkString($var, True);
        $this->image = $var;

        return $this;
    }

    /**
     * space use type
     *
     * Generated from protobuf field <code>.eolymp.universe.Space.Type type = 12;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * space use type
     *
     * Generated from protobuf field <code>.eolymp.universe.Space.Type type = 12;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Universe\Space_Type::class);
        $this->type = $var;

        return $this;
    }

    /**
     * plan defines billing plan for the space
     *
     * Generated from protobuf field <code>string plan = 13;</code>
     * @return string
     */
    public function getPlan()
    {
        return $this->plan;
    }

    /**
     * plan defines billing plan for the space
     *
     * Generated from protobuf field <code>string plan = 13;</code>
     * @param string $var
     * @return $this
     */
    public function setPlan($var)
    {
        GPBUtil::checkString($var, True);
        $this->plan = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.universe.Space.Visibility visibility = 14;</code>
     * @return int
     */
    public function getVisibility()
    {
        return $this->visibility;
    }

    /**
     * Generated from protobuf field <code>.eolymp.universe.Space.Visibility visibility = 14;</code>
     * @param int $var
     * @return $this
     */
    public function setVisibility($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Universe\Space_Visibility::class);
        $this->visibility = $var;

        return $this;
    }

    /**
     * space home page URL
     *
     * Generated from protobuf field <code>string home_url = 50;</code>
     * @return string
     */
    public function getHomeUrl()
    {
        return $this->home_url;
    }

    /**
     * space home page URL
     *
     * Generated from protobuf field <code>string home_url = 50;</code>
     * @param string $var
     * @return $this
     */
    public function setHomeUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->home_url = $var;

        return $this;
    }

    /**
     * space issuer URL (used for issuing tokens)
     *
     * Generated from protobuf field <code>string issuer_url = 51;</code>
     * @return string
     */
    public function getIssuerUrl()
    {
        return $this->issuer_url;
    }

    /**
     * space issuer URL (used for issuing tokens)
     *
     * Generated from protobuf field <code>string issuer_url = 51;</code>
     * @param string $var
     * @return $this
     */
    public function setIssuerUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->issuer_url = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.universe.UserConfig user_config = 100;</code>
     * @return \Eolymp\Universe\UserConfig
     */
    public function getUserConfig()
    {
        return $this->user_config;
    }

    /**
     * Generated from protobuf field <code>.eolymp.universe.UserConfig user_config = 100;</code>
     * @param \Eolymp\Universe\UserConfig $var
     * @return $this
     */
    public function setUserConfig($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Universe\UserConfig::class);
        $this->user_config = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.universe.AppearanceConfig appearance_config = 101;</code>
     * @return \Eolymp\Universe\AppearanceConfig
     */
    public function getAppearanceConfig()
    {
        return $this->appearance_config;
    }

    /**
     * Generated from protobuf field <code>.eolymp.universe.AppearanceConfig appearance_config = 101;</code>
     * @param \Eolymp\Universe\AppearanceConfig $var
     * @return $this
     */
    public function setAppearanceConfig($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Universe\AppearanceConfig::class);
        $this->appearance_config = $var;

        return $this;
    }

}

