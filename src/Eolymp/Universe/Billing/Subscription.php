<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/universe/billing.proto

namespace Eolymp\Universe\Billing;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.universe.Billing.Subscription</code>
 */
class Subscription extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * Generated from protobuf field <code>.eolymp.universe.Billing.Status status = 2;</code>
     */
    protected $status = 0;
    /**
     * Irregular structure flag
     * If this flag is set to true, show warning to the customer because subscription might have multiple items,
     * unrecognized changes or other irregularities. It might be due to an error or special manual configuration.
     * Updating irregular subscriptions is not possible without intervention from support.
     *
     * Generated from protobuf field <code>bool irregular = 3;</code>
     */
    protected $irregular = false;
    /**
     * Defines if payment method has been added to the subscription
     *
     * Generated from protobuf field <code>bool has_payment_method = 4;</code>
     */
    protected $has_payment_method = false;
    /**
     * Generated from protobuf field <code>.eolymp.universe.Plan plan = 10;</code>
     */
    protected $plan = null;
    /**
     * Generated from protobuf field <code>.eolymp.universe.Plan.Variant variant = 11;</code>
     */
    protected $variant = null;
    /**
     * Generated from protobuf field <code>uint32 seats = 12;</code>
     */
    protected $seats = 0;
    /**
     * time when subscription was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created_at = 210;</code>
     */
    protected $created_at = null;
    /**
     * time when subscription was started (activated first time)
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp started_at = 211;</code>
     */
    protected $started_at = null;
    /**
     * time when subscription was/will be cancelled
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp cancel_at = 213;</code>
     */
    protected $cancel_at = null;
    /**
     * time when subscription was/will be cancelled
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp cancelled_at = 214;</code>
     */
    protected $cancelled_at = null;
    /**
     * time when subscription was/will be cancelled
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp ended_at = 215;</code>
     */
    protected $ended_at = null;
    /**
     * current billing period start
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp period_start = 240;</code>
     */
    protected $period_start = null;
    /**
     * current billing period end
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp period_end = 241;</code>
     */
    protected $period_end = null;
    /**
     * time when trial has started
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp trial_start = 270;</code>
     */
    protected $trial_start = null;
    /**
     * time when trial will be over
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp trial_end = 271;</code>
     */
    protected $trial_end = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *     @type int $status
     *     @type bool $irregular
     *           Irregular structure flag
     *           If this flag is set to true, show warning to the customer because subscription might have multiple items,
     *           unrecognized changes or other irregularities. It might be due to an error or special manual configuration.
     *           Updating irregular subscriptions is not possible without intervention from support.
     *     @type bool $has_payment_method
     *           Defines if payment method has been added to the subscription
     *     @type \Eolymp\Universe\Plan $plan
     *     @type \Eolymp\Universe\Plan\Variant $variant
     *     @type int $seats
     *     @type \Google\Protobuf\Timestamp $created_at
     *           time when subscription was created
     *     @type \Google\Protobuf\Timestamp $started_at
     *           time when subscription was started (activated first time)
     *     @type \Google\Protobuf\Timestamp $cancel_at
     *           time when subscription was/will be cancelled
     *     @type \Google\Protobuf\Timestamp $cancelled_at
     *           time when subscription was/will be cancelled
     *     @type \Google\Protobuf\Timestamp $ended_at
     *           time when subscription was/will be cancelled
     *     @type \Google\Protobuf\Timestamp $period_start
     *           current billing period start
     *     @type \Google\Protobuf\Timestamp $period_end
     *           current billing period end
     *     @type \Google\Protobuf\Timestamp $trial_start
     *           time when trial has started
     *     @type \Google\Protobuf\Timestamp $trial_end
     *           time when trial will be over
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Universe\Billing::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.universe.Billing.Status status = 2;</code>
     * @return int
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Generated from protobuf field <code>.eolymp.universe.Billing.Status status = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Universe\Billing\Status::class);
        $this->status = $var;

        return $this;
    }

    /**
     * Irregular structure flag
     * If this flag is set to true, show warning to the customer because subscription might have multiple items,
     * unrecognized changes or other irregularities. It might be due to an error or special manual configuration.
     * Updating irregular subscriptions is not possible without intervention from support.
     *
     * Generated from protobuf field <code>bool irregular = 3;</code>
     * @return bool
     */
    public function getIrregular()
    {
        return $this->irregular;
    }

    /**
     * Irregular structure flag
     * If this flag is set to true, show warning to the customer because subscription might have multiple items,
     * unrecognized changes or other irregularities. It might be due to an error or special manual configuration.
     * Updating irregular subscriptions is not possible without intervention from support.
     *
     * Generated from protobuf field <code>bool irregular = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setIrregular($var)
    {
        GPBUtil::checkBool($var);
        $this->irregular = $var;

        return $this;
    }

    /**
     * Defines if payment method has been added to the subscription
     *
     * Generated from protobuf field <code>bool has_payment_method = 4;</code>
     * @return bool
     */
    public function getHasPaymentMethod()
    {
        return $this->has_payment_method;
    }

    /**
     * Defines if payment method has been added to the subscription
     *
     * Generated from protobuf field <code>bool has_payment_method = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setHasPaymentMethod($var)
    {
        GPBUtil::checkBool($var);
        $this->has_payment_method = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.universe.Plan plan = 10;</code>
     * @return \Eolymp\Universe\Plan|null
     */
    public function getPlan()
    {
        return $this->plan;
    }

    public function hasPlan()
    {
        return isset($this->plan);
    }

    public function clearPlan()
    {
        unset($this->plan);
    }

    /**
     * Generated from protobuf field <code>.eolymp.universe.Plan plan = 10;</code>
     * @param \Eolymp\Universe\Plan $var
     * @return $this
     */
    public function setPlan($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Universe\Plan::class);
        $this->plan = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.universe.Plan.Variant variant = 11;</code>
     * @return \Eolymp\Universe\Plan\Variant|null
     */
    public function getVariant()
    {
        return $this->variant;
    }

    public function hasVariant()
    {
        return isset($this->variant);
    }

    public function clearVariant()
    {
        unset($this->variant);
    }

    /**
     * Generated from protobuf field <code>.eolymp.universe.Plan.Variant variant = 11;</code>
     * @param \Eolymp\Universe\Plan\Variant $var
     * @return $this
     */
    public function setVariant($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Universe\Plan\Variant::class);
        $this->variant = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 seats = 12;</code>
     * @return int
     */
    public function getSeats()
    {
        return $this->seats;
    }

    /**
     * Generated from protobuf field <code>uint32 seats = 12;</code>
     * @param int $var
     * @return $this
     */
    public function setSeats($var)
    {
        GPBUtil::checkUint32($var);
        $this->seats = $var;

        return $this;
    }

    /**
     * time when subscription was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created_at = 210;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }

    public function hasCreatedAt()
    {
        return isset($this->created_at);
    }

    public function clearCreatedAt()
    {
        unset($this->created_at);
    }

    /**
     * time when subscription was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp created_at = 210;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreatedAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->created_at = $var;

        return $this;
    }

    /**
     * time when subscription was started (activated first time)
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp started_at = 211;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getStartedAt()
    {
        return $this->started_at;
    }

    public function hasStartedAt()
    {
        return isset($this->started_at);
    }

    public function clearStartedAt()
    {
        unset($this->started_at);
    }

    /**
     * time when subscription was started (activated first time)
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp started_at = 211;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setStartedAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->started_at = $var;

        return $this;
    }

    /**
     * time when subscription was/will be cancelled
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp cancel_at = 213;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCancelAt()
    {
        return $this->cancel_at;
    }

    public function hasCancelAt()
    {
        return isset($this->cancel_at);
    }

    public function clearCancelAt()
    {
        unset($this->cancel_at);
    }

    /**
     * time when subscription was/will be cancelled
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp cancel_at = 213;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCancelAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->cancel_at = $var;

        return $this;
    }

    /**
     * time when subscription was/will be cancelled
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp cancelled_at = 214;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCancelledAt()
    {
        return $this->cancelled_at;
    }

    public function hasCancelledAt()
    {
        return isset($this->cancelled_at);
    }

    public function clearCancelledAt()
    {
        unset($this->cancelled_at);
    }

    /**
     * time when subscription was/will be cancelled
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp cancelled_at = 214;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCancelledAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->cancelled_at = $var;

        return $this;
    }

    /**
     * time when subscription was/will be cancelled
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp ended_at = 215;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getEndedAt()
    {
        return $this->ended_at;
    }

    public function hasEndedAt()
    {
        return isset($this->ended_at);
    }

    public function clearEndedAt()
    {
        unset($this->ended_at);
    }

    /**
     * time when subscription was/will be cancelled
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp ended_at = 215;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setEndedAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->ended_at = $var;

        return $this;
    }

    /**
     * current billing period start
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp period_start = 240;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getPeriodStart()
    {
        return $this->period_start;
    }

    public function hasPeriodStart()
    {
        return isset($this->period_start);
    }

    public function clearPeriodStart()
    {
        unset($this->period_start);
    }

    /**
     * current billing period start
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp period_start = 240;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setPeriodStart($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->period_start = $var;

        return $this;
    }

    /**
     * current billing period end
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp period_end = 241;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getPeriodEnd()
    {
        return $this->period_end;
    }

    public function hasPeriodEnd()
    {
        return isset($this->period_end);
    }

    public function clearPeriodEnd()
    {
        unset($this->period_end);
    }

    /**
     * current billing period end
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp period_end = 241;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setPeriodEnd($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->period_end = $var;

        return $this;
    }

    /**
     * time when trial has started
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp trial_start = 270;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getTrialStart()
    {
        return $this->trial_start;
    }

    public function hasTrialStart()
    {
        return isset($this->trial_start);
    }

    public function clearTrialStart()
    {
        unset($this->trial_start);
    }

    /**
     * time when trial has started
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp trial_start = 270;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTrialStart($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->trial_start = $var;

        return $this;
    }

    /**
     * time when trial will be over
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp trial_end = 271;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getTrialEnd()
    {
        return $this->trial_end;
    }

    public function hasTrialEnd()
    {
        return isset($this->trial_end);
    }

    public function clearTrialEnd()
    {
        unset($this->trial_end);
    }

    /**
     * time when trial will be over
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp trial_end = 271;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTrialEnd($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->trial_end = $var;

        return $this;
    }

}

