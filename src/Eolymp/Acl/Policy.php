<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/acl/policy.proto

namespace Eolymp\Acl;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.acl.Policy</code>
 */
class Policy extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * Generated from protobuf field <code>string name = 2;</code>
     */
    protected $name = '';
    /**
     * policy principal (user id)
     *
     * Generated from protobuf field <code>string principal = 3;</code>
     */
    protected $principal = '';
    /**
     * policy resource url, for example /contests/xyz, empty means policy applies globally
     *
     * Generated from protobuf field <code>string resource = 10;</code>
     */
    protected $resource = '';
    /**
     * allow all actions
     *
     * Generated from protobuf field <code>bool allow_all = 12;</code>
     */
    protected $allow_all = false;
    /**
     * list of allowed actions
     *
     * Generated from protobuf field <code>repeated .eolymp.acl.Action allows = 11;</code>
     */
    private $allows;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *     @type string $name
     *     @type string $principal
     *           policy principal (user id)
     *     @type string $resource
     *           policy resource url, for example /contests/xyz, empty means policy applies globally
     *     @type bool $allow_all
     *           allow all actions
     *     @type array<int>|\Google\Protobuf\Internal\RepeatedField $allows
     *           list of allowed actions
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Acl\Policy::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string name = 2;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Generated from protobuf field <code>string name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * policy principal (user id)
     *
     * Generated from protobuf field <code>string principal = 3;</code>
     * @return string
     */
    public function getPrincipal()
    {
        return $this->principal;
    }

    /**
     * policy principal (user id)
     *
     * Generated from protobuf field <code>string principal = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setPrincipal($var)
    {
        GPBUtil::checkString($var, True);
        $this->principal = $var;

        return $this;
    }

    /**
     * policy resource url, for example /contests/xyz, empty means policy applies globally
     *
     * Generated from protobuf field <code>string resource = 10;</code>
     * @return string
     */
    public function getResource()
    {
        return $this->resource;
    }

    /**
     * policy resource url, for example /contests/xyz, empty means policy applies globally
     *
     * Generated from protobuf field <code>string resource = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setResource($var)
    {
        GPBUtil::checkString($var, True);
        $this->resource = $var;

        return $this;
    }

    /**
     * allow all actions
     *
     * Generated from protobuf field <code>bool allow_all = 12;</code>
     * @return bool
     */
    public function getAllowAll()
    {
        return $this->allow_all;
    }

    /**
     * allow all actions
     *
     * Generated from protobuf field <code>bool allow_all = 12;</code>
     * @param bool $var
     * @return $this
     */
    public function setAllowAll($var)
    {
        GPBUtil::checkBool($var);
        $this->allow_all = $var;

        return $this;
    }

    /**
     * list of allowed actions
     *
     * Generated from protobuf field <code>repeated .eolymp.acl.Action allows = 11;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAllows()
    {
        return $this->allows;
    }

    /**
     * list of allowed actions
     *
     * Generated from protobuf field <code>repeated .eolymp.acl.Action allows = 11;</code>
     * @param array<int>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAllows($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Eolymp\Acl\Action::class);
        $this->allows = $arr;

        return $this;
    }

}

