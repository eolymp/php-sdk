<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/discussion/post_type_service.proto

namespace Eolymp\Discussion;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.discussion.DescribePostTypeInput</code>
 */
class DescribePostTypeInput extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string type_id = 1;</code>
     */
    protected $type_id = '';
    /**
     * if set, load type name in a given locale
     *
     * Generated from protobuf field <code>string locale = 10;</code>
     */
    protected $locale = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $type_id
     *     @type string $locale
     *           if set, load type name in a given locale
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Discussion\PostTypeService::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string type_id = 1;</code>
     * @return string
     */
    public function getTypeId()
    {
        return $this->type_id;
    }

    /**
     * Generated from protobuf field <code>string type_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTypeId($var)
    {
        GPBUtil::checkString($var, True);
        $this->type_id = $var;

        return $this;
    }

    /**
     * if set, load type name in a given locale
     *
     * Generated from protobuf field <code>string locale = 10;</code>
     * @return string
     */
    public function getLocale()
    {
        return $this->locale;
    }

    /**
     * if set, load type name in a given locale
     *
     * Generated from protobuf field <code>string locale = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setLocale($var)
    {
        GPBUtil::checkString($var, True);
        $this->locale = $var;

        return $this;
    }

}

