<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: eolymp/discussion/thread.proto

namespace Eolymp\Discussion;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.discussion.Thread</code>
 */
class Thread extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * Generated from protobuf field <code>string url = 2;</code>
     */
    protected $url = '';
    /**
     * Generated from protobuf field <code>string name = 3;</code>
     */
    protected $name = '';
    /**
     * vote of authenticated user (+1 or -1)
     *
     * Generated from protobuf field <code>int32 vote = 12;</code>
     */
    protected $vote = 0;
    /**
     * total vote count
     *
     * Generated from protobuf field <code>int32 vote_count = 10;</code>
     */
    protected $vote_count = 0;
    /**
     * total number of replies
     *
     * Generated from protobuf field <code>int32 reply_count = 11;</code>
     */
    protected $reply_count = 0;
    /**
     * Generated from protobuf field <code>.eolymp.discussion.Subscription subscription = 100;</code>
     */
    protected $subscription = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *     @type string $url
     *     @type string $name
     *     @type int $vote
     *           vote of authenticated user (+1 or -1)
     *     @type int $vote_count
     *           total vote count
     *     @type int $reply_count
     *           total number of replies
     *     @type \Eolymp\Discussion\Subscription $subscription
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Discussion\Thread::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string url = 2;</code>
     * @return string
     */
    public function getUrl()
    {
        return $this->url;
    }

    /**
     * Generated from protobuf field <code>string url = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->url = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string name = 3;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Generated from protobuf field <code>string name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * vote of authenticated user (+1 or -1)
     *
     * Generated from protobuf field <code>int32 vote = 12;</code>
     * @return int
     */
    public function getVote()
    {
        return $this->vote;
    }

    /**
     * vote of authenticated user (+1 or -1)
     *
     * Generated from protobuf field <code>int32 vote = 12;</code>
     * @param int $var
     * @return $this
     */
    public function setVote($var)
    {
        GPBUtil::checkInt32($var);
        $this->vote = $var;

        return $this;
    }

    /**
     * total vote count
     *
     * Generated from protobuf field <code>int32 vote_count = 10;</code>
     * @return int
     */
    public function getVoteCount()
    {
        return $this->vote_count;
    }

    /**
     * total vote count
     *
     * Generated from protobuf field <code>int32 vote_count = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setVoteCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->vote_count = $var;

        return $this;
    }

    /**
     * total number of replies
     *
     * Generated from protobuf field <code>int32 reply_count = 11;</code>
     * @return int
     */
    public function getReplyCount()
    {
        return $this->reply_count;
    }

    /**
     * total number of replies
     *
     * Generated from protobuf field <code>int32 reply_count = 11;</code>
     * @param int $var
     * @return $this
     */
    public function setReplyCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->reply_count = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.discussion.Subscription subscription = 100;</code>
     * @return \Eolymp\Discussion\Subscription|null
     */
    public function getSubscription()
    {
        return $this->subscription;
    }

    public function hasSubscription()
    {
        return isset($this->subscription);
    }

    public function clearSubscription()
    {
        unset($this->subscription);
    }

    /**
     * Generated from protobuf field <code>.eolymp.discussion.Subscription subscription = 100;</code>
     * @param \Eolymp\Discussion\Subscription $var
     * @return $this
     */
    public function setSubscription($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Discussion\Subscription::class);
        $this->subscription = $var;

        return $this;
    }

}

