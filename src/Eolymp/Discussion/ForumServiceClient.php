<?php
# Generated by the protocol buffer compiler. DO NOT EDIT!
# See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-php-esdk for more details.

namespace Eolymp\Discussion;

class ForumServiceClient {

    /** @var string base URL */
    private $url;

    /** @var callable RPC client */
    private $invoker;

    /**
     * @param string   $url     defines base URL for service
     * @param callable $invoker provides transport implementation for calls
     */
    public function __construct($url, $invoker)
    {
        $this->url = $url;
        $this->invoker = $invoker;
    }

    /**
     * @param DescribeForumInput $input message
     * @param array $context request parameters
     *
     * @return DescribeForumOutput output message
     */
    public function DescribeForum(DescribeForumInput $input, array $context = [])
    {
        $path = "/forums/".rawurlencode($input->getForumId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setForumId("");

        $context['name'] = "eolymp.discussion.ForumService/DescribeForum";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, DescribeForumOutput::class, $context);
    }

    /**
     * @param ListForumsInput $input message
     * @param array $context request parameters
     *
     * @return ListForumsOutput output message
     */
    public function ListForums(ListForumsInput $input, array $context = [])
    {
        $path = "/forums";

        $context['name'] = "eolymp.discussion.ForumService/ListForums";
        $context['path'] = $path;

        return call_user_func($this->invoker, "GET", $this->url.$path, $input, ListForumsOutput::class, $context);
    }

    /**
     * @param CreateForumInput $input message
     * @param array $context request parameters
     *
     * @return CreateForumOutput output message
     */
    public function CreateForum(CreateForumInput $input, array $context = [])
    {
        $path = "/forums";

        $context['name'] = "eolymp.discussion.ForumService/CreateForum";
        $context['path'] = $path;

        return call_user_func($this->invoker, "POST", $this->url.$path, $input, CreateForumOutput::class, $context);
    }

    /**
     * @param UpdateForumInput $input message
     * @param array $context request parameters
     *
     * @return UpdateForumOutput output message
     */
    public function UpdateForum(UpdateForumInput $input, array $context = [])
    {
        $path = "/forums/".rawurlencode($input->getForumId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setForumId("");

        $context['name'] = "eolymp.discussion.ForumService/UpdateForum";
        $context['path'] = $path;

        return call_user_func($this->invoker, "PUT", $this->url.$path, $input, UpdateForumOutput::class, $context);
    }

    /**
     * @param DeleteForumInput $input message
     * @param array $context request parameters
     *
     * @return DeleteForumOutput output message
     */
    public function DeleteForum(DeleteForumInput $input, array $context = [])
    {
        $path = "/forums/".rawurlencode($input->getForumId());

        // Cleanup URL parameters to avoid any ambiguity
        $input->setForumId("");

        $context['name'] = "eolymp.discussion.ForumService/DeleteForum";
        $context['path'] = $path;

        return call_user_func($this->invoker, "DELETE", $this->url.$path, $input, DeleteForumOutput::class, $context);
    }

}
