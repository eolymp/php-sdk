<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/worker/executor_service.proto

namespace Eolymp\Worker;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.worker.ExecuteJobInput</code>
 */
class ExecuteJobInput extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string job_id = 1;</code>
     */
    protected $job_id = '';
    /**
     * Generated from protobuf field <code>string namespace = 2;</code>
     */
    protected $namespace = '';
    /**
     * Generated from protobuf field <code>string type = 10;</code>
     */
    protected $type = '';
    /**
     * Generated from protobuf field <code>map<string, string> inputs = 11;</code>
     */
    private $inputs;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $job_id
     *     @type string $namespace
     *     @type string $type
     *     @type array|\Google\Protobuf\Internal\MapField $inputs
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Worker\ExecutorService::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string job_id = 1;</code>
     * @return string
     */
    public function getJobId()
    {
        return $this->job_id;
    }

    /**
     * Generated from protobuf field <code>string job_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setJobId($var)
    {
        GPBUtil::checkString($var, True);
        $this->job_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string namespace = 2;</code>
     * @return string
     */
    public function getNamespace()
    {
        return $this->namespace;
    }

    /**
     * Generated from protobuf field <code>string namespace = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setNamespace($var)
    {
        GPBUtil::checkString($var, True);
        $this->namespace = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string type = 10;</code>
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>string type = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, True);
        $this->type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>map<string, string> inputs = 11;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getInputs()
    {
        return $this->inputs;
    }

    /**
     * Generated from protobuf field <code>map<string, string> inputs = 11;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setInputs($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->inputs = $arr;

        return $this;
    }

}

