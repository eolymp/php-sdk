<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/worker/executor_service.proto

namespace Eolymp\Worker\ExecuteJobUpdate;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.worker.ExecuteJobUpdate.ProgressUpdate</code>
 */
class ProgressUpdate extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>uint32 progress = 1;</code>
     */
    protected $progress = 0;
    /**
     * Generated from protobuf field <code>uint32 total = 2;</code>
     */
    protected $total = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $progress
     *     @type int $total
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Worker\ExecutorService::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>uint32 progress = 1;</code>
     * @return int
     */
    public function getProgress()
    {
        return $this->progress;
    }

    /**
     * Generated from protobuf field <code>uint32 progress = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setProgress($var)
    {
        GPBUtil::checkUint32($var);
        $this->progress = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 total = 2;</code>
     * @return int
     */
    public function getTotal()
    {
        return $this->total;
    }

    /**
     * Generated from protobuf field <code>uint32 total = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setTotal($var)
    {
        GPBUtil::checkUint32($var);
        $this->total = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ProgressUpdate::class, \Eolymp\Worker\ExecuteJobUpdate_ProgressUpdate::class);

