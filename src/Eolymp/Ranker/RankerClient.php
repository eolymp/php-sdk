<?php
# Generated by the protocol buffer compiler. DO NOT EDIT!
# See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-php-esdk for more details.

namespace Eolymp\Ranker;

class RankerClient {

    /** @var callable RPC client */
    private $invoker;

    /**
     * @param callable $invoker for RPC calls
     */
    public function __construct($invoker)
    {
        $this->invoker = $invoker;
    }

    /**
     * Create a scoreboard
     *
     * @param CreateScoreboardInput $input message
     * @param array $context request parameters
     *
     * @return CreateScoreboardOutput output message
     */
    public function CreateScoreboard(CreateScoreboardInput $input, array $context = [])
    {
        return call_user_func($this->invoker, "eolymp.ranker.Ranker/CreateScoreboard", $input, CreateScoreboardOutput::class, $context);
    }

    /**
     * Update existing scoreboard in a contest
     *
     * @param UpdateScoreboardInput $input message
     * @param array $context request parameters
     *
     * @return UpdateScoreboardOutput output message
     */
    public function UpdateScoreboard(UpdateScoreboardInput $input, array $context = [])
    {
        return call_user_func($this->invoker, "eolymp.ranker.Ranker/UpdateScoreboard", $input, UpdateScoreboardOutput::class, $context);
    }

    /**
     * Rebuild scoreboard: recalculate score for all participants
     *
     * @param RebuildScoreboardInput $input message
     * @param array $context request parameters
     *
     * @return RebuildScoreboardOutput output message
     */
    public function RebuildScoreboard(RebuildScoreboardInput $input, array $context = [])
    {
        return call_user_func($this->invoker, "eolymp.ranker.Ranker/RebuildScoreboard", $input, RebuildScoreboardOutput::class, $context);
    }

    /**
     * Delete scoreboard
     *
     * @param DeleteScoreboardInput $input message
     * @param array $context request parameters
     *
     * @return DeleteScoreboardOutput output message
     */
    public function DeleteScoreboard(DeleteScoreboardInput $input, array $context = [])
    {
        return call_user_func($this->invoker, "eolymp.ranker.Ranker/DeleteScoreboard", $input, DeleteScoreboardOutput::class, $context);
    }

    /**
     * Lookup scoreboard by domain key
     *
     * @param LookupScoreboardInput $input message
     * @param array $context request parameters
     *
     * @return LookupScoreboardOutput output message
     */
    public function LookupScoreboard(LookupScoreboardInput $input, array $context = [])
    {
        return call_user_func($this->invoker, "eolymp.ranker.Ranker/LookupScoreboard", $input, LookupScoreboardOutput::class, $context);
    }

    /**
     * Describe scoreboard
     *
     * @param DescribeScoreboardInput $input message
     * @param array $context request parameters
     *
     * @return DescribeScoreboardOutput output message
     */
    public function DescribeScoreboard(DescribeScoreboardInput $input, array $context = [])
    {
        return call_user_func($this->invoker, "eolymp.ranker.Ranker/DescribeScoreboard", $input, DescribeScoreboardOutput::class, $context);
    }

    /**
     * List scoreboards of a contest
     *
     * @param ListScoreboardsInput $input message
     * @param array $context request parameters
     *
     * @return ListScoreboardsOutput output message
     */
    public function ListScoreboards(ListScoreboardsInput $input, array $context = [])
    {
        return call_user_func($this->invoker, "eolymp.ranker.Ranker/ListScoreboards", $input, ListScoreboardsOutput::class, $context);
    }

    /**
     * List scoreboards of a contest
     *
     * @param ListScoreboardRowsInput $input message
     * @param array $context request parameters
     *
     * @return ListScoreboardRowsOutput output message
     */
    public function ListScoreboardRows(ListScoreboardRowsInput $input, array $context = [])
    {
        return call_user_func($this->invoker, "eolymp.ranker.Ranker/ListScoreboardRows", $input, ListScoreboardRowsOutput::class, $context);
    }

    /**
     * Assign contest to a scoreboard
     *
     * @param AssignContestInput $input message
     * @param array $context request parameters
     *
     * @return AssignContestOutput output message
     */
    public function AssignContest(AssignContestInput $input, array $context = [])
    {
        return call_user_func($this->invoker, "eolymp.ranker.Ranker/AssignContest", $input, AssignContestOutput::class, $context);
    }

    /**
     * Unassign contest to a scoreboard
     *
     * @param UnassignContestInput $input message
     * @param array $context request parameters
     *
     * @return UnassignContestOutput output message
     */
    public function UnassignContest(UnassignContestInput $input, array $context = [])
    {
        return call_user_func($this->invoker, "eolymp.ranker.Ranker/UnassignContest", $input, UnassignContestOutput::class, $context);
    }

}
