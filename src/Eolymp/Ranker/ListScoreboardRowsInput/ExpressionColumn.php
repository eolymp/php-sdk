<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/ranker/ranker.proto

namespace Eolymp\Ranker\ListScoreboardRowsInput;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.ranker.ListScoreboardRowsInput.ExpressionColumn</code>
 */
class ExpressionColumn extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string key = 1;</code>
     */
    protected $key = '';
    /**
     * Generated from protobuf field <code>.eolymp.wellknown.ExpressionString string = 10;</code>
     */
    protected $string = null;
    /**
     * Generated from protobuf field <code>.eolymp.wellknown.ExpressionInt number = 11;</code>
     */
    protected $number = null;
    /**
     * Generated from protobuf field <code>.eolymp.wellknown.ExpressionEnum enum = 12;</code>
     */
    protected $enum = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $key
     *     @type \Eolymp\Wellknown\ExpressionString $string
     *     @type \Eolymp\Wellknown\ExpressionInt $number
     *     @type \Eolymp\Wellknown\ExpressionEnum $enum
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Ranker\Ranker::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string key = 1;</code>
     * @return string
     */
    public function getKey()
    {
        return $this->key;
    }

    /**
     * Generated from protobuf field <code>string key = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->key = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.wellknown.ExpressionString string = 10;</code>
     * @return \Eolymp\Wellknown\ExpressionString|null
     */
    public function getString()
    {
        return $this->string;
    }

    public function hasString()
    {
        return isset($this->string);
    }

    public function clearString()
    {
        unset($this->string);
    }

    /**
     * Generated from protobuf field <code>.eolymp.wellknown.ExpressionString string = 10;</code>
     * @param \Eolymp\Wellknown\ExpressionString $var
     * @return $this
     */
    public function setString($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Wellknown\ExpressionString::class);
        $this->string = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.wellknown.ExpressionInt number = 11;</code>
     * @return \Eolymp\Wellknown\ExpressionInt|null
     */
    public function getNumber()
    {
        return $this->number;
    }

    public function hasNumber()
    {
        return isset($this->number);
    }

    public function clearNumber()
    {
        unset($this->number);
    }

    /**
     * Generated from protobuf field <code>.eolymp.wellknown.ExpressionInt number = 11;</code>
     * @param \Eolymp\Wellknown\ExpressionInt $var
     * @return $this
     */
    public function setNumber($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Wellknown\ExpressionInt::class);
        $this->number = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.wellknown.ExpressionEnum enum = 12;</code>
     * @return \Eolymp\Wellknown\ExpressionEnum|null
     */
    public function getEnum()
    {
        return $this->enum;
    }

    public function hasEnum()
    {
        return isset($this->enum);
    }

    public function clearEnum()
    {
        unset($this->enum);
    }

    /**
     * Generated from protobuf field <code>.eolymp.wellknown.ExpressionEnum enum = 12;</code>
     * @param \Eolymp\Wellknown\ExpressionEnum $var
     * @return $this
     */
    public function setEnum($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Wellknown\ExpressionEnum::class);
        $this->enum = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ExpressionColumn::class, \Eolymp\Ranker\ListScoreboardRowsInput_ExpressionColumn::class);

