<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/ranker/scoreboard.proto

namespace Eolymp\Ranker\Scoreboard;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.ranker.Scoreboard.Contest</code>
 */
class Contest extends \Google\Protobuf\Internal\Message
{
    /**
     * Contest ID
     *
     * Generated from protobuf field <code>string contest_id = 1;</code>
     */
    protected $contest_id = '';
    /**
     * Name displayed on the scoreboard.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     */
    protected $name = '';
    /**
     * Index used to order contests.
     *
     * Generated from protobuf field <code>uint32 index = 3;</code>
     */
    protected $index = 0;
    /**
     * Results of invisible contests are captured and added to the results, but not shown to participants.
     *
     * Generated from protobuf field <code>bool visible = 4;</code>
     */
    protected $visible = false;
    /**
     * Generated from protobuf field <code>repeated .eolymp.ranker.Scoreboard.Contest.Problem problems = 10;</code>
     */
    private $problems;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $contest_id
     *           Contest ID
     *     @type string $name
     *           Name displayed on the scoreboard.
     *     @type int $index
     *           Index used to order contests.
     *     @type bool $visible
     *           Results of invisible contests are captured and added to the results, but not shown to participants.
     *     @type \Eolymp\Ranker\Scoreboard\Contest\Problem[]|\Google\Protobuf\Internal\RepeatedField $problems
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Ranker\Scoreboard::initOnce();
        parent::__construct($data);
    }

    /**
     * Contest ID
     *
     * Generated from protobuf field <code>string contest_id = 1;</code>
     * @return string
     */
    public function getContestId()
    {
        return $this->contest_id;
    }

    /**
     * Contest ID
     *
     * Generated from protobuf field <code>string contest_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setContestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->contest_id = $var;

        return $this;
    }

    /**
     * Name displayed on the scoreboard.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Name displayed on the scoreboard.
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Index used to order contests.
     *
     * Generated from protobuf field <code>uint32 index = 3;</code>
     * @return int
     */
    public function getIndex()
    {
        return $this->index;
    }

    /**
     * Index used to order contests.
     *
     * Generated from protobuf field <code>uint32 index = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setIndex($var)
    {
        GPBUtil::checkUint32($var);
        $this->index = $var;

        return $this;
    }

    /**
     * Results of invisible contests are captured and added to the results, but not shown to participants.
     *
     * Generated from protobuf field <code>bool visible = 4;</code>
     * @return bool
     */
    public function getVisible()
    {
        return $this->visible;
    }

    /**
     * Results of invisible contests are captured and added to the results, but not shown to participants.
     *
     * Generated from protobuf field <code>bool visible = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setVisible($var)
    {
        GPBUtil::checkBool($var);
        $this->visible = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .eolymp.ranker.Scoreboard.Contest.Problem problems = 10;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getProblems()
    {
        return $this->problems;
    }

    /**
     * Generated from protobuf field <code>repeated .eolymp.ranker.Scoreboard.Contest.Problem problems = 10;</code>
     * @param \Eolymp\Ranker\Scoreboard\Contest\Problem[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setProblems($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Eolymp\Ranker\Scoreboard\Contest\Problem::class);
        $this->problems = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Contest::class, \Eolymp\Ranker\Scoreboard_Contest::class);

