<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/ranker/scoreboard.proto

namespace Eolymp\Ranker\Scoreboard;

use UnexpectedValueException;

/**
 * Protobuf type <code>eolymp.ranker.Scoreboard.ScoringMode</code>
 */
class ScoringMode
{
    /**
     * Reserved, should not be used.
     *
     * Generated from protobuf enum <code>NONE = 0;</code>
     */
    const NONE = 0;
    /**
     * IOI scoring mode ranks participants by total number of points scored in each problem.
     * - Total score is a sum of scores in each problem
     * - Problem score is maximum number of points scored among all submissions.
     *
     * Generated from protobuf enum <code>IOI = 1;</code>
     */
    const IOI = 1;
    /**
     * ICPC scoring mode first ranks participants by number of solved problems and then ranks those who solved
     * problems faster higher. Additional penalty is added for each unsuccessful attempt to solve problem.
     * - Each solved problem gives 1 score point.
     * - Once problem is solved, a penalty point is awarded for each minute it took to solve problem.
     * - Once problem is solved, 20 penalty points are awarded for attempt to solve problem. Attempts are compiled
     *   submissions made before one which solves problem.
     * - Unsolved problem do not add penalty.
     * - Submissions made after problem is solved do not count towards attempts.
     * - Submissions which were not compiled do not count towards attempts.
     *
     * Generated from protobuf enum <code>ICPC = 2;</code>
     */
    const ICPC = 2;

    private static $valueToName = [
        self::NONE => 'NONE',
        self::IOI => 'IOI',
        self::ICPC => 'ICPC',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ScoringMode::class, \Eolymp\Ranker\Scoreboard_ScoringMode::class);

