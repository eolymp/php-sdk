<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/ranker/scoreboard.proto

namespace Eolymp\Ranker\Scoreboard\Row;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.ranker.Scoreboard.Row.Score</code>
 */
class Score extends \Google\Protobuf\Internal\Message
{
    /**
     * Contest identifier.
     *
     * Generated from protobuf field <code>string contest_id = 1;</code>
     */
    protected $contest_id = '';
    /**
     * Problem identifier.
     *
     * Generated from protobuf field <code>string problem_id = 2;</code>
     */
    protected $problem_id = '';
    /**
     * Number of attempts before problem was solved.
     *
     * Generated from protobuf field <code>uint32 attempts = 10;</code>
     */
    protected $attempts = 0;
    /**
     * How much time it took to solve problem since beginning of the contest, in seconds.
     *
     * Generated from protobuf field <code>uint32 solved_in = 11;</code>
     */
    protected $solved_in = 0;
    /**
     * Time when problem was solved.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp solved_at = 12;</code>
     */
    protected $solved_at = null;
    /**
     * Score.
     *
     * Generated from protobuf field <code>float score = 20;</code>
     */
    protected $score = 0.0;
    /**
     * Penalty.
     *
     * Generated from protobuf field <code>float penalty = 21;</code>
     */
    protected $penalty = 0.0;
    /**
     * Percentage of points scored, from 0 to 1.
     *
     * Generated from protobuf field <code>float percentage = 22;</code>
     */
    protected $percentage = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $contest_id
     *           Contest identifier.
     *     @type string $problem_id
     *           Problem identifier.
     *     @type int $attempts
     *           Number of attempts before problem was solved.
     *     @type int $solved_in
     *           How much time it took to solve problem since beginning of the contest, in seconds.
     *     @type \Google\Protobuf\Timestamp $solved_at
     *           Time when problem was solved.
     *     @type float $score
     *           Score.
     *     @type float $penalty
     *           Penalty.
     *     @type float $percentage
     *           Percentage of points scored, from 0 to 1.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Ranker\Scoreboard::initOnce();
        parent::__construct($data);
    }

    /**
     * Contest identifier.
     *
     * Generated from protobuf field <code>string contest_id = 1;</code>
     * @return string
     */
    public function getContestId()
    {
        return $this->contest_id;
    }

    /**
     * Contest identifier.
     *
     * Generated from protobuf field <code>string contest_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setContestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->contest_id = $var;

        return $this;
    }

    /**
     * Problem identifier.
     *
     * Generated from protobuf field <code>string problem_id = 2;</code>
     * @return string
     */
    public function getProblemId()
    {
        return $this->problem_id;
    }

    /**
     * Problem identifier.
     *
     * Generated from protobuf field <code>string problem_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setProblemId($var)
    {
        GPBUtil::checkString($var, True);
        $this->problem_id = $var;

        return $this;
    }

    /**
     * Number of attempts before problem was solved.
     *
     * Generated from protobuf field <code>uint32 attempts = 10;</code>
     * @return int
     */
    public function getAttempts()
    {
        return $this->attempts;
    }

    /**
     * Number of attempts before problem was solved.
     *
     * Generated from protobuf field <code>uint32 attempts = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setAttempts($var)
    {
        GPBUtil::checkUint32($var);
        $this->attempts = $var;

        return $this;
    }

    /**
     * How much time it took to solve problem since beginning of the contest, in seconds.
     *
     * Generated from protobuf field <code>uint32 solved_in = 11;</code>
     * @return int
     */
    public function getSolvedIn()
    {
        return $this->solved_in;
    }

    /**
     * How much time it took to solve problem since beginning of the contest, in seconds.
     *
     * Generated from protobuf field <code>uint32 solved_in = 11;</code>
     * @param int $var
     * @return $this
     */
    public function setSolvedIn($var)
    {
        GPBUtil::checkUint32($var);
        $this->solved_in = $var;

        return $this;
    }

    /**
     * Time when problem was solved.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp solved_at = 12;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getSolvedAt()
    {
        return $this->solved_at;
    }

    /**
     * Time when problem was solved.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp solved_at = 12;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setSolvedAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->solved_at = $var;

        return $this;
    }

    /**
     * Score.
     *
     * Generated from protobuf field <code>float score = 20;</code>
     * @return float
     */
    public function getScore()
    {
        return $this->score;
    }

    /**
     * Score.
     *
     * Generated from protobuf field <code>float score = 20;</code>
     * @param float $var
     * @return $this
     */
    public function setScore($var)
    {
        GPBUtil::checkFloat($var);
        $this->score = $var;

        return $this;
    }

    /**
     * Penalty.
     *
     * Generated from protobuf field <code>float penalty = 21;</code>
     * @return float
     */
    public function getPenalty()
    {
        return $this->penalty;
    }

    /**
     * Penalty.
     *
     * Generated from protobuf field <code>float penalty = 21;</code>
     * @param float $var
     * @return $this
     */
    public function setPenalty($var)
    {
        GPBUtil::checkFloat($var);
        $this->penalty = $var;

        return $this;
    }

    /**
     * Percentage of points scored, from 0 to 1.
     *
     * Generated from protobuf field <code>float percentage = 22;</code>
     * @return float
     */
    public function getPercentage()
    {
        return $this->percentage;
    }

    /**
     * Percentage of points scored, from 0 to 1.
     *
     * Generated from protobuf field <code>float percentage = 22;</code>
     * @param float $var
     * @return $this
     */
    public function setPercentage($var)
    {
        GPBUtil::checkFloat($var);
        $this->percentage = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Score::class, \Eolymp\Ranker\Scoreboard_Row_Score::class);

