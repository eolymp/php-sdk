<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eolymp/ranker/ranker.proto

namespace Eolymp\Ranker;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>eolymp.ranker.ListScoreboardRowsInput</code>
 */
class ListScoreboardRowsInput extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string scoreboard_id = 1;</code>
     */
    protected $scoreboard_id = '';
    /**
     * Mode for fetching score value (see enum description).
     *
     * Generated from protobuf field <code>.eolymp.ranker.Scoreboard.FetchingMode mode = 2;</code>
     */
    protected $mode = 0;
    /**
     * Time offset allows to fetch score at particular moment in the competition. Time offset is specified as number of
     * seconds since the participant has started the competition. When time offset is 0, the latest score is returned.
     * This value is ignored if mode is not PUNCTUAL.
     *
     * Generated from protobuf field <code>int32 timeline_offset = 3;</code>
     */
    protected $timeline_offset = 0;
    /**
     * Generated from protobuf field <code>int32 offset = 10;</code>
     */
    protected $offset = 0;
    /**
     * Generated from protobuf field <code>int32 size = 11;</code>
     */
    protected $size = 0;
    /**
     * Generated from protobuf field <code>.eolymp.ranker.ListScoreboardRowsInput.Filter filters = 40;</code>
     */
    protected $filters = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $scoreboard_id
     *     @type int $mode
     *           Mode for fetching score value (see enum description).
     *     @type int $timeline_offset
     *           Time offset allows to fetch score at particular moment in the competition. Time offset is specified as number of
     *           seconds since the participant has started the competition. When time offset is 0, the latest score is returned.
     *           This value is ignored if mode is not PUNCTUAL.
     *     @type int $offset
     *     @type int $size
     *     @type \Eolymp\Ranker\ListScoreboardRowsInput\Filter $filters
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Eolymp\Ranker\Ranker::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string scoreboard_id = 1;</code>
     * @return string
     */
    public function getScoreboardId()
    {
        return $this->scoreboard_id;
    }

    /**
     * Generated from protobuf field <code>string scoreboard_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setScoreboardId($var)
    {
        GPBUtil::checkString($var, True);
        $this->scoreboard_id = $var;

        return $this;
    }

    /**
     * Mode for fetching score value (see enum description).
     *
     * Generated from protobuf field <code>.eolymp.ranker.Scoreboard.FetchingMode mode = 2;</code>
     * @return int
     */
    public function getMode()
    {
        return $this->mode;
    }

    /**
     * Mode for fetching score value (see enum description).
     *
     * Generated from protobuf field <code>.eolymp.ranker.Scoreboard.FetchingMode mode = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setMode($var)
    {
        GPBUtil::checkEnum($var, \Eolymp\Ranker\Scoreboard_FetchingMode::class);
        $this->mode = $var;

        return $this;
    }

    /**
     * Time offset allows to fetch score at particular moment in the competition. Time offset is specified as number of
     * seconds since the participant has started the competition. When time offset is 0, the latest score is returned.
     * This value is ignored if mode is not PUNCTUAL.
     *
     * Generated from protobuf field <code>int32 timeline_offset = 3;</code>
     * @return int
     */
    public function getTimelineOffset()
    {
        return $this->timeline_offset;
    }

    /**
     * Time offset allows to fetch score at particular moment in the competition. Time offset is specified as number of
     * seconds since the participant has started the competition. When time offset is 0, the latest score is returned.
     * This value is ignored if mode is not PUNCTUAL.
     *
     * Generated from protobuf field <code>int32 timeline_offset = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setTimelineOffset($var)
    {
        GPBUtil::checkInt32($var);
        $this->timeline_offset = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 offset = 10;</code>
     * @return int
     */
    public function getOffset()
    {
        return $this->offset;
    }

    /**
     * Generated from protobuf field <code>int32 offset = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setOffset($var)
    {
        GPBUtil::checkInt32($var);
        $this->offset = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 size = 11;</code>
     * @return int
     */
    public function getSize()
    {
        return $this->size;
    }

    /**
     * Generated from protobuf field <code>int32 size = 11;</code>
     * @param int $var
     * @return $this
     */
    public function setSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->size = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.eolymp.ranker.ListScoreboardRowsInput.Filter filters = 40;</code>
     * @return \Eolymp\Ranker\ListScoreboardRowsInput\Filter
     */
    public function getFilters()
    {
        return $this->filters;
    }

    /**
     * Generated from protobuf field <code>.eolymp.ranker.ListScoreboardRowsInput.Filter filters = 40;</code>
     * @param \Eolymp\Ranker\ListScoreboardRowsInput\Filter $var
     * @return $this
     */
    public function setFilters($var)
    {
        GPBUtil::checkMessage($var, \Eolymp\Ranker\ListScoreboardRowsInput_Filter::class);
        $this->filters = $var;

        return $this;
    }

}

